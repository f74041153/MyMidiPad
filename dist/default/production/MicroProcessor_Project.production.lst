

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Jan 06 20:07:15 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.44
    47                           ; Generated 14/09/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4520 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataBANK0
    82  0031D2                     __pidataBANK0:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _play_mode
    86  0031D2  0001               	dw	1
    87                           
    88                           	psect	mediumconst
    89  0079AC                     __pmediumconst:
    90                           	opt stack 0
    91  0079AC  00                 	db	0
    92  0079AD                     _arrow:
    93                           	opt stack 0
    94  0079AD  00                 	db	0
    95  0079AE  64                 	db	100
    96  0079AF  64                 	db	100
    97  0079B0  64                 	db	100
    98  0079B1  01                 	db	1
    99  0079B2  04                 	db	4
   100  0079B3  05                 	db	5
   101  0079B4  64                 	db	100
   102  0079B5  06                 	db	6
   103  0079B6  09                 	db	9
   104  0079B7  0A                 	db	10
   105  0079B8  64                 	db	100
   106  0079B9  0B                 	db	11
   107  0079BA  0E                 	db	14
   108  0079BB  0F                 	db	15
   109  0079BC  64                 	db	100
   110  0079BD  01                 	db	1
   111  0079BE  64                 	db	100
   112  0079BF  64                 	db	100
   113  0079C0  64                 	db	100
   114  0079C1  00                 	db	0
   115  0079C2  02                 	db	2
   116  0079C3  05                 	db	5
   117  0079C4  64                 	db	100
   118  0079C5  04                 	db	4
   119  0079C6  06                 	db	6
   120  0079C7  09                 	db	9
   121  0079C8  64                 	db	100
   122  0079C9  08                 	db	8
   123  0079CA  0A                 	db	10
   124  0079CB  0D                 	db	13
   125  0079CC  64                 	db	100
   126  0079CD  02                 	db	2
   127  0079CE  64                 	db	100
   128  0079CF  64                 	db	100
   129  0079D0  64                 	db	100
   130  0079D1  01                 	db	1
   131  0079D2  03                 	db	3
   132  0079D3  06                 	db	6
   133  0079D4  64                 	db	100
   134  0079D5  05                 	db	5
   135  0079D6  07                 	db	7
   136  0079D7  0A                 	db	10
   137  0079D8  64                 	db	100
   138  0079D9  09                 	db	9
   139  0079DA  0B                 	db	11
   140  0079DB  0E                 	db	14
   141  0079DC  64                 	db	100
   142  0079DD  03                 	db	3
   143  0079DE  64                 	db	100
   144  0079DF  64                 	db	100
   145  0079E0  64                 	db	100
   146  0079E1  02                 	db	2
   147  0079E2  06                 	db	6
   148  0079E3  07                 	db	7
   149  0079E4  64                 	db	100
   150  0079E5  05                 	db	5
   151  0079E6  09                 	db	9
   152  0079E7  0A                 	db	10
   153  0079E8  64                 	db	100
   154  0079E9  08                 	db	8
   155  0079EA  0C                 	db	12
   156  0079EB  0D                 	db	13
   157  0079EC  64                 	db	100
   158  0079ED  04                 	db	4
   159  0079EE  64                 	db	100
   160  0079EF  64                 	db	100
   161  0079F0  64                 	db	100
   162  0079F1  00                 	db	0
   163  0079F2  05                 	db	5
   164  0079F3  08                 	db	8
   165  0079F4  64                 	db	100
   166  0079F5  01                 	db	1
   167  0079F6  06                 	db	6
   168  0079F7  09                 	db	9
   169  0079F8  64                 	db	100
   170  0079F9  02                 	db	2
   171  0079FA  07                 	db	7
   172  0079FB  0A                 	db	10
   173  0079FC  64                 	db	100
   174  0079FD  05                 	db	5
   175  0079FE  64                 	db	100
   176  0079FF  64                 	db	100
   177  007A00  64                 	db	100
   178  007A01  01                 	db	1
   179  007A02  04                 	db	4
   180  007A03  06                 	db	6
   181  007A04  09                 	db	9
   182  007A05  07                 	db	7
   183  007A06  0D                 	db	13
   184  007A07  64                 	db	100
   185  007A08  64                 	db	100
   186  007A09  64                 	db	100
   187  007A0A  64                 	db	100
   188  007A0B  64                 	db	100
   189  007A0C  64                 	db	100
   190  007A0D  06                 	db	6
   191  007A0E  64                 	db	100
   192  007A0F  64                 	db	100
   193  007A10  64                 	db	100
   194  007A11  02                 	db	2
   195  007A12  05                 	db	5
   196  007A13  07                 	db	7
   197  007A14  0A                 	db	10
   198  007A15  04                 	db	4
   199  007A16  0E                 	db	14
   200  007A17  64                 	db	100
   201  007A18  64                 	db	100
   202  007A19  64                 	db	100
   203  007A1A  64                 	db	100
   204  007A1B  64                 	db	100
   205  007A1C  64                 	db	100
   206  007A1D  07                 	db	7
   207  007A1E  64                 	db	100
   208  007A1F  64                 	db	100
   209  007A20  64                 	db	100
   210  007A21  03                 	db	3
   211  007A22  06                 	db	6
   212  007A23  0B                 	db	11
   213  007A24  64                 	db	100
   214  007A25  02                 	db	2
   215  007A26  05                 	db	5
   216  007A27  0A                 	db	10
   217  007A28  64                 	db	100
   218  007A29  01                 	db	1
   219  007A2A  04                 	db	4
   220  007A2B  09                 	db	9
   221  007A2C  64                 	db	100
   222  007A2D  08                 	db	8
   223  007A2E  64                 	db	100
   224  007A2F  64                 	db	100
   225  007A30  64                 	db	100
   226  007A31  04                 	db	4
   227  007A32  09                 	db	9
   228  007A33  0C                 	db	12
   229  007A34  64                 	db	100
   230  007A35  05                 	db	5
   231  007A36  0A                 	db	10
   232  007A37  0D                 	db	13
   233  007A38  64                 	db	100
   234  007A39  06                 	db	6
   235  007A3A  0B                 	db	11
   236  007A3B  0E                 	db	14
   237  007A3C  64                 	db	100
   238  007A3D  09                 	db	9
   239  007A3E  64                 	db	100
   240  007A3F  64                 	db	100
   241  007A40  64                 	db	100
   242  007A41  05                 	db	5
   243  007A42  08                 	db	8
   244  007A43  0A                 	db	10
   245  007A44  0D                 	db	13
   246  007A45  01                 	db	1
   247  007A46  0B                 	db	11
   248  007A47  64                 	db	100
   249  007A48  64                 	db	100
   250  007A49  64                 	db	100
   251  007A4A  64                 	db	100
   252  007A4B  64                 	db	100
   253  007A4C  64                 	db	100
   254  007A4D  0A                 	db	10
   255  007A4E  64                 	db	100
   256  007A4F  64                 	db	100
   257  007A50  64                 	db	100
   258  007A51  06                 	db	6
   259  007A52  09                 	db	9
   260  007A53  0B                 	db	11
   261  007A54  0E                 	db	14
   262  007A55  02                 	db	2
   263  007A56  08                 	db	8
   264  007A57  64                 	db	100
   265  007A58  64                 	db	100
   266  007A59  64                 	db	100
   267  007A5A  64                 	db	100
   268  007A5B  64                 	db	100
   269  007A5C  64                 	db	100
   270  007A5D  0B                 	db	11
   271  007A5E  64                 	db	100
   272  007A5F  64                 	db	100
   273  007A60  64                 	db	100
   274  007A61  07                 	db	7
   275  007A62  0A                 	db	10
   276  007A63  0F                 	db	15
   277  007A64  64                 	db	100
   278  007A65  06                 	db	6
   279  007A66  09                 	db	9
   280  007A67  0E                 	db	14
   281  007A68  64                 	db	100
   282  007A69  05                 	db	5
   283  007A6A  08                 	db	8
   284  007A6B  0D                 	db	13
   285  007A6C  64                 	db	100
   286  007A6D  0C                 	db	12
   287  007A6E  64                 	db	100
   288  007A6F  64                 	db	100
   289  007A70  64                 	db	100
   290  007A71  08                 	db	8
   291  007A72  09                 	db	9
   292  007A73  0D                 	db	13
   293  007A74  64                 	db	100
   294  007A75  05                 	db	5
   295  007A76  06                 	db	6
   296  007A77  0A                 	db	10
   297  007A78  64                 	db	100
   298  007A79  02                 	db	2
   299  007A7A  03                 	db	3
   300  007A7B  07                 	db	7
   301  007A7C  64                 	db	100
   302  007A7D  0D                 	db	13
   303  007A7E  64                 	db	100
   304  007A7F  64                 	db	100
   305  007A80  64                 	db	100
   306  007A81  09                 	db	9
   307  007A82  0C                 	db	12
   308  007A83  0E                 	db	14
   309  007A84  64                 	db	100
   310  007A85  05                 	db	5
   311  007A86  08                 	db	8
   312  007A87  0A                 	db	10
   313  007A88  64                 	db	100
   314  007A89  01                 	db	1
   315  007A8A  04                 	db	4
   316  007A8B  06                 	db	6
   317  007A8C  64                 	db	100
   318  007A8D  0E                 	db	14
   319  007A8E  64                 	db	100
   320  007A8F  64                 	db	100
   321  007A90  64                 	db	100
   322  007A91  0A                 	db	10
   323  007A92  0D                 	db	13
   324  007A93  0F                 	db	15
   325  007A94  64                 	db	100
   326  007A95  06                 	db	6
   327  007A96  09                 	db	9
   328  007A97  0B                 	db	11
   329  007A98  64                 	db	100
   330  007A99  02                 	db	2
   331  007A9A  05                 	db	5
   332  007A9B  07                 	db	7
   333  007A9C  64                 	db	100
   334  007A9D  0F                 	db	15
   335  007A9E  64                 	db	100
   336  007A9F  64                 	db	100
   337  007AA0  64                 	db	100
   338  007AA1  0A                 	db	10
   339  007AA2  0B                 	db	11
   340  007AA3  0E                 	db	14
   341  007AA4  64                 	db	100
   342  007AA5  05                 	db	5
   343  007AA6  06                 	db	6
   344  007AA7  09                 	db	9
   345  007AA8  64                 	db	100
   346  007AA9  00                 	db	0
   347  007AAA  01                 	db	1
   348  007AAB  04                 	db	4
   349  007AAC  64                 	db	100
   350  007AAD                     __end_of_arrow:
   351                           	opt stack 0
   352  007AAD                     _show7_2:
   353                           	opt stack 0
   354  007AAD  00                 	db	0
   355  007AAE  05                 	db	5
   356  007AAF  0A                 	db	10
   357  007AB0  0F                 	db	15
   358  007AB1  13                 	db	19
   359  007AB2  16                 	db	22
   360  007AB3  19                 	db	25
   361  007AB4  1C                 	db	28
   362  007AB5  23                 	db	35
   363  007AB6  26                 	db	38
   364  007AB7  29                 	db	41
   365  007AB8  2C                 	db	44
   366  007AB9  30                 	db	48
   367  007ABA  35                 	db	53
   368  007ABB  3A                 	db	58
   369  007ABC  3F                 	db	63
   370  007ABD  64                 	db	100
   371  007ABE  64                 	db	100
   372  007ABF  64                 	db	100
   373  007AC0  64                 	db	100
   374  007AC1  64                 	db	100
   375  007AC2  64                 	db	100
   376  007AC3  64                 	db	100
   377  007AC4  64                 	db	100
   378  007AC5  04                 	db	4
   379  007AC6  09                 	db	9
   380  007AC7  0E                 	db	14
   381  007AC8  23                 	db	35
   382  007AC9  30                 	db	48
   383  007ACA  27                 	db	39
   384  007ACB  2A                 	db	42
   385  007ACC  2D                 	db	45
   386  007ACD  1C                 	db	28
   387  007ACE  31                 	db	49
   388  007ACF  36                 	db	54
   389  007AD0  3B                 	db	59
   390  007AD1  0F                 	db	15
   391  007AD2  18                 	db	24
   392  007AD3  15                 	db	21
   393  007AD4  12                 	db	18
   394  007AD5  64                 	db	100
   395  007AD6  64                 	db	100
   396  007AD7  64                 	db	100
   397  007AD8  64                 	db	100
   398  007AD9  64                 	db	100
   399  007ADA  64                 	db	100
   400  007ADB  64                 	db	100
   401  007ADC  64                 	db	100
   402  007ADD  03                 	db	3
   403  007ADE  10                 	db	16
   404  007ADF  06                 	db	6
   405  007AE0  07                 	db	7
   406  007AE1  0A                 	db	10
   407  007AE2  0B                 	db	11
   408  007AE3  0C                 	db	12
   409  007AE4  20                 	db	32
   410  007AE5  21                 	db	33
   411  007AE6  25                 	db	37
   412  007AE7  22                 	db	34
   413  007AE8  26                 	db	38
   414  007AE9  2F                 	db	47
   415  007AEA  3C                 	db	60
   416  007AEB  38                 	db	56
   417  007AEC  39                 	db	57
   418  007AED  34                 	db	52
   419  007AEE  35                 	db	53
   420  007AEF  1F                 	db	31
   421  007AF0  33                 	db	51
   422  007AF1  1A                 	db	26
   423  007AF2  1E                 	db	30
   424  007AF3  19                 	db	25
   425  007AF4  1D                 	db	29
   426  007AF5  02                 	db	2
   427  007AF6  03                 	db	3
   428  007AF7  05                 	db	5
   429  007AF8  06                 	db	6
   430  007AF9  0B                 	db	11
   431  007AFA  18                 	db	24
   432  007AFB  20                 	db	32
   433  007AFC  24                 	db	36
   434  007AFD  25                 	db	37
   435  007AFE  29                 	db	41
   436  007AFF  0E                 	db	14
   437  007B00  22                 	db	34
   438  007B01  3C                 	db	60
   439  007B02  3D                 	db	61
   440  007B03  39                 	db	57
   441  007B04  3A                 	db	58
   442  007B05  34                 	db	52
   443  007B06  27                 	db	39
   444  007B07  1B                 	db	27
   445  007B08  1F                 	db	31
   446  007B09  16                 	db	22
   447  007B0A  1A                 	db	26
   448  007B0B  1D                 	db	29
   449  007B0C  31                 	db	49
   450  007B0D  00                 	db	0
   451  007B0E  01                 	db	1
   452  007B0F  05                 	db	5
   453  007B10  06                 	db	6
   454  007B11  0A                 	db	10
   455  007B12  13                 	db	19
   456  007B13  17                 	db	23
   457  007B14  16                 	db	22
   458  007B15  1A                 	db	26
   459  007B16  19                 	db	25
   460  007B17  28                 	db	40
   461  007B18  2C                 	db	44
   462  007B19  25                 	db	37
   463  007B1A  29                 	db	41
   464  007B1B  26                 	db	38
   465  007B1C  3E                 	db	62
   466  007B1D  3F                 	db	63
   467  007B1E  39                 	db	57
   468  007B1F  3A                 	db	58
   469  007B20  35                 	db	53
   470  007B21  64                 	db	100
   471  007B22  64                 	db	100
   472  007B23  64                 	db	100
   473  007B24  64                 	db	100
   474  007B25  00                 	db	0
   475  007B26  01                 	db	1
   476  007B27  28                 	db	40
   477  007B28  2C                 	db	44
   478  007B29  3E                 	db	62
   479  007B2A  3F                 	db	63
   480  007B2B  13                 	db	19
   481  007B2C  17                 	db	23
   482  007B2D  64                 	db	100
   483  007B2E  64                 	db	100
   484  007B2F  64                 	db	100
   485  007B30  64                 	db	100
   486  007B31  64                 	db	100
   487  007B32  64                 	db	100
   488  007B33  64                 	db	100
   489  007B34  64                 	db	100
   490  007B35  64                 	db	100
   491  007B36  64                 	db	100
   492  007B37  64                 	db	100
   493  007B38  64                 	db	100
   494  007B39  64                 	db	100
   495  007B3A  64                 	db	100
   496  007B3B  64                 	db	100
   497  007B3C  64                 	db	100
   498  007B3D  00                 	db	0
   499  007B3E  2C                 	db	44
   500  007B3F  3F                 	db	63
   501  007B40  13                 	db	19
   502  007B41  64                 	db	100
   503  007B42  64                 	db	100
   504  007B43  64                 	db	100
   505  007B44  64                 	db	100
   506  007B45  64                 	db	100
   507  007B46  64                 	db	100
   508  007B47  64                 	db	100
   509  007B48  64                 	db	100
   510  007B49  64                 	db	100
   511  007B4A  64                 	db	100
   512  007B4B  64                 	db	100
   513  007B4C  64                 	db	100
   514  007B4D  64                 	db	100
   515  007B4E  64                 	db	100
   516  007B4F  64                 	db	100
   517  007B50  64                 	db	100
   518  007B51  64                 	db	100
   519  007B52  64                 	db	100
   520  007B53  64                 	db	100
   521  007B54  64                 	db	100
   522  007B55                     __end_of_show7_2:
   523                           	opt stack 0
   524  007B55                     _show0_3:
   525                           	opt stack 0
   526  007B55  0F                 	db	15
   527  007B56  1C                 	db	28
   528  007B57  23                 	db	35
   529  007B58  30                 	db	48
   530  007B59  64                 	db	100
   531  007B5A  64                 	db	100
   532  007B5B  64                 	db	100
   533  007B5C  64                 	db	100
   534  007B5D  64                 	db	100
   535  007B5E  64                 	db	100
   536  007B5F  64                 	db	100
   537  007B60  64                 	db	100
   538  007B61  64                 	db	100
   539  007B62  64                 	db	100
   540  007B63  64                 	db	100
   541  007B64  64                 	db	100
   542  007B65  64                 	db	100
   543  007B66  64                 	db	100
   544  007B67  64                 	db	100
   545  007B68  64                 	db	100
   546  007B69  0B                 	db	11
   547  007B6A  0E                 	db	14
   548  007B6B  22                 	db	34
   549  007B6C  27                 	db	39
   550  007B6D  18                 	db	24
   551  007B6E  1D                 	db	29
   552  007B6F  31                 	db	49
   553  007B70  34                 	db	52
   554  007B71  64                 	db	100
   555  007B72  64                 	db	100
   556  007B73  64                 	db	100
   557  007B74  64                 	db	100
   558  007B75  64                 	db	100
   559  007B76  64                 	db	100
   560  007B77  64                 	db	100
   561  007B78  64                 	db	100
   562  007B79  64                 	db	100
   563  007B7A  64                 	db	100
   564  007B7B  64                 	db	100
   565  007B7C  64                 	db	100
   566  007B7D  0A                 	db	10
   567  007B7E  0B                 	db	11
   568  007B7F  18                 	db	24
   569  007B80  19                 	db	25
   570  007B81  0E                 	db	14
   571  007B82  22                 	db	34
   572  007B83  26                 	db	38
   573  007B84  27                 	db	39
   574  007B85  34                 	db	52
   575  007B86  35                 	db	53
   576  007B87  1D                 	db	29
   577  007B88  31                 	db	49
   578  007B89  64                 	db	100
   579  007B8A  64                 	db	100
   580  007B8B  64                 	db	100
   581  007B8C  64                 	db	100
   582  007B8D  64                 	db	100
   583  007B8E  64                 	db	100
   584  007B8F  64                 	db	100
   585  007B90  64                 	db	100
   586  007B91  07                 	db	7
   587  007B92  0A                 	db	10
   588  007B93  0D                 	db	13
   589  007B94  21                 	db	33
   590  007B95  26                 	db	38
   591  007B96  2B                 	db	43
   592  007B97  14                 	db	20
   593  007B98  19                 	db	25
   594  007B99  1E                 	db	30
   595  007B9A  32                 	db	50
   596  007B9B  35                 	db	53
   597  007B9C  38                 	db	56
   598  007B9D  64                 	db	100
   599  007B9E  64                 	db	100
   600  007B9F  64                 	db	100
   601  007BA0  64                 	db	100
   602  007BA1  64                 	db	100
   603  007BA2  64                 	db	100
   604  007BA3  64                 	db	100
   605  007BA4  64                 	db	100
   606  007BA5  05                 	db	5
   607  007BA6  06                 	db	6
   608  007BA7  07                 	db	7
   609  007BA8  14                 	db	20
   610  007BA9  15                 	db	21
   611  007BAA  16                 	db	22
   612  007BAB  09                 	db	9
   613  007BAC  0D                 	db	13
   614  007BAD  21                 	db	33
   615  007BAE  25                 	db	37
   616  007BAF  29                 	db	41
   617  007BB0  2A                 	db	42
   618  007BB1  2B                 	db	43
   619  007BB2  38                 	db	56
   620  007BB3  39                 	db	57
   621  007BB4  3A                 	db	58
   622  007BB5  1A                 	db	26
   623  007BB6  1E                 	db	30
   624  007BB7  32                 	db	50
   625  007BB8  36                 	db	54
   626  007BB9  02                 	db	2
   627  007BBA  05                 	db	5
   628  007BBB  08                 	db	8
   629  007BBC  24                 	db	36
   630  007BBD  29                 	db	41
   631  007BBE  2E                 	db	46
   632  007BBF  37                 	db	55
   633  007BC0  3A                 	db	58
   634  007BC1  3D                 	db	61
   635  007BC2  11                 	db	17
   636  007BC3  16                 	db	22
   637  007BC4  1B                 	db	27
   638  007BC5  64                 	db	100
   639  007BC6  64                 	db	100
   640  007BC7  64                 	db	100
   641  007BC8  64                 	db	100
   642  007BC9  64                 	db	100
   643  007BCA  64                 	db	100
   644  007BCB  64                 	db	100
   645  007BCC  64                 	db	100
   646  007BCD                     __end_of_show0_3:
   647                           	opt stack 0
   648  007BCD                     _show7_1:
   649                           	opt stack 0
   650  007BCD  0F                 	db	15
   651  007BCE  1C                 	db	28
   652  007BCF  23                 	db	35
   653  007BD0  30                 	db	48
   654  007BD1  64                 	db	100
   655  007BD2  64                 	db	100
   656  007BD3  64                 	db	100
   657  007BD4  64                 	db	100
   658  007BD5  64                 	db	100
   659  007BD6  64                 	db	100
   660  007BD7  64                 	db	100
   661  007BD8  64                 	db	100
   662  007BD9  64                 	db	100
   663  007BDA  64                 	db	100
   664  007BDB  64                 	db	100
   665  007BDC  64                 	db	100
   666  007BDD  64                 	db	100
   667  007BDE  64                 	db	100
   668  007BDF  64                 	db	100
   669  007BE0  64                 	db	100
   670  007BE1  64                 	db	100
   671  007BE2  64                 	db	100
   672  007BE3  64                 	db	100
   673  007BE4  64                 	db	100
   674  007BE5  64                 	db	100
   675  007BE6  64                 	db	100
   676  007BE7  64                 	db	100
   677  007BE8  64                 	db	100
   678  007BE9  64                 	db	100
   679  007BEA  0A                 	db	10
   680  007BEB  0B                 	db	11
   681  007BEC  0E                 	db	14
   682  007BED  22                 	db	34
   683  007BEE  26                 	db	38
   684  007BEF  27                 	db	39
   685  007BF0  34                 	db	52
   686  007BF1  35                 	db	53
   687  007BF2  31                 	db	49
   688  007BF3  1D                 	db	29
   689  007BF4  19                 	db	25
   690  007BF5  18                 	db	24
   691  007BF6  0B                 	db	11
   692  007BF7  64                 	db	100
   693  007BF8  64                 	db	100
   694  007BF9  64                 	db	100
   695  007BFA  64                 	db	100
   696  007BFB  64                 	db	100
   697  007BFC  64                 	db	100
   698  007BFD  64                 	db	100
   699  007BFE  64                 	db	100
   700  007BFF  64                 	db	100
   701  007C00  64                 	db	100
   702  007C01  64                 	db	100
   703  007C02  64                 	db	100
   704  007C03  64                 	db	100
   705  007C04  64                 	db	100
   706  007C05  64                 	db	100
   707  007C06  64                 	db	100
   708  007C07  05                 	db	5
   709  007C08  06                 	db	6
   710  007C09  07                 	db	7
   711  007C0A  14                 	db	20
   712  007C0B  15                 	db	21
   713  007C0C  09                 	db	9
   714  007C0D  0D                 	db	13
   715  007C0E  21                 	db	33
   716  007C0F  25                 	db	37
   717  007C10  29                 	db	41
   718  007C11  2A                 	db	42
   719  007C12  2B                 	db	43
   720  007C13  38                 	db	56
   721  007C14  39                 	db	57
   722  007C15  3A                 	db	58
   723  007C16  36                 	db	54
   724  007C17  32                 	db	50
   725  007C18  1E                 	db	30
   726  007C19  1A                 	db	26
   727  007C1A  16                 	db	22
   728  007C1B  64                 	db	100
   729  007C1C  64                 	db	100
   730  007C1D  64                 	db	100
   731  007C1E  64                 	db	100
   732  007C1F  64                 	db	100
   733  007C20  64                 	db	100
   734  007C21  64                 	db	100
   735  007C22  64                 	db	100
   736  007C23  64                 	db	100
   737  007C24  00                 	db	0
   738  007C25  01                 	db	1
   739  007C26  02                 	db	2
   740  007C27  03                 	db	3
   741  007C28  10                 	db	16
   742  007C29  11                 	db	17
   743  007C2A  12                 	db	18
   744  007C2B  13                 	db	19
   745  007C2C  04                 	db	4
   746  007C2D  08                 	db	8
   747  007C2E  0C                 	db	12
   748  007C2F  20                 	db	32
   749  007C30  24                 	db	36
   750  007C31  28                 	db	40
   751  007C32  2C                 	db	44
   752  007C33  2D                 	db	45
   753  007C34  2E                 	db	46
   754  007C35  2F                 	db	47
   755  007C36  3C                 	db	60
   756  007C37  3D                 	db	61
   757  007C38  3E                 	db	62
   758  007C39  3F                 	db	63
   759  007C3A  17                 	db	23
   760  007C3B  1B                 	db	27
   761  007C3C  1F                 	db	31
   762  007C3D  33                 	db	51
   763  007C3E  37                 	db	55
   764  007C3F  3B                 	db	59
   765  007C40  3F                 	db	63
   766  007C41                     __end_of_show7_1:
   767                           	opt stack 0
   768  007C41                     _circle:
   769                           	opt stack 0
   770  007C41  00                 	db	0
   771  007C42  01                 	db	1
   772  007C43  02                 	db	2
   773  007C44  03                 	db	3
   774  007C45  10                 	db	16
   775  007C46  11                 	db	17
   776  007C47  12                 	db	18
   777  007C48  16                 	db	22
   778  007C49  1A                 	db	26
   779  007C4A  1E                 	db	30
   780  007C4B  32                 	db	50
   781  007C4C  36                 	db	54
   782  007C4D  3A                 	db	58
   783  007C4E  04                 	db	4
   784  007C4F  08                 	db	8
   785  007C50  0C                 	db	12
   786  007C51  20                 	db	32
   787  007C52  24                 	db	36
   788  007C53  28                 	db	40
   789  007C54  2C                 	db	44
   790  007C55  2D                 	db	45
   791  007C56  2E                 	db	46
   792  007C57  2F                 	db	47
   793  007C58  3C                 	db	60
   794  007C59  3D                 	db	61
   795  007C5A  3E                 	db	62
   796  007C5B  05                 	db	5
   797  007C5C  06                 	db	6
   798  007C5D  07                 	db	7
   799  007C5E  14                 	db	20
   800  007C5F  15                 	db	21
   801  007C60  19                 	db	25
   802  007C61  1D                 	db	29
   803  007C62  31                 	db	49
   804  007C63  35                 	db	53
   805  007C64  39                 	db	57
   806  007C65  09                 	db	9
   807  007C66  0D                 	db	13
   808  007C67  21                 	db	33
   809  007C68  25                 	db	37
   810  007C69  29                 	db	41
   811  007C6A  2A                 	db	42
   812  007C6B  2B                 	db	43
   813  007C6C  38                 	db	56
   814  007C6D  64                 	db	100
   815  007C6E  64                 	db	100
   816  007C6F  64                 	db	100
   817  007C70  64                 	db	100
   818  007C71  64                 	db	100
   819  007C72  64                 	db	100
   820  007C73  64                 	db	100
   821  007C74  64                 	db	100
   822  007C75  0A                 	db	10
   823  007C76  0B                 	db	11
   824  007C77  18                 	db	24
   825  007C78  1C                 	db	28
   826  007C79  0E                 	db	14
   827  007C7A  22                 	db	34
   828  007C7B  26                 	db	38
   829  007C7C  27                 	db	39
   830  007C7D  34                 	db	52
   831  007C7E  30                 	db	48
   832  007C7F  64                 	db	100
   833  007C80  64                 	db	100
   834  007C81  64                 	db	100
   835  007C82  64                 	db	100
   836  007C83  64                 	db	100
   837  007C84  64                 	db	100
   838  007C85  64                 	db	100
   839  007C86  64                 	db	100
   840  007C87  64                 	db	100
   841  007C88  64                 	db	100
   842  007C89  64                 	db	100
   843  007C8A  64                 	db	100
   844  007C8B  64                 	db	100
   845  007C8C  64                 	db	100
   846  007C8D  64                 	db	100
   847  007C8E  64                 	db	100
   848  007C8F  0F                 	db	15
   849  007C90  23                 	db	35
   850  007C91  64                 	db	100
   851  007C92  64                 	db	100
   852  007C93  64                 	db	100
   853  007C94  64                 	db	100
   854  007C95  64                 	db	100
   855  007C96  64                 	db	100
   856  007C97  64                 	db	100
   857  007C98  64                 	db	100
   858  007C99  64                 	db	100
   859  007C9A  64                 	db	100
   860  007C9B  64                 	db	100
   861  007C9C  64                 	db	100
   862  007C9D  64                 	db	100
   863  007C9E  64                 	db	100
   864  007C9F  64                 	db	100
   865  007CA0  64                 	db	100
   866  007CA1  64                 	db	100
   867  007CA2  64                 	db	100
   868  007CA3  64                 	db	100
   869  007CA4  64                 	db	100
   870  007CA5  64                 	db	100
   871  007CA6  64                 	db	100
   872  007CA7  64                 	db	100
   873  007CA8  64                 	db	100
   874  007CA9                     __end_of_circle:
   875                           	opt stack 0
   876  007CA9                     _show4_3:
   877                           	opt stack 0
   878  007CA9  37                 	db	55
   879  007CAA  3A                 	db	58
   880  007CAB  3D                 	db	61
   881  007CAC  3B                 	db	59
   882  007CAD  3E                 	db	62
   883  007CAE  3F                 	db	63
   884  007CAF  64                 	db	100
   885  007CB0  64                 	db	100
   886  007CB1  33                 	db	51
   887  007CB2  36                 	db	54
   888  007CB3  39                 	db	57
   889  007CB4  3C                 	db	60
   890  007CB5  37                 	db	55
   891  007CB6  3A                 	db	58
   892  007CB7  3D                 	db	61
   893  007CB8  64                 	db	100
   894  007CB9  1F                 	db	31
   895  007CBA  32                 	db	50
   896  007CBB  35                 	db	53
   897  007CBC  38                 	db	56
   898  007CBD  33                 	db	51
   899  007CBE  36                 	db	54
   900  007CBF  39                 	db	57
   901  007CC0  3C                 	db	60
   902  007CC1  1B                 	db	27
   903  007CC2  1E                 	db	30
   904  007CC3  31                 	db	49
   905  007CC4  34                 	db	52
   906  007CC5  1F                 	db	31
   907  007CC6  32                 	db	50
   908  007CC7  35                 	db	53
   909  007CC8  38                 	db	56
   910  007CC9  17                 	db	23
   911  007CCA  1A                 	db	26
   912  007CCB  1D                 	db	29
   913  007CCC  30                 	db	48
   914  007CCD  1B                 	db	27
   915  007CCE  1E                 	db	30
   916  007CCF  31                 	db	49
   917  007CD0  34                 	db	52
   918  007CD1  13                 	db	19
   919  007CD2  16                 	db	22
   920  007CD3  19                 	db	25
   921  007CD4  1C                 	db	28
   922  007CD5  17                 	db	23
   923  007CD6  1A                 	db	26
   924  007CD7  1D                 	db	29
   925  007CD8  30                 	db	48
   926  007CD9  12                 	db	18
   927  007CDA  15                 	db	21
   928  007CDB  18                 	db	24
   929  007CDC  0F                 	db	15
   930  007CDD  13                 	db	19
   931  007CDE  16                 	db	22
   932  007CDF  19                 	db	25
   933  007CE0  1C                 	db	28
   934  007CE1  11                 	db	17
   935  007CE2  14                 	db	20
   936  007CE3  0B                 	db	11
   937  007CE4  0E                 	db	14
   938  007CE5  12                 	db	18
   939  007CE6  15                 	db	21
   940  007CE7  18                 	db	24
   941  007CE8  0F                 	db	15
   942  007CE9  10                 	db	16
   943  007CEA  07                 	db	7
   944  007CEB  0A                 	db	10
   945  007CEC  0D                 	db	13
   946  007CED  11                 	db	17
   947  007CEE  14                 	db	20
   948  007CEF  0B                 	db	11
   949  007CF0  0E                 	db	14
   950  007CF1  03                 	db	3
   951  007CF2  06                 	db	6
   952  007CF3  09                 	db	9
   953  007CF4  0C                 	db	12
   954  007CF5  10                 	db	16
   955  007CF6  07                 	db	7
   956  007CF7  0A                 	db	10
   957  007CF8  0D                 	db	13
   958  007CF9  02                 	db	2
   959  007CFA  05                 	db	5
   960  007CFB  08                 	db	8
   961  007CFC  03                 	db	3
   962  007CFD  06                 	db	6
   963  007CFE  09                 	db	9
   964  007CFF  0C                 	db	12
   965  007D00  64                 	db	100
   966  007D01  00                 	db	0
   967  007D02  01                 	db	1
   968  007D03  02                 	db	2
   969  007D04  04                 	db	4
   970  007D05  05                 	db	5
   971  007D06  08                 	db	8
   972  007D07  64                 	db	100
   973  007D08  64                 	db	100
   974  007D09                     __end_of_show4_3:
   975                           	opt stack 0
   976  007D09                     _show4_2:
   977                           	opt stack 0
   978  007D09  00                 	db	0
   979  007D0A  01                 	db	1
   980  007D0B  02                 	db	2
   981  007D0C  04                 	db	4
   982  007D0D  05                 	db	5
   983  007D0E  08                 	db	8
   984  007D0F  64                 	db	100
   985  007D10  64                 	db	100
   986  007D11  02                 	db	2
   987  007D12  05                 	db	5
   988  007D13  08                 	db	8
   989  007D14  03                 	db	3
   990  007D15  06                 	db	6
   991  007D16  09                 	db	9
   992  007D17  0C                 	db	12
   993  007D18  64                 	db	100
   994  007D19  03                 	db	3
   995  007D1A  06                 	db	6
   996  007D1B  09                 	db	9
   997  007D1C  0C                 	db	12
   998  007D1D  07                 	db	7
   999  007D1E  0A                 	db	10
  1000  007D1F  0D                 	db	13
  1001  007D20  20                 	db	32
  1002  007D21  07                 	db	7
  1003  007D22  0A                 	db	10
  1004  007D23  0D                 	db	13
  1005  007D24  20                 	db	32
  1006  007D25  0B                 	db	11
  1007  007D26  0E                 	db	14
  1008  007D27  21                 	db	33
  1009  007D28  24                 	db	36
  1010  007D29  0B                 	db	11
  1011  007D2A  0E                 	db	14
  1012  007D2B  21                 	db	33
  1013  007D2C  24                 	db	36
  1014  007D2D  0F                 	db	15
  1015  007D2E  22                 	db	34
  1016  007D2F  25                 	db	37
  1017  007D30  28                 	db	40
  1018  007D31  0F                 	db	15
  1019  007D32  22                 	db	34
  1020  007D33  25                 	db	37
  1021  007D34  28                 	db	40
  1022  007D35  23                 	db	35
  1023  007D36  26                 	db	38
  1024  007D37  29                 	db	41
  1025  007D38  2C                 	db	44
  1026  007D39  23                 	db	35
  1027  007D3A  26                 	db	38
  1028  007D3B  29                 	db	41
  1029  007D3C  2C                 	db	44
  1030  007D3D  30                 	db	48
  1031  007D3E  27                 	db	39
  1032  007D3F  2A                 	db	42
  1033  007D40  2D                 	db	45
  1034  007D41  30                 	db	48
  1035  007D42  27                 	db	39
  1036  007D43  2A                 	db	42
  1037  007D44  2D                 	db	45
  1038  007D45  31                 	db	49
  1039  007D46  34                 	db	52
  1040  007D47  2B                 	db	43
  1041  007D48  2E                 	db	46
  1042  007D49  31                 	db	49
  1043  007D4A  34                 	db	52
  1044  007D4B  2B                 	db	43
  1045  007D4C  2E                 	db	46
  1046  007D4D  32                 	db	50
  1047  007D4E  35                 	db	53
  1048  007D4F  38                 	db	56
  1049  007D50  2F                 	db	47
  1050  007D51  32                 	db	50
  1051  007D52  35                 	db	53
  1052  007D53  38                 	db	56
  1053  007D54  2F                 	db	47
  1054  007D55  33                 	db	51
  1055  007D56  36                 	db	54
  1056  007D57  39                 	db	57
  1057  007D58  3C                 	db	60
  1058  007D59  33                 	db	51
  1059  007D5A  36                 	db	54
  1060  007D5B  39                 	db	57
  1061  007D5C  3C                 	db	60
  1062  007D5D  37                 	db	55
  1063  007D5E  3A                 	db	58
  1064  007D5F  3D                 	db	61
  1065  007D60  64                 	db	100
  1066  007D61  37                 	db	55
  1067  007D62  3A                 	db	58
  1068  007D63  3D                 	db	61
  1069  007D64  3B                 	db	59
  1070  007D65  3E                 	db	62
  1071  007D66  3F                 	db	63
  1072  007D67  64                 	db	100
  1073  007D68  64                 	db	100
  1074  007D69                     __end_of_show4_2:
  1075                           	opt stack 0
  1076  007D69                     _show3_1:
  1077                           	opt stack 0
  1078  007D69  00                 	db	0
  1079  007D6A  01                 	db	1
  1080  007D6B  02                 	db	2
  1081  007D6C  03                 	db	3
  1082  007D6D  2F                 	db	47
  1083  007D6E  3C                 	db	60
  1084  007D6F  3D                 	db	61
  1085  007D70  3E                 	db	62
  1086  007D71  01                 	db	1
  1087  007D72  02                 	db	2
  1088  007D73  03                 	db	3
  1089  007D74  10                 	db	16
  1090  007D75  2E                 	db	46
  1091  007D76  2F                 	db	47
  1092  007D77  3C                 	db	60
  1093  007D78  3D                 	db	61
  1094  007D79  02                 	db	2
  1095  007D7A  03                 	db	3
  1096  007D7B  10                 	db	16
  1097  007D7C  11                 	db	17
  1098  007D7D  2D                 	db	45
  1099  007D7E  2E                 	db	46
  1100  007D7F  2F                 	db	47
  1101  007D80  3C                 	db	60
  1102  007D81  03                 	db	3
  1103  007D82  10                 	db	16
  1104  007D83  11                 	db	17
  1105  007D84  12                 	db	18
  1106  007D85  2C                 	db	44
  1107  007D86  2D                 	db	45
  1108  007D87  2E                 	db	46
  1109  007D88  2F                 	db	47
  1110  007D89  10                 	db	16
  1111  007D8A  11                 	db	17
  1112  007D8B  12                 	db	18
  1113  007D8C  16                 	db	22
  1114  007D8D  28                 	db	40
  1115  007D8E  2C                 	db	44
  1116  007D8F  2D                 	db	45
  1117  007D90  2E                 	db	46
  1118  007D91  11                 	db	17
  1119  007D92  12                 	db	18
  1120  007D93  16                 	db	22
  1121  007D94  1A                 	db	26
  1122  007D95  24                 	db	36
  1123  007D96  28                 	db	40
  1124  007D97  2C                 	db	44
  1125  007D98  2D                 	db	45
  1126  007D99  12                 	db	18
  1127  007D9A  16                 	db	22
  1128  007D9B  1A                 	db	26
  1129  007D9C  1E                 	db	30
  1130  007D9D  20                 	db	32
  1131  007D9E  24                 	db	36
  1132  007D9F  28                 	db	40
  1133  007DA0  2C                 	db	44
  1134  007DA1  16                 	db	22
  1135  007DA2  1A                 	db	26
  1136  007DA3  1E                 	db	30
  1137  007DA4  32                 	db	50
  1138  007DA5  0C                 	db	12
  1139  007DA6  20                 	db	32
  1140  007DA7  24                 	db	36
  1141  007DA8  28                 	db	40
  1142  007DA9  1A                 	db	26
  1143  007DAA  1E                 	db	30
  1144  007DAB  32                 	db	50
  1145  007DAC  36                 	db	54
  1146  007DAD  08                 	db	8
  1147  007DAE  0C                 	db	12
  1148  007DAF  20                 	db	32
  1149  007DB0  24                 	db	36
  1150  007DB1  1E                 	db	30
  1151  007DB2  32                 	db	50
  1152  007DB3  36                 	db	54
  1153  007DB4  3A                 	db	58
  1154  007DB5  04                 	db	4
  1155  007DB6  08                 	db	8
  1156  007DB7  0C                 	db	12
  1157  007DB8  20                 	db	32
  1158  007DB9                     __end_of_show3_1:
  1159                           	opt stack 0
  1160  007DB9                     _drum_midi:
  1161                           	opt stack 0
  1162  007DB9  23                 	db	35
  1163  007DBA  24                 	db	36
  1164  007DBB  25                 	db	37
  1165  007DBC  26                 	db	38
  1166  007DBD  27                 	db	39
  1167  007DBE  28                 	db	40
  1168  007DBF  29                 	db	41
  1169  007DC0  00                 	db	0
  1170  007DC1  2A                 	db	42
  1171  007DC2  2B                 	db	43
  1172  007DC3  2C                 	db	44
  1173  007DC4  2D                 	db	45
  1174  007DC5  2E                 	db	46
  1175  007DC6  2F                 	db	47
  1176  007DC7  30                 	db	48
  1177  007DC8  00                 	db	0
  1178  007DC9  31                 	db	49
  1179  007DCA  32                 	db	50
  1180  007DCB  33                 	db	51
  1181  007DCC  34                 	db	52
  1182  007DCD  35                 	db	53
  1183  007DCE  36                 	db	54
  1184  007DCF  37                 	db	55
  1185  007DD0  00                 	db	0
  1186  007DD1  38                 	db	56
  1187  007DD2  39                 	db	57
  1188  007DD3  3A                 	db	58
  1189  007DD4  3B                 	db	59
  1190  007DD5  3C                 	db	60
  1191  007DD6  3D                 	db	61
  1192  007DD7  3E                 	db	62
  1193  007DD8  00                 	db	0
  1194  007DD9  3E                 	db	62
  1195  007DDA  3F                 	db	63
  1196  007DDB  40                 	db	64
  1197  007DDC  41                 	db	65
  1198  007DDD  42                 	db	66
  1199  007DDE  43                 	db	67
  1200  007DDF  44                 	db	68
  1201  007DE0  00                 	db	0
  1202  007DE1  45                 	db	69
  1203  007DE2  46                 	db	70
  1204  007DE3  47                 	db	71
  1205  007DE4  48                 	db	72
  1206  007DE5  49                 	db	73
  1207  007DE6  4A                 	db	74
  1208  007DE7  4B                 	db	75
  1209  007DE8  00                 	db	0
  1210  007DE9  4C                 	db	76
  1211  007DEA  4D                 	db	77
  1212  007DEB  4E                 	db	78
  1213  007DEC  4F                 	db	79
  1214  007DED  50                 	db	80
  1215  007DEE  51                 	db	81
  1216  007DEF  23                 	db	35
  1217  007DF0  00                 	db	0
  1218  007DF1  24                 	db	36
  1219  007DF2  25                 	db	37
  1220  007DF3  26                 	db	38
  1221  007DF4  27                 	db	39
  1222  007DF5  28                 	db	40
  1223  007DF6  29                 	db	41
  1224  007DF7  2A                 	db	42
  1225  007DF8  00                 	db	0
  1226  007DF9                     __end_of_drum_midi:
  1227                           	opt stack 0
  1228  007DF9                     _i2xy64:
  1229                           	opt stack 0
  1230  007DF9  00                 	db	0
  1231  007DFA  10                 	db	16
  1232  007DFB  20                 	db	32
  1233  007DFC  30                 	db	48
  1234  007DFD  01                 	db	1
  1235  007DFE  11                 	db	17
  1236  007DFF  21                 	db	33
  1237  007E00  31                 	db	49
  1238  007E01  02                 	db	2
  1239  007E02  12                 	db	18
  1240  007E03  22                 	db	34
  1241  007E04  32                 	db	50
  1242  007E05  03                 	db	3
  1243  007E06  13                 	db	19
  1244  007E07  23                 	db	35
  1245  007E08  33                 	db	51
  1246  007E09  40                 	db	64
  1247  007E0A  50                 	db	80
  1248  007E0B  60                 	db	96
  1249  007E0C  70                 	db	112
  1250  007E0D  41                 	db	65
  1251  007E0E  51                 	db	81
  1252  007E0F  61                 	db	97
  1253  007E10  71                 	db	113
  1254  007E11  42                 	db	66
  1255  007E12  52                 	db	82
  1256  007E13  62                 	db	98
  1257  007E14  72                 	db	114
  1258  007E15  43                 	db	67
  1259  007E16  53                 	db	83
  1260  007E17  63                 	db	99
  1261  007E18  73                 	db	115
  1262  007E19  04                 	db	4
  1263  007E1A  14                 	db	20
  1264  007E1B  24                 	db	36
  1265  007E1C  34                 	db	52
  1266  007E1D  05                 	db	5
  1267  007E1E  15                 	db	21
  1268  007E1F  25                 	db	37
  1269  007E20  35                 	db	53
  1270  007E21  06                 	db	6
  1271  007E22  16                 	db	22
  1272  007E23  26                 	db	38
  1273  007E24  36                 	db	54
  1274  007E25  07                 	db	7
  1275  007E26  17                 	db	23
  1276  007E27  27                 	db	39
  1277  007E28  37                 	db	55
  1278  007E29  44                 	db	68
  1279  007E2A  54                 	db	84
  1280  007E2B  64                 	db	100
  1281  007E2C  74                 	db	116
  1282  007E2D  45                 	db	69
  1283  007E2E  55                 	db	85
  1284  007E2F  65                 	db	101
  1285  007E30  75                 	db	117
  1286  007E31  46                 	db	70
  1287  007E32  56                 	db	86
  1288  007E33  66                 	db	102
  1289  007E34  76                 	db	118
  1290  007E35  47                 	db	71
  1291  007E36  57                 	db	87
  1292  007E37  67                 	db	103
  1293  007E38  77                 	db	119
  1294  007E39                     __end_of_i2xy64:
  1295                           	opt stack 0
  1296  007E39                     _show5:
  1297                           	opt stack 0
  1298  007E39  00                 	db	0
  1299  007E3A  01                 	db	1
  1300  007E3B  04                 	db	4
  1301  007E3C  05                 	db	5
  1302  007E3D  01                 	db	1
  1303  007E3E  02                 	db	2
  1304  007E3F  05                 	db	5
  1305  007E40  06                 	db	6
  1306  007E41  02                 	db	2
  1307  007E42  03                 	db	3
  1308  007E43  06                 	db	6
  1309  007E44  07                 	db	7
  1310  007E45  03                 	db	3
  1311  007E46  07                 	db	7
  1312  007E47  10                 	db	16
  1313  007E48  14                 	db	20
  1314  007E49  04                 	db	4
  1315  007E4A  05                 	db	5
  1316  007E4B  08                 	db	8
  1317  007E4C  09                 	db	9
  1318  007E4D  05                 	db	5
  1319  007E4E  06                 	db	6
  1320  007E4F  09                 	db	9
  1321  007E50  0A                 	db	10
  1322  007E51  06                 	db	6
  1323  007E52  07                 	db	7
  1324  007E53  0A                 	db	10
  1325  007E54  0B                 	db	11
  1326  007E55  07                 	db	7
  1327  007E56  0B                 	db	11
  1328  007E57  14                 	db	20
  1329  007E58  18                 	db	24
  1330  007E59  08                 	db	8
  1331  007E5A  09                 	db	9
  1332  007E5B  0C                 	db	12
  1333  007E5C  0D                 	db	13
  1334  007E5D  09                 	db	9
  1335  007E5E  0A                 	db	10
  1336  007E5F  0D                 	db	13
  1337  007E60  0E                 	db	14
  1338  007E61  0A                 	db	10
  1339  007E62  0B                 	db	11
  1340  007E63  0E                 	db	14
  1341  007E64  0F                 	db	15
  1342  007E65  0B                 	db	11
  1343  007E66  18                 	db	24
  1344  007E67  0F                 	db	15
  1345  007E68  1C                 	db	28
  1346  007E69  0C                 	db	12
  1347  007E6A  0D                 	db	13
  1348  007E6B  20                 	db	32
  1349  007E6C  21                 	db	33
  1350  007E6D  0D                 	db	13
  1351  007E6E  0E                 	db	14
  1352  007E6F  21                 	db	33
  1353  007E70  22                 	db	34
  1354  007E71  0E                 	db	14
  1355  007E72  0F                 	db	15
  1356  007E73  22                 	db	34
  1357  007E74  23                 	db	35
  1358  007E75  0F                 	db	15
  1359  007E76  1C                 	db	28
  1360  007E77  23                 	db	35
  1361  007E78  30                 	db	48
  1362  007E79                     __end_of_show5:
  1363                           	opt stack 0
  1364  007E79                     _show4_4:
  1365                           	opt stack 0
  1366  007E79  13                 	db	19
  1367  007E7A  2C                 	db	44
  1368  007E7B  64                 	db	100
  1369  007E7C  64                 	db	100
  1370  007E7D  64                 	db	100
  1371  007E7E  64                 	db	100
  1372  007E7F  64                 	db	100
  1373  007E80  64                 	db	100
  1374  007E81  12                 	db	18
  1375  007E82  17                 	db	23
  1376  007E83  28                 	db	40
  1377  007E84  2D                 	db	45
  1378  007E85  64                 	db	100
  1379  007E86  64                 	db	100
  1380  007E87  64                 	db	100
  1381  007E88  64                 	db	100
  1382  007E89  11                 	db	17
  1383  007E8A  16                 	db	22
  1384  007E8B  1B                 	db	27
  1385  007E8C  24                 	db	36
  1386  007E8D  29                 	db	41
  1387  007E8E  2E                 	db	46
  1388  007E8F  64                 	db	100
  1389  007E90  64                 	db	100
  1390  007E91  10                 	db	16
  1391  007E92  15                 	db	21
  1392  007E93  1A                 	db	26
  1393  007E94  1F                 	db	31
  1394  007E95  20                 	db	32
  1395  007E96  25                 	db	37
  1396  007E97  2A                 	db	42
  1397  007E98  2F                 	db	47
  1398  007E99  03                 	db	3
  1399  007E9A  14                 	db	20
  1400  007E9B  19                 	db	25
  1401  007E9C  1E                 	db	30
  1402  007E9D  21                 	db	33
  1403  007E9E  26                 	db	38
  1404  007E9F  2B                 	db	43
  1405  007EA0  0C                 	db	12
  1406  007EA1  02                 	db	2
  1407  007EA2  07                 	db	7
  1408  007EA3  18                 	db	24
  1409  007EA4  1D                 	db	29
  1410  007EA5  08                 	db	8
  1411  007EA6  0D                 	db	13
  1412  007EA7  22                 	db	34
  1413  007EA8  27                 	db	39
  1414  007EA9  01                 	db	1
  1415  007EAA  06                 	db	6
  1416  007EAB  0B                 	db	11
  1417  007EAC  1C                 	db	28
  1418  007EAD  04                 	db	4
  1419  007EAE  09                 	db	9
  1420  007EAF  0E                 	db	14
  1421  007EB0  23                 	db	35
  1422  007EB1  00                 	db	0
  1423  007EB2  05                 	db	5
  1424  007EB3  0A                 	db	10
  1425  007EB4  0F                 	db	15
  1426  007EB5  64                 	db	100
  1427  007EB6  64                 	db	100
  1428  007EB7  64                 	db	100
  1429  007EB8  64                 	db	100
  1430  007EB9                     __end_of_show4_4:
  1431                           	opt stack 0
  1432  007EB9                     _show4_1:
  1433                           	opt stack 0
  1434  007EB9  13                 	db	19
  1435  007EBA  2C                 	db	44
  1436  007EBB  64                 	db	100
  1437  007EBC  64                 	db	100
  1438  007EBD  64                 	db	100
  1439  007EBE  64                 	db	100
  1440  007EBF  64                 	db	100
  1441  007EC0  64                 	db	100
  1442  007EC1  12                 	db	18
  1443  007EC2  17                 	db	23
  1444  007EC3  28                 	db	40
  1445  007EC4  2D                 	db	45
  1446  007EC5  64                 	db	100
  1447  007EC6  64                 	db	100
  1448  007EC7  64                 	db	100
  1449  007EC8  64                 	db	100
  1450  007EC9  11                 	db	17
  1451  007ECA  16                 	db	22
  1452  007ECB  1B                 	db	27
  1453  007ECC  24                 	db	36
  1454  007ECD  29                 	db	41
  1455  007ECE  2E                 	db	46
  1456  007ECF  64                 	db	100
  1457  007ED0  64                 	db	100
  1458  007ED1  10                 	db	16
  1459  007ED2  15                 	db	21
  1460  007ED3  1A                 	db	26
  1461  007ED4  1F                 	db	31
  1462  007ED5  20                 	db	32
  1463  007ED6  25                 	db	37
  1464  007ED7  2A                 	db	42
  1465  007ED8  2F                 	db	47
  1466  007ED9  14                 	db	20
  1467  007EDA  19                 	db	25
  1468  007EDB  1E                 	db	30
  1469  007EDC  33                 	db	51
  1470  007EDD  21                 	db	33
  1471  007EDE  26                 	db	38
  1472  007EDF  2B                 	db	43
  1473  007EE0  3C                 	db	60
  1474  007EE1  18                 	db	24
  1475  007EE2  1D                 	db	29
  1476  007EE3  32                 	db	50
  1477  007EE4  37                 	db	55
  1478  007EE5  22                 	db	34
  1479  007EE6  27                 	db	39
  1480  007EE7  38                 	db	56
  1481  007EE8  3D                 	db	61
  1482  007EE9  1C                 	db	28
  1483  007EEA  31                 	db	49
  1484  007EEB  36                 	db	54
  1485  007EEC  3B                 	db	59
  1486  007EED  23                 	db	35
  1487  007EEE  34                 	db	52
  1488  007EEF  39                 	db	57
  1489  007EF0  3E                 	db	62
  1490  007EF1  30                 	db	48
  1491  007EF2  35                 	db	53
  1492  007EF3  3A                 	db	58
  1493  007EF4  3F                 	db	63
  1494  007EF5  64                 	db	100
  1495  007EF6  64                 	db	100
  1496  007EF7  64                 	db	100
  1497  007EF8  64                 	db	100
  1498  007EF9                     __end_of_show4_1:
  1499                           	opt stack 0
  1500  007EF9                     _Buttons:
  1501                           	opt stack 0
  1502  007EF9  00                 	db	0
  1503  007EFA  01                 	db	1
  1504  007EFB  02                 	db	2
  1505  007EFC  03                 	db	3
  1506  007EFD  10                 	db	16
  1507  007EFE  11                 	db	17
  1508  007EFF  12                 	db	18
  1509  007F00  13                 	db	19
  1510  007F01  04                 	db	4
  1511  007F02  05                 	db	5
  1512  007F03  06                 	db	6
  1513  007F04  07                 	db	7
  1514  007F05  14                 	db	20
  1515  007F06  15                 	db	21
  1516  007F07  16                 	db	22
  1517  007F08  17                 	db	23
  1518  007F09  08                 	db	8
  1519  007F0A  09                 	db	9
  1520  007F0B  0A                 	db	10
  1521  007F0C  0B                 	db	11
  1522  007F0D  18                 	db	24
  1523  007F0E  19                 	db	25
  1524  007F0F  1A                 	db	26
  1525  007F10  1B                 	db	27
  1526  007F11  0C                 	db	12
  1527  007F12  0D                 	db	13
  1528  007F13  0E                 	db	14
  1529  007F14  0F                 	db	15
  1530  007F15  1C                 	db	28
  1531  007F16  1D                 	db	29
  1532  007F17  1E                 	db	30
  1533  007F18  1F                 	db	31
  1534  007F19  20                 	db	32
  1535  007F1A  21                 	db	33
  1536  007F1B  22                 	db	34
  1537  007F1C  23                 	db	35
  1538  007F1D  30                 	db	48
  1539  007F1E  31                 	db	49
  1540  007F1F  32                 	db	50
  1541  007F20  33                 	db	51
  1542  007F21  24                 	db	36
  1543  007F22  25                 	db	37
  1544  007F23  26                 	db	38
  1545  007F24  27                 	db	39
  1546  007F25  34                 	db	52
  1547  007F26  35                 	db	53
  1548  007F27  36                 	db	54
  1549  007F28  37                 	db	55
  1550  007F29  28                 	db	40
  1551  007F2A  29                 	db	41
  1552  007F2B  2A                 	db	42
  1553  007F2C  2B                 	db	43
  1554  007F2D  38                 	db	56
  1555  007F2E  39                 	db	57
  1556  007F2F  3A                 	db	58
  1557  007F30  3B                 	db	59
  1558  007F31  2C                 	db	44
  1559  007F32  2D                 	db	45
  1560  007F33  2E                 	db	46
  1561  007F34  2F                 	db	47
  1562  007F35  3C                 	db	60
  1563  007F36  3D                 	db	61
  1564  007F37  3E                 	db	62
  1565  007F38  3F                 	db	63
  1566  007F39                     __end_of_Buttons:
  1567                           	opt stack 0
  1568  007F39                     _show3_2:
  1569                           	opt stack 0
  1570  007F39  05                 	db	5
  1571  007F3A  06                 	db	6
  1572  007F3B  07                 	db	7
  1573  007F3C  2B                 	db	43
  1574  007F3D  38                 	db	56
  1575  007F3E  39                 	db	57
  1576  007F3F  06                 	db	6
  1577  007F40  07                 	db	7
  1578  007F41  14                 	db	20
  1579  007F42  2A                 	db	42
  1580  007F43  2B                 	db	43
  1581  007F44  38                 	db	56
  1582  007F45  07                 	db	7
  1583  007F46  14                 	db	20
  1584  007F47  15                 	db	21
  1585  007F48  29                 	db	41
  1586  007F49  2A                 	db	42
  1587  007F4A  2B                 	db	43
  1588  007F4B  14                 	db	20
  1589  007F4C  15                 	db	21
  1590  007F4D  19                 	db	25
  1591  007F4E  25                 	db	37
  1592  007F4F  29                 	db	41
  1593  007F50  2A                 	db	42
  1594  007F51  15                 	db	21
  1595  007F52  19                 	db	25
  1596  007F53  1D                 	db	29
  1597  007F54  21                 	db	33
  1598  007F55  25                 	db	37
  1599  007F56  29                 	db	41
  1600  007F57  19                 	db	25
  1601  007F58  1D                 	db	29
  1602  007F59  31                 	db	49
  1603  007F5A  0D                 	db	13
  1604  007F5B  21                 	db	33
  1605  007F5C  25                 	db	37
  1606  007F5D  1D                 	db	29
  1607  007F5E  31                 	db	49
  1608  007F5F  35                 	db	53
  1609  007F60  09                 	db	9
  1610  007F61  0D                 	db	13
  1611  007F62  21                 	db	33
  1612  007F63                     __end_of_show3_2:
  1613                           	opt stack 0
  1614  007F63                     _show0_2:
  1615                           	opt stack 0
  1616  007F63  00                 	db	0
  1617  007F64  04                 	db	4
  1618  007F65  08                 	db	8
  1619  007F66  0C                 	db	12
  1620  007F67  20                 	db	32
  1621  007F68  24                 	db	36
  1622  007F69  28                 	db	40
  1623  007F6A  2C                 	db	44
  1624  007F6B  29                 	db	41
  1625  007F6C  25                 	db	37
  1626  007F6D  21                 	db	33
  1627  007F6E  0D                 	db	13
  1628  007F6F  09                 	db	9
  1629  007F70  05                 	db	5
  1630  007F71  0A                 	db	10
  1631  007F72  0E                 	db	14
  1632  007F73  22                 	db	34
  1633  007F74  26                 	db	38
  1634  007F75  23                 	db	35
  1635  007F76  0F                 	db	15
  1636  007F77  1C                 	db	28
  1637  007F78  30                 	db	48
  1638  007F79  35                 	db	53
  1639  007F7A  31                 	db	49
  1640  007F7B  1D                 	db	29
  1641  007F7C  19                 	db	25
  1642  007F7D  16                 	db	22
  1643  007F7E  1A                 	db	26
  1644  007F7F  1E                 	db	30
  1645  007F80  32                 	db	50
  1646  007F81  36                 	db	54
  1647  007F82  3A                 	db	58
  1648  007F83  3F                 	db	63
  1649  007F84  3B                 	db	59
  1650  007F85  37                 	db	55
  1651  007F86  33                 	db	51
  1652  007F87  1F                 	db	31
  1653  007F88  1B                 	db	27
  1654  007F89  17                 	db	23
  1655  007F8A  13                 	db	19
  1656  007F8B                     __end_of_show0_2:
  1657                           	opt stack 0
  1658  007F8B                     _show0_1:
  1659                           	opt stack 0
  1660  007F8B  00                 	db	0
  1661  007F8C  01                 	db	1
  1662  007F8D  02                 	db	2
  1663  007F8E  03                 	db	3
  1664  007F8F  10                 	db	16
  1665  007F90  11                 	db	17
  1666  007F91  12                 	db	18
  1667  007F92  13                 	db	19
  1668  007F93  16                 	db	22
  1669  007F94  15                 	db	21
  1670  007F95  14                 	db	20
  1671  007F96  07                 	db	7
  1672  007F97  06                 	db	6
  1673  007F98  05                 	db	5
  1674  007F99  0A                 	db	10
  1675  007F9A  0B                 	db	11
  1676  007F9B  18                 	db	24
  1677  007F9C  19                 	db	25
  1678  007F9D  1C                 	db	28
  1679  007F9E  0F                 	db	15
  1680  007F9F  23                 	db	35
  1681  007FA0  30                 	db	48
  1682  007FA1  35                 	db	53
  1683  007FA2  34                 	db	52
  1684  007FA3  27                 	db	39
  1685  007FA4  26                 	db	38
  1686  007FA5  29                 	db	41
  1687  007FA6  2A                 	db	42
  1688  007FA7  2B                 	db	43
  1689  007FA8  38                 	db	56
  1690  007FA9  39                 	db	57
  1691  007FAA  3A                 	db	58
  1692  007FAB  3F                 	db	63
  1693  007FAC  3E                 	db	62
  1694  007FAD  3D                 	db	61
  1695  007FAE  3C                 	db	60
  1696  007FAF  2F                 	db	47
  1697  007FB0  2E                 	db	46
  1698  007FB1  2D                 	db	45
  1699  007FB2  2C                 	db	44
  1700  007FB3                     __end_of_show0_1:
  1701                           	opt stack 0
  1702  007FB3                     _horizental_flash:
  1703                           	opt stack 0
  1704  007FB3  00                 	db	0
  1705  007FB4  01                 	db	1
  1706  007FB5  02                 	db	2
  1707  007FB6  01                 	db	1
  1708  007FB7  02                 	db	2
  1709  007FB8  03                 	db	3
  1710  007FB9  02                 	db	2
  1711  007FBA  03                 	db	3
  1712  007FBB  10                 	db	16
  1713  007FBC  03                 	db	3
  1714  007FBD  10                 	db	16
  1715  007FBE  11                 	db	17
  1716  007FBF  10                 	db	16
  1717  007FC0  11                 	db	17
  1718  007FC1  12                 	db	18
  1719  007FC2  11                 	db	17
  1720  007FC3  12                 	db	18
  1721  007FC4  13                 	db	19
  1722  007FC5  12                 	db	18
  1723  007FC6  13                 	db	19
  1724  007FC7  64                 	db	100
  1725  007FC8  13                 	db	19
  1726  007FC9  64                 	db	100
  1727  007FCA  64                 	db	100
  1728  007FCB                     __end_of_horizental_flash:
  1729                           	opt stack 0
  1730  007FCB                     _show3_3:
  1731                           	opt stack 0
  1732  007FCB  0A                 	db	10
  1733  007FCC  0B                 	db	11
  1734  007FCD  27                 	db	39
  1735  007FCE  34                 	db	52
  1736  007FCF  0B                 	db	11
  1737  007FD0  18                 	db	24
  1738  007FD1  26                 	db	38
  1739  007FD2  27                 	db	39
  1740  007FD3  18                 	db	24
  1741  007FD4  1C                 	db	28
  1742  007FD5  22                 	db	34
  1743  007FD6  26                 	db	38
  1744  007FD7  1C                 	db	28
  1745  007FD8  30                 	db	48
  1746  007FD9  0E                 	db	14
  1747  007FDA  22                 	db	34
  1748  007FDB  0A                 	db	10
  1749  007FDC  0E                 	db	14
  1750  007FDD  30                 	db	48
  1751  007FDE  34                 	db	52
  1752  007FDF                     __end_of_show3_3:
  1753                           	opt stack 0
  1754  007FDF                     _buttonLUT:
  1755                           	opt stack 0
  1756  007FDF  07                 	db	7
  1757  007FE0  04                 	db	4
  1758  007FE1  02                 	db	2
  1759  007FE2  22                 	db	34
  1760  007FE3  05                 	db	5
  1761  007FE4  06                 	db	6
  1762  007FE5  00                 	db	0
  1763  007FE6  01                 	db	1
  1764  007FE7  03                 	db	3
  1765  007FE8  10                 	db	16
  1766  007FE9  30                 	db	48
  1767  007FEA  21                 	db	33
  1768  007FEB  13                 	db	19
  1769  007FEC  12                 	db	18
  1770  007FED  11                 	db	17
  1771  007FEE  31                 	db	49
  1772  007FEF                     __end_of_buttonLUT:
  1773                           	opt stack 0
  1774  007FEF                     _ledLUT:
  1775                           	opt stack 0
  1776  007FEF  3A                 	db	58
  1777  007FF0  37                 	db	55
  1778  007FF1  35                 	db	53
  1779  007FF2  34                 	db	52
  1780  007FF3  28                 	db	40
  1781  007FF4  29                 	db	41
  1782  007FF5  23                 	db	35
  1783  007FF6  24                 	db	36
  1784  007FF7  16                 	db	22
  1785  007FF8  1B                 	db	27
  1786  007FF9  11                 	db	17
  1787  007FFA  10                 	db	16
  1788  007FFB  0E                 	db	14
  1789  007FFC  0D                 	db	13
  1790  007FFD  0C                 	db	12
  1791  007FFE  02                 	db	2
  1792  007FFF                     __end_of_ledLUT:
  1793                           	opt stack 0
  1794  0000                     _PIR2bits	set	4001
  1795  0000                     _SSPSTAT	set	4039
  1796  0000                     _SSPCON1bits	set	4038
  1797  0000                     _SSPBUF	set	4041
  1798  0000                     _SSPSTATbits	set	4039
  1799  0000                     _SSPCON2	set	4037
  1800  0000                     _SSPCON1	set	4038
  1801  0000                     _SSPCON2bits	set	4037
  1802  0000                     _TXREG	set	4013
  1803  0000                     _PIR1bits	set	3998
  1804  0000                     _RCSTAbits	set	4011
  1805  0000                     _SPBRG	set	4015
  1806  0000                     _TXSTAbits	set	4012
  1807  0000                     _BAUDCONbits	set	4024
  1808  0000                     _TRISCbits	set	3988
  1809  0000                     _SSPADD	set	4040
  1810  0000                     _OSCCONbits	set	4051
  1811  0000                     _TRISBbits	set	3987
  1812  0000                     _INTCON2bits	set	4081
  1813  0000                     _RCONbits	set	4048
  1814  0000                     _INTCONbits	set	4082
  1815  0000                     _TRMT	set	32097
  1816                           
  1817                           ; #config settings
  1818  007FFF  00                 	db	0	; dummy byte at the end
  1819  0000                     
  1820                           	psect	cinit
  1821  003096                     __pcinit:
  1822                           	opt stack 0
  1823  003096                     start_initialization:
  1824                           	opt stack 0
  1825  003096                     __initialization:
  1826                           	opt stack 0
  1827                           
  1828                           ; Initialize objects allocated to BANK0 (2 bytes)
  1829                           ; load TBLPTR registers with __pidataBANK0
  1830  003096  0ED2               	movlw	low __pidataBANK0
  1831  003098  6EF6               	movwf	tblptrl,c
  1832  00309A  0E31               	movlw	high __pidataBANK0
  1833  00309C  6EF7               	movwf	tblptrh,c
  1834  00309E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1835  0030A0  6EF8               	movwf	tblptru,c
  1836  0030A2  0009               	tblrd		*+	;fetch initializer
  1837  0030A4  CFF5 F0E0          	movff	tablat,__pdataBANK0
  1838  0030A8  0009               	tblrd		*+	;fetch initializer
  1839  0030AA  CFF5 F0E1          	movff	tablat,__pdataBANK0+1
  1840                           
  1841                           ; Clear objects allocated to BANK1 (244 bytes)
  1842  0030AE  EE01  F000         	lfsr	0,__pbssBANK1
  1843  0030B2  0EF4               	movlw	244
  1844  0030B4                     clear_0:
  1845  0030B4  6AEE               	clrf	postinc0,c
  1846  0030B6  06E8               	decf	wreg,f,c
  1847  0030B8  E1FD               	bnz	clear_0
  1848                           
  1849                           ; Clear objects allocated to BANK0 (68 bytes)
  1850  0030BA  EE00  F080         	lfsr	0,__pbssBANK0
  1851  0030BE  0E44               	movlw	68
  1852  0030C0                     clear_1:
  1853  0030C0  6AEE               	clrf	postinc0,c
  1854  0030C2  06E8               	decf	wreg,f,c
  1855  0030C4  E1FD               	bnz	clear_1
  1856                           
  1857                           ; Clear objects allocated to COMRAM (2 bytes)
  1858  0030C6  6A52               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1859  0030C8  6A51               	clrf	__pbssCOMRAM& (0+255),c
  1860  0030CA                     end_of_initialization:
  1861                           	opt stack 0
  1862  0030CA                     __end_of__initialization:
  1863                           	opt stack 0
  1864  0030CA  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1865  0030CC  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1866  0030CE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1867  0030D0  6EF8               	movwf	tblptru,c
  1868  0030D2  0100               	movlb	0
  1869  0030D4  EFBF  F003         	goto	_main	;jump to C main() function
  1870                           tblptru	equ	0xFF8
  1871                           tblptrh	equ	0xFF7
  1872                           tblptrl	equ	0xFF6
  1873                           tablat	equ	0xFF5
  1874                           postinc0	equ	0xFEE
  1875                           wreg	equ	0xFE8
  1876                           
  1877                           	psect	bssCOMRAM
  1878  000051                     __pbssCOMRAM:
  1879                           	opt stack 0
  1880  000051                     _count:
  1881                           	opt stack 0
  1882  000051                     	ds	2
  1883                           tblptru	equ	0xFF8
  1884                           tblptrh	equ	0xFF7
  1885                           tblptrl	equ	0xFF6
  1886                           tablat	equ	0xFF5
  1887                           postinc0	equ	0xFEE
  1888                           wreg	equ	0xFE8
  1889                           
  1890                           	psect	bssBANK0
  1891  000080                     __pbssBANK0:
  1892                           	opt stack 0
  1893  000080                     _temp:
  1894                           	opt stack 0
  1895  000080                     	ds	64
  1896  0000C0                     _in_interrupt:
  1897                           	opt stack 0
  1898  0000C0                     	ds	1
  1899  0000C1                     _column:
  1900                           	opt stack 0
  1901  0000C1                     	ds	1
  1902  0000C2                     _rightbutton:
  1903                           	opt stack 0
  1904  0000C2                     	ds	1
  1905  0000C3                     _press_button:
  1906                           	opt stack 0
  1907  0000C3                     	ds	1
  1908                           tblptru	equ	0xFF8
  1909                           tblptrh	equ	0xFF7
  1910                           tblptrl	equ	0xFF6
  1911                           tablat	equ	0xFF5
  1912                           postinc0	equ	0xFEE
  1913                           wreg	equ	0xFE8
  1914                           
  1915                           	psect	dataBANK0
  1916  0000E0                     __pdataBANK0:
  1917                           	opt stack 0
  1918  0000E0                     _play_mode:
  1919                           	opt stack 0
  1920  0000E0                     	ds	2
  1921                           tblptru	equ	0xFF8
  1922                           tblptrh	equ	0xFF7
  1923                           tblptrl	equ	0xFF6
  1924                           tablat	equ	0xFF5
  1925                           postinc0	equ	0xFEE
  1926                           wreg	equ	0xFE8
  1927                           
  1928                           	psect	bssBANK1
  1929  000100                     __pbssBANK1:
  1930                           	opt stack 0
  1931  000100                     _press:
  1932                           	opt stack 0
  1933  000100                     	ds	128
  1934  000180                     _matrices:
  1935                           	opt stack 0
  1936  000180                     	ds	116
  1937                           tblptru	equ	0xFF8
  1938                           tblptrh	equ	0xFF7
  1939                           tblptrl	equ	0xFF6
  1940                           tablat	equ	0xFF5
  1941                           postinc0	equ	0xFEE
  1942                           wreg	equ	0xFE8
  1943                           
  1944                           	psect	cstackBANK0
  1945  0000C4                     __pcstackBANK0:
  1946                           	opt stack 0
  1947  0000C4                     animation2@m:
  1948                           	opt stack 0
  1949                           
  1950                           ; 1 bytes @ 0x0
  1951  0000C4                     	ds	1
  1952  0000C5                     animation2@col:
  1953                           	opt stack 0
  1954                           
  1955                           ; 2 bytes @ 0x1
  1956  0000C5                     	ds	2
  1957  0000C7                     animation2@row:
  1958                           	opt stack 0
  1959                           
  1960                           ; 2 bytes @ 0x3
  1961  0000C7                     	ds	2
  1962  0000C9                     animation2@x:
  1963                           	opt stack 0
  1964                           
  1965                           ; 2 bytes @ 0x5
  1966  0000C9                     	ds	2
  1967  0000CB                     animation2@i:
  1968                           	opt stack 0
  1969                           
  1970                           ; 2 bytes @ 0x7
  1971  0000CB                     	ds	2
  1972  0000CD                     animation2@j:
  1973                           	opt stack 0
  1974                           
  1975                           ; 2 bytes @ 0x9
  1976  0000CD                     	ds	2
  1977  0000CF                     ??_main:
  1978                           
  1979                           ; 1 bytes @ 0xB
  1980  0000CF                     	ds	4
  1981  0000D3                     main@h:
  1982                           	opt stack 0
  1983                           
  1984                           ; 1 bytes @ 0xF
  1985  0000D3                     	ds	1
  1986  0000D4                     main@x:
  1987                           	opt stack 0
  1988                           
  1989                           ; 1 bytes @ 0x10
  1990  0000D4                     	ds	1
  1991  0000D5                     main@y:
  1992                           	opt stack 0
  1993                           
  1994                           ; 1 bytes @ 0x11
  1995  0000D5                     	ds	1
  1996  0000D6                     main@sync_mode:
  1997                           	opt stack 0
  1998                           
  1999                           ; 1 bytes @ 0x12
  2000  0000D6                     	ds	1
  2001  0000D7                     main@slew:
  2002                           	opt stack 0
  2003                           
  2004                           ; 1 bytes @ 0x13
  2005  0000D7                     	ds	1
  2006  0000D8                     main@note:
  2007                           	opt stack 0
  2008                           
  2009                           ; 1 bytes @ 0x14
  2010  0000D8                     	ds	1
  2011  0000D9                     main@k:
  2012                           	opt stack 0
  2013                           
  2014                           ; 1 bytes @ 0x15
  2015  0000D9                     	ds	1
  2016  0000DA                     main@n:
  2017                           	opt stack 0
  2018                           
  2019                           ; 1 bytes @ 0x16
  2020  0000DA                     	ds	1
  2021  0000DB                     main@m:
  2022                           	opt stack 0
  2023                           
  2024                           ; 1 bytes @ 0x17
  2025  0000DB                     	ds	1
  2026  0000DC                     main@j:
  2027                           	opt stack 0
  2028                           
  2029                           ; 2 bytes @ 0x18
  2030  0000DC                     	ds	2
  2031  0000DE                     main@i:
  2032                           	opt stack 0
  2033                           
  2034                           ; 2 bytes @ 0x1A
  2035  0000DE                     	ds	2
  2036                           tblptru	equ	0xFF8
  2037                           tblptrh	equ	0xFF7
  2038                           tblptrl	equ	0xFF6
  2039                           tablat	equ	0xFF5
  2040                           postinc0	equ	0xFEE
  2041                           wreg	equ	0xFE8
  2042                           
  2043                           	psect	cstackCOMRAM
  2044  000001                     __pcstackCOMRAM:
  2045                           	opt stack 0
  2046  000001                     ?i2___wmul:
  2047                           	opt stack 0
  2048  000001                     i2___wmul@multiplier:
  2049                           	opt stack 0
  2050                           
  2051                           ; 2 bytes @ 0x0
  2052  000001                     	ds	2
  2053  000003                     i2___wmul@multiplicand:
  2054                           	opt stack 0
  2055                           
  2056                           ; 2 bytes @ 0x2
  2057  000003                     	ds	2
  2058  000005                     i2___wmul@product:
  2059                           	opt stack 0
  2060                           
  2061                           ; 2 bytes @ 0x4
  2062  000005                     	ds	2
  2063  000007                     ??_is_key_pressed:
  2064  000007                     ??_was_key_pressed:
  2065                           
  2066                           ; 1 bytes @ 0x6
  2067  000007                     	ds	8
  2068  00000F                     is_key_pressed@matrix:
  2069                           	opt stack 0
  2070  00000F                     was_key_pressed@matrix:
  2071                           	opt stack 0
  2072                           
  2073                           ; 2 bytes @ 0xE
  2074  00000F                     	ds	2
  2075  000011                     is_key_pressed@led:
  2076                           	opt stack 0
  2077  000011                     was_key_pressed@led:
  2078                           	opt stack 0
  2079                           
  2080                           ; 2 bytes @ 0x10
  2081  000011                     	ds	2
  2082  000013                     is_key_pressed@k:
  2083                           	opt stack 0
  2084  000013                     was_key_pressed@k:
  2085                           	opt stack 0
  2086                           
  2087                           ; 1 bytes @ 0x12
  2088  000013                     	ds	1
  2089  000014                     ??_tc_int:
  2090                           
  2091                           ; 1 bytes @ 0x13
  2092  000014                     	ds	22
  2093  00002A                     tc_int@j:
  2094                           	opt stack 0
  2095                           
  2096                           ; 1 bytes @ 0x29
  2097  00002A                     	ds	1
  2098  00002B                     tc_int@i:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x2A
  2102  00002B                     	ds	1
  2103  00002C                     tc_int@h:
  2104                           	opt stack 0
  2105                           
  2106                           ; 1 bytes @ 0x2B
  2107  00002C                     	ds	1
  2108  00002D                     ??_MyIdleI2C:
  2109  00002D                     ?___wmul:
  2110                           	opt stack 0
  2111  00002D                     send_note@two:
  2112                           	opt stack 0
  2113  00002D                     MyOpenI2C@slew:
  2114                           	opt stack 0
  2115  00002D                     ___wmul@multiplier:
  2116                           	opt stack 0
  2117                           
  2118                           ; 2 bytes @ 0x2C
  2119  00002D                     	ds	1
  2120  00002E                     send_note@three:
  2121                           	opt stack 0
  2122  00002E                     MyWriteI2C@data_out:
  2123                           	opt stack 0
  2124  00002E                     MyOpenI2C@sync_mode:
  2125                           	opt stack 0
  2126                           
  2127                           ; 1 bytes @ 0x2D
  2128  00002E                     	ds	1
  2129  00002F                     send_note@one:
  2130                           	opt stack 0
  2131  00002F                     write@data:
  2132                           	opt stack 0
  2133  00002F                     ___wmul@multiplicand:
  2134                           	opt stack 0
  2135                           
  2136                           ; 2 bytes @ 0x2E
  2137  00002F                     	ds	1
  2138  000030                     write@data_out:
  2139                           	opt stack 0
  2140                           
  2141                           ; 1 bytes @ 0x2F
  2142  000030                     	ds	1
  2143  000031                     write@status:
  2144                           	opt stack 0
  2145  000031                     ___wmul@product:
  2146                           	opt stack 0
  2147                           
  2148                           ; 2 bytes @ 0x30
  2149  000031                     	ds	2
  2150  000033                     ??_set_led:
  2151  000033                     ??_write_display:
  2152  000033                     ??_clr_led:
  2153                           
  2154                           ; 1 bytes @ 0x32
  2155  000033                     	ds	6
  2156  000039                     write_display@j:
  2157                           	opt stack 0
  2158                           
  2159                           ; 2 bytes @ 0x38
  2160  000039                     	ds	2
  2161  00003B                     write_display@i:
  2162                           	opt stack 0
  2163  00003B                     set_led@matrix:
  2164                           	opt stack 0
  2165                           
  2166                           ; 2 bytes @ 0x3A
  2167  00003B                     	ds	2
  2168  00003D                     set_led@i:
  2169                           	opt stack 0
  2170  00003D                     clr_led@matrix:
  2171                           	opt stack 0
  2172                           
  2173                           ; 2 bytes @ 0x3C
  2174  00003D                     	ds	1
  2175  00003E                     set_led@led:
  2176                           	opt stack 0
  2177                           
  2178                           ; 2 bytes @ 0x3D
  2179  00003E                     	ds	1
  2180  00003F                     clr_led@i:
  2181                           	opt stack 0
  2182                           
  2183                           ; 1 bytes @ 0x3E
  2184  00003F                     	ds	1
  2185  000040                     clr_led@led:
  2186                           	opt stack 0
  2187                           
  2188                           ; 2 bytes @ 0x3F
  2189  000040                     	ds	2
  2190  000042                     ??_animation3:
  2191  000042                     ??_animation7:
  2192  000042                     animation0@n:
  2193                           	opt stack 0
  2194  000042                     animation1@n:
  2195                           	opt stack 0
  2196  000042                     animation2@n:
  2197                           	opt stack 0
  2198  000042                     animation4@h:
  2199                           	opt stack 0
  2200  000042                     animation5@n:
  2201                           	opt stack 0
  2202  000042                     animation6@n:
  2203                           	opt stack 0
  2204                           
  2205                           ; 1 bytes @ 0x41
  2206  000042                     	ds	1
  2207  000043                     ??_animation0:
  2208  000043                     ??_animation1:
  2209  000043                     ??_animation4:
  2210  000043                     ??_animation6:
  2211  000043                     animation2@h:
  2212                           	opt stack 0
  2213  000043                     animation5@h:
  2214                           	opt stack 0
  2215                           
  2216                           ; 1 bytes @ 0x42
  2217  000043                     	ds	1
  2218  000044                     ??_animation2:
  2219  000044                     ??_animation5:
  2220  000044                     animation7@h:
  2221                           	opt stack 0
  2222                           
  2223                           ; 1 bytes @ 0x43
  2224  000044                     	ds	1
  2225  000045                     animation4@m:
  2226                           	opt stack 0
  2227  000045                     animation0@x:
  2228                           	opt stack 0
  2229  000045                     animation7@i:
  2230                           	opt stack 0
  2231                           
  2232                           ; 2 bytes @ 0x44
  2233  000045                     	ds	1
  2234  000046                     animation1@m:
  2235                           	opt stack 0
  2236  000046                     animation3@m:
  2237                           	opt stack 0
  2238  000046                     animation4@i:
  2239                           	opt stack 0
  2240  000046                     animation5@m:
  2241                           	opt stack 0
  2242                           
  2243                           ; 1 bytes @ 0x45
  2244  000046                     	ds	1
  2245  000047                     animation0@m:
  2246                           	opt stack 0
  2247  000047                     animation1@x:
  2248                           	opt stack 0
  2249  000047                     animation4@j:
  2250                           	opt stack 0
  2251  000047                     animation5@j:
  2252                           	opt stack 0
  2253  000047                     animation6@x:
  2254                           	opt stack 0
  2255  000047                     animation3@i:
  2256                           	opt stack 0
  2257  000047                     animation7@j:
  2258                           	opt stack 0
  2259                           
  2260                           ; 2 bytes @ 0x46
  2261  000047                     	ds	1
  2262  000048                     animation0@j:
  2263                           	opt stack 0
  2264  000048                     animation1@i:
  2265                           	opt stack 0
  2266  000048                     animation5@i:
  2267                           	opt stack 0
  2268  000048                     animation6@a:
  2269                           	opt stack 0
  2270                           
  2271                           ; 2 bytes @ 0x47
  2272  000048                     	ds	1
  2273  000049                     animation0@i:
  2274                           	opt stack 0
  2275  000049                     animation1@j:
  2276                           	opt stack 0
  2277  000049                     animation5@x:
  2278                           	opt stack 0
  2279  000049                     animation3@j:
  2280                           	opt stack 0
  2281                           
  2282                           ; 2 bytes @ 0x48
  2283  000049                     	ds	1
  2284  00004A                     animation6@b:
  2285                           	opt stack 0
  2286                           
  2287                           ; 2 bytes @ 0x49
  2288  00004A                     	ds	2
  2289  00004C                     animation6@c:
  2290                           	opt stack 0
  2291                           
  2292                           ; 2 bytes @ 0x4B
  2293  00004C                     	ds	2
  2294  00004E                     animation6@d:
  2295                           	opt stack 0
  2296                           
  2297                           ; 2 bytes @ 0x4D
  2298  00004E                     	ds	2
  2299  000050                     animation6@m:
  2300                           	opt stack 0
  2301                           
  2302                           ; 1 bytes @ 0x4F
  2303  000050                     	ds	1
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           postinc0	equ	0xFEE
  2309                           wreg	equ	0xFE8
  2310                           
  2311 ;;
  2312 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2313 ;;
  2314 ;; *************** function _main *****************
  2315 ;; Defined at:
  2316 ;;		line 419 in file "newmain.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  note            1   20[BANK0 ] unsigned char 
  2321 ;;  y               1   17[BANK0 ] unsigned char 
  2322 ;;  x               1   16[BANK0 ] unsigned char 
  2323 ;;  i               2   26[BANK0 ] int 
  2324 ;;  j               2   24[BANK0 ] int 
  2325 ;;  m               1   23[BANK0 ] unsigned char 
  2326 ;;  n               1   22[BANK0 ] unsigned char 
  2327 ;;  k               1   21[BANK0 ] unsigned char 
  2328 ;;  slew            1   19[BANK0 ] unsigned char 
  2329 ;;  sync_mode       1   18[BANK0 ] unsigned char 
  2330 ;;  h               1   15[BANK0 ] unsigned char 
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2340 ;;      Params:         0       0       0       0       0       0       0
  2341 ;;      Locals:         0      13       0       0       0       0       0
  2342 ;;      Temps:          0       4       0       0       0       0       0
  2343 ;;      Totals:         0      17       0       0       0       0       0
  2344 ;;Total ram usage:       17 bytes
  2345 ;; Hardware stack levels required when called:    8
  2346 ;; This function calls:
  2347 ;;		_MyCloseI2C
  2348 ;;		_MyIdleI2C
  2349 ;;		_MyOpenI2C
  2350 ;;		_MyStartI2C
  2351 ;;		_MyStopI2C
  2352 ;;		_Myusartinit
  2353 ;;		___wmul
  2354 ;;		_animation0
  2355 ;;		_animation1
  2356 ;;		_animation2
  2357 ;;		_animation3
  2358 ;;		_animation4
  2359 ;;		_animation5
  2360 ;;		_animation6
  2361 ;;		_animation7
  2362 ;;		_clr_led
  2363 ;;		_keypad_interrupt
  2364 ;;		_send_note
  2365 ;;		_set_led
  2366 ;;		_write
  2367 ;;		_write_display
  2368 ;; This function is called by:
  2369 ;;		Startup code after reset
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text0
  2374  00077E                     __ptext0:
  2375                           	opt stack 0
  2376  00077E                     _main:
  2377                           	opt stack 23
  2378                           
  2379                           ;newmain.c: 421: unsigned char sync_mode = 0, slew = 0;
  2380                           
  2381                           ;incstack = 0
  2382  00077E  0E00               	movlw	0
  2383  000780  0100               	movlb	0	; () banked
  2384  000782  6FD6               	movwf	main@sync_mode& (0+255),b
  2385  000784  0E00               	movlw	0
  2386  000786  6FD7               	movwf	main@slew& (0+255),b
  2387                           
  2388                           ;newmain.c: 422: int i, j;
  2389                           ;newmain.c: 423: matrices[0].address = 0x70 << 1;
  2390  000788  0EE0               	movlw	224
  2391  00078A  0101               	movlb	1	; () banked
  2392  00078C  6F80               	movwf	_matrices& (0+255),b
  2393                           
  2394                           ;newmain.c: 424: matrices[1].address = 0x71 << 1;
  2395  00078E  0EE2               	movlw	226
  2396  000790  6F9D               	movwf	(_matrices+29)& (0+255),b
  2397                           
  2398                           ;newmain.c: 425: matrices[2].address = 0x72 << 1;
  2399  000792  0EE4               	movlw	228
  2400  000794  6FBA               	movwf	(_matrices+58)& (0+255),b
  2401                           
  2402                           ;newmain.c: 426: matrices[3].address = 0x73 << 1;
  2403  000796  0EE6               	movlw	230
  2404  000798  6FD7               	movwf	(_matrices+87)& (0+255),b
  2405                           
  2406                           ; BSR set to: 1
  2407                           ;newmain.c: 428: Myusartinit();
  2408  00079A  ECC9  F018         	call	_Myusartinit	;wreg free
  2409                           
  2410                           ;newmain.c: 429: keypad_interrupt();
  2411  00079E  ECDC  F018         	call	_keypad_interrupt	;wreg free
  2412                           
  2413                           ;newmain.c: 431: MyCloseI2C();
  2414  0007A2  ECE7  F018         	call	_MyCloseI2C	;wreg free
  2415                           
  2416                           ;newmain.c: 433: sync_mode = 0b00001000;
  2417  0007A6  0E08               	movlw	8
  2418  0007A8  0100               	movlb	0	; () banked
  2419  0007AA  6FD6               	movwf	main@sync_mode& (0+255),b
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;newmain.c: 434: slew = 0b10000000;
  2423  0007AC  0E80               	movlw	128
  2424  0007AE  6FD7               	movwf	main@slew& (0+255),b
  2425                           
  2426                           ; BSR set to: 0
  2427                           ;newmain.c: 435: MyOpenI2C(sync_mode, slew);
  2428  0007B0  C0D7  F02D         	movff	main@slew,MyOpenI2C@slew
  2429  0007B4  51D6               	movf	main@sync_mode& (0+255),w,b
  2430  0007B6  ECBA  F018         	call	_MyOpenI2C
  2431                           
  2432                           ;newmain.c: 437: OSCCONbits.IRCF = 6;
  2433  0007BA  50D3               	movf	4051,w,c	;volatile
  2434  0007BC  0B8F               	andlw	-113
  2435  0007BE  0960               	iorlw	96
  2436  0007C0  6ED3               	movwf	4051,c	;volatile
  2437                           
  2438                           ;newmain.c: 438: SSPADD = 9;
  2439  0007C2  0E09               	movlw	9
  2440  0007C4  6EC8               	movwf	4040,c	;volatile
  2441                           
  2442                           ;newmain.c: 440: _delay((unsigned long)((1)*(4000000/4000.0)));
  2443  0007C6  0EC8               	movlw	200
  2444  0007C8                     u10117:
  2445  0007C8  D000               	nop2	
  2446  0007CA  2EE8               	decfsz	wreg,f,c
  2447  0007CC  D7FD               	bra	u10117
  2448                           
  2449                           ;newmain.c: 441: for (i = 0; i < 4; i++) {
  2450  0007CE  0E00               	movlw	0
  2451  0007D0  0100               	movlb	0	; () banked
  2452  0007D2  6FDF               	movwf	(main@i+1)& (0+255),b
  2453  0007D4  0E00               	movlw	0
  2454  0007D6  6FDE               	movwf	main@i& (0+255),b
  2455  0007D8                     l6525:
  2456                           
  2457                           ; BSR set to: 0
  2458  0007D8  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  2459  0007DA  D006               	goto	l160
  2460  0007DC  51DF               	movf	(main@i+1)& (0+255),w,b
  2461  0007DE  E14C               	bnz	l6563
  2462  0007E0  0E04               	movlw	4
  2463  0007E2  5DDE               	subwf	main@i& (0+255),w,b
  2464  0007E4  B0D8               	btfsc	status,0,c
  2465  0007E6  D048               	goto	u9440
  2466  0007E8                     l160:
  2467                           
  2468                           ; BSR set to: 0
  2469                           ;newmain.c: 443: MyIdleI2C();
  2470                           
  2471                           ; BSR set to: 0
  2472  0007E8  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2473                           
  2474                           ;newmain.c: 444: MyStartI2C();
  2475  0007EC  ECE5  F018         	call	_MyStartI2C	;wreg free
  2476                           
  2477                           ;newmain.c: 445: MyIdleI2C();
  2478  0007F0  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2479                           
  2480                           ;newmain.c: 446: write(matrices[i].address | 0x00);
  2481  0007F4  C0DE  F02D         	movff	main@i,___wmul@multiplier
  2482  0007F8  C0DF  F02E         	movff	main@i+1,___wmul@multiplier+1
  2483  0007FC  0E00               	movlw	0
  2484  0007FE  6E30               	movwf	___wmul@multiplicand+1,c
  2485  000800  0E1D               	movlw	29
  2486  000802  6E2F               	movwf	___wmul@multiplicand,c
  2487  000804  EC83  F018         	call	___wmul	;wreg free
  2488  000808  0E80               	movlw	low _matrices
  2489  00080A  242D               	addwf	?___wmul,w,c
  2490  00080C  6ED9               	movwf	fsr2l,c
  2491  00080E  0E01               	movlw	high _matrices
  2492  000810  202E               	addwfc	?___wmul+1,w,c
  2493  000812  6EDA               	movwf	fsr2h,c
  2494  000814  50DF               	movf	indf2,w,c
  2495  000816  EC6C  F018         	call	_write
  2496                           
  2497                           ;newmain.c: 447: MyIdleI2C();
  2498  00081A  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2499                           
  2500                           ;newmain.c: 448: write(0x21);
  2501  00081E  0E21               	movlw	33
  2502  000820  EC6C  F018         	call	_write
  2503                           
  2504                           ;newmain.c: 449: MyIdleI2C();
  2505  000824  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2506                           
  2507                           ;newmain.c: 450: MyStopI2C();
  2508  000828  ECE3  F018         	call	_MyStopI2C	;wreg free
  2509                           
  2510                           ;newmain.c: 453: MyIdleI2C();
  2511  00082C  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2512                           
  2513                           ;newmain.c: 454: MyStartI2C();
  2514  000830  ECE5  F018         	call	_MyStartI2C	;wreg free
  2515                           
  2516                           ;newmain.c: 455: MyIdleI2C();
  2517  000834  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2518                           
  2519                           ;newmain.c: 456: write(matrices[i].address | 0x00);
  2520  000838  C0DE  F02D         	movff	main@i,___wmul@multiplier
  2521  00083C  C0DF  F02E         	movff	main@i+1,___wmul@multiplier+1
  2522  000840  0E00               	movlw	0
  2523  000842  6E30               	movwf	___wmul@multiplicand+1,c
  2524  000844  0E1D               	movlw	29
  2525  000846  6E2F               	movwf	___wmul@multiplicand,c
  2526  000848  EC83  F018         	call	___wmul	;wreg free
  2527  00084C  0E80               	movlw	low _matrices
  2528  00084E  242D               	addwf	?___wmul,w,c
  2529  000850  6ED9               	movwf	fsr2l,c
  2530  000852  0E01               	movlw	high _matrices
  2531  000854  202E               	addwfc	?___wmul+1,w,c
  2532  000856  6EDA               	movwf	fsr2h,c
  2533  000858  50DF               	movf	indf2,w,c
  2534  00085A  EC6C  F018         	call	_write
  2535                           
  2536                           ;newmain.c: 457: MyIdleI2C();
  2537  00085E  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2538                           
  2539                           ;newmain.c: 458: write(0b10000001);
  2540  000862  0E81               	movlw	129
  2541  000864  EC6C  F018         	call	_write
  2542                           
  2543                           ;newmain.c: 459: MyIdleI2C();
  2544  000868  ECD3  F018         	call	_MyIdleI2C	;wreg free
  2545                           
  2546                           ;newmain.c: 460: MyStopI2C();
  2547  00086C  ECE3  F018         	call	_MyStopI2C	;wreg free
  2548  000870  0100               	movlb	0	; () banked
  2549  000872  4BDE               	infsnz	main@i& (0+255),f,b
  2550  000874  2BDF               	incf	(main@i+1)& (0+255),f,b
  2551  000876  D7B0               	goto	l6525
  2552  000878                     u9440:
  2553  000878                     l6563:
  2554                           
  2555                           ; BSR set to: 0
  2556                           ;newmain.c: 461: }
  2557                           ;newmain.c: 463: uint8_t m = 0, n = 0, h = 0, k = 0;
  2558  000878  0E00               	movlw	0
  2559  00087A  6FDB               	movwf	main@m& (0+255),b
  2560  00087C  0E00               	movlw	0
  2561  00087E  6FDA               	movwf	main@n& (0+255),b
  2562  000880  0E00               	movlw	0
  2563  000882  6FD3               	movwf	main@h& (0+255),b
  2564  000884  0E00               	movlw	0
  2565  000886  6FD9               	movwf	main@k& (0+255),b
  2566                           
  2567                           ;newmain.c: 465: for (i = 0; i < 8; i++)
  2568  000888  0E00               	movlw	0
  2569  00088A  6FDF               	movwf	(main@i+1)& (0+255),b
  2570  00088C  0E00               	movlw	0
  2571  00088E  6FDE               	movwf	main@i& (0+255),b
  2572  000890                     l6565:
  2573                           
  2574                           ; BSR set to: 0
  2575  000890  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  2576  000892  D006               	goto	l162
  2577  000894  51DF               	movf	(main@i+1)& (0+255),w,b
  2578  000896  E138               	bnz	l6585
  2579  000898  0E08               	movlw	8
  2580  00089A  5DDE               	subwf	main@i& (0+255),w,b
  2581  00089C  B0D8               	btfsc	status,0,c
  2582  00089E  D034               	goto	u9480
  2583  0008A0                     l162:
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;newmain.c: 466: for (j = 0; j < 8; j++)
  2587                           
  2588                           ; BSR set to: 0
  2589  0008A0  0E00               	movlw	0
  2590  0008A2  6FDD               	movwf	(main@j+1)& (0+255),b
  2591  0008A4  0E00               	movlw	0
  2592  0008A6  6FDC               	movwf	main@j& (0+255),b
  2593  0008A8                     l6571:
  2594                           
  2595                           ; BSR set to: 0
  2596  0008A8  BFDD               	btfsc	(main@j+1)& (0+255),7,b
  2597  0008AA  D006               	goto	l164
  2598  0008AC  51DD               	movf	(main@j+1)& (0+255),w,b
  2599  0008AE  E129               	bnz	l6581
  2600  0008B0  0E08               	movlw	8
  2601  0008B2  5DDC               	subwf	main@j& (0+255),w,b
  2602  0008B4  B0D8               	btfsc	status,0,c
  2603  0008B6  D025               	goto	u9470
  2604  0008B8                     l164:
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;newmain.c: 467: set_led(Buttons[i][j]);
  2608                           
  2609                           ; BSR set to: 0
  2610  0008B8  C0DE  F0CF         	movff	main@i,??_main
  2611  0008BC  C0DF  F0D0         	movff	main@i+1,??_main+1
  2612  0008C0  90D8               	bcf	status,0,c
  2613  0008C2  37CF               	rlcf	??_main& (0+255),f,b
  2614  0008C4  37D0               	rlcf	(??_main+1)& (0+255),f,b
  2615  0008C6  90D8               	bcf	status,0,c
  2616  0008C8  37CF               	rlcf	??_main& (0+255),f,b
  2617  0008CA  37D0               	rlcf	(??_main+1)& (0+255),f,b
  2618  0008CC  90D8               	bcf	status,0,c
  2619  0008CE  37CF               	rlcf	??_main& (0+255),f,b
  2620  0008D0  37D0               	rlcf	(??_main+1)& (0+255),f,b
  2621  0008D2  0EF9               	movlw	low _Buttons
  2622  0008D4  6FD1               	movwf	(??_main+2)& (0+255),b
  2623  0008D6  0E7E               	movlw	high _Buttons
  2624  0008D8  6FD2               	movwf	(??_main+3)& (0+255),b
  2625  0008DA  51CF               	movf	??_main& (0+255),w,b
  2626  0008DC  27D1               	addwf	(??_main+2)& (0+255),f,b
  2627  0008DE  51D0               	movf	(??_main+1)& (0+255),w,b
  2628  0008E0  23D2               	addwfc	(??_main+3)& (0+255),f,b
  2629  0008E2  51DC               	movf	main@j& (0+255),w,b
  2630  0008E4  27D1               	addwf	(??_main+2)& (0+255),f,b
  2631  0008E6  51DD               	movf	(main@j+1)& (0+255),w,b
  2632  0008E8  23D2               	addwfc	(??_main+3)& (0+255),f,b
  2633  0008EA  C0D1  FFF6         	movff	??_main+2,tblptrl
  2634  0008EE  C0D2  FFF7         	movff	??_main+3,tblptrh
  2635  0008F2                     	if	0	;tblptru may be non-zero
  2636  0008F2                     	endif
  2637  0008F2                     	if	0	;tblptru may be non-zero
  2638  0008F2                     	endif
  2639  0008F2  0008               	tblrd		*
  2640  0008F4  50F5               	movf	tablat,w,c
  2641  0008F6  EC23  F017         	call	_set_led
  2642  0008FA  0100               	movlb	0	; () banked
  2643  0008FC  4BDC               	infsnz	main@j& (0+255),f,b
  2644  0008FE  2BDD               	incf	(main@j+1)& (0+255),f,b
  2645  000900  D7D3               	goto	l6571
  2646  000902                     u9470:
  2647  000902                     l6581:
  2648                           
  2649                           ; BSR set to: 0
  2650  000902  4BDE               	infsnz	main@i& (0+255),f,b
  2651  000904  2BDF               	incf	(main@i+1)& (0+255),f,b
  2652  000906  D7C4               	goto	l6565
  2653  000908                     u9480:
  2654  000908                     l6585:
  2655                           
  2656                           ; BSR set to: 0
  2657                           ;newmain.c: 468: write_display();
  2658  000908  EC2E  F016         	call	_write_display	;wreg free
  2659                           
  2660                           ;newmain.c: 469: _delay((unsigned long)((50)*(4000000/4000.0)));
  2661  00090C  0E41               	movlw	65
  2662  00090E  0100               	movlb	0	; () banked
  2663  000910  6FCF               	movwf	??_main& (0+255),b
  2664  000912  0EEE               	movlw	238
  2665  000914                     u10127:
  2666  000914  2EE8               	decfsz	wreg,f,c
  2667  000916  D7FE               	bra	u10127
  2668  000918  2FCF               	decfsz	??_main& (0+255),f,b
  2669  00091A  D7FC               	bra	u10127
  2670  00091C  F000               	nop	
  2671                           
  2672                           ;newmain.c: 470: for (i = 0; i < 64; i++)
  2673  00091E  0E00               	movlw	0
  2674  000920  0100               	movlb	0	; () banked
  2675  000922  6FDF               	movwf	(main@i+1)& (0+255),b
  2676  000924  0E00               	movlw	0
  2677  000926  6FDE               	movwf	main@i& (0+255),b
  2678  000928                     l6591:
  2679                           
  2680                           ; BSR set to: 0
  2681  000928  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  2682  00092A  D006               	goto	l166
  2683  00092C  51DF               	movf	(main@i+1)& (0+255),w,b
  2684  00092E  E10B               	bnz	l6601
  2685  000930  0E40               	movlw	64
  2686  000932  5DDE               	subwf	main@i& (0+255),w,b
  2687  000934  B0D8               	btfsc	status,0,c
  2688  000936  D007               	goto	u9500
  2689  000938                     l166:
  2690                           
  2691                           ; BSR set to: 0
  2692                           ;newmain.c: 471: clr_led(i);
  2693                           
  2694                           ; BSR set to: 0
  2695  000938  51DE               	movf	main@i& (0+255),w,b
  2696  00093A  ECC8  F016         	call	_clr_led
  2697  00093E  0100               	movlb	0	; () banked
  2698  000940  4BDE               	infsnz	main@i& (0+255),f,b
  2699  000942  2BDF               	incf	(main@i+1)& (0+255),f,b
  2700  000944  D7F1               	goto	l6591
  2701  000946                     u9500:
  2702  000946                     l6601:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;newmain.c: 472: write_display();
  2706  000946  EC2E  F016         	call	_write_display	;wreg free
  2707  00094A                     
  2708                           ;newmain.c: 478: if (in_interrupt == 1) {
  2709  00094A  0100               	movlb	0	; () banked
  2710  00094C  05C0               	decf	_in_interrupt& (0+255),w,b	;volatile
  2711  00094E  A4D8               	btfss	status,2,c
  2712  000950  D7FC               	goto	l168
  2713                           
  2714                           ; BSR set to: 0
  2715                           ;newmain.c: 479: in_interrupt =0;
  2716  000952  0E00               	movlw	0
  2717  000954  6FC0               	movwf	_in_interrupt& (0+255),b	;volatile
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;newmain.c: 480: uint8_t x, y, note;
  2721                           ;newmain.c: 481: x = i2xy64[press_button] >> 4;
  2722  000956  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2723  000958  0D01               	mullw	1
  2724  00095A  0EF9               	movlw	low _i2xy64
  2725  00095C  24F3               	addwf	prodl,w,c
  2726  00095E  6EF6               	movwf	tblptrl,c
  2727  000960  0E7D               	movlw	high _i2xy64
  2728  000962  20F4               	addwfc	prodh,w,c
  2729  000964  6EF7               	movwf	tblptrh,c
  2730  000966                     	if	0	;There are less than 3 active tblptr bytes
  2731  000966                     	endif
  2732  000966  0008               	tblrd		*
  2733  000968  CFF5 F0CF          	movff	tablat,??_main
  2734  00096C  39CF               	swapf	??_main& (0+255),w,b
  2735  00096E  0B0F               	andlw	15
  2736  000970  6FD4               	movwf	main@x& (0+255),b
  2737                           
  2738                           ; BSR set to: 0
  2739                           ;newmain.c: 482: y = i2xy64[press_button]&15;
  2740  000972  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2741  000974  0D01               	mullw	1
  2742  000976  0EF9               	movlw	low _i2xy64
  2743  000978  24F3               	addwf	prodl,w,c
  2744  00097A  6EF6               	movwf	tblptrl,c
  2745  00097C  0E7D               	movlw	high _i2xy64
  2746  00097E  20F4               	addwfc	prodh,w,c
  2747  000980  6EF7               	movwf	tblptrh,c
  2748  000982                     	if	0	;There are less than 3 active tblptr bytes
  2749  000982                     	endif
  2750  000982  0008               	tblrd		*
  2751  000984  50F5               	movf	tablat,w,c
  2752  000986  0B0F               	andlw	15
  2753  000988  6FD5               	movwf	main@y& (0+255),b
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;newmain.c: 483: note = 32 + y * 8 + x;
  2757  00098A  51D5               	movf	main@y& (0+255),w,b
  2758  00098C  0D08               	mullw	8
  2759  00098E  50F3               	movf	prodl,w,c
  2760  000990  25D4               	addwf	main@x& (0+255),w,b
  2761  000992  0F20               	addlw	32
  2762  000994  6FD8               	movwf	main@note& (0+255),b
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;newmain.c: 485: if (press[press_button] == 0) {
  2766  000996  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2767  000998  0D02               	mullw	2
  2768  00099A  0E00               	movlw	low _press
  2769  00099C  24F3               	addwf	prodl,w,c
  2770  00099E  6ED9               	movwf	fsr2l,c
  2771  0009A0  0E01               	movlw	high _press
  2772  0009A2  20F4               	addwfc	prodh,w,c
  2773  0009A4  6EDA               	movwf	fsr2h,c
  2774  0009A6  50DE               	movf	postinc2,w,c
  2775  0009A8  10DE               	iorwf	postinc2,w,c
  2776  0009AA  A4D8               	btfss	status,2,c
  2777  0009AC  D036               	goto	l170
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;newmain.c: 486: if (play_mode == 0 || play_mode == 2) {
  2781  0009AE  51E0               	movf	_play_mode& (0+255),w,b
  2782  0009B0  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2783  0009B2  B4D8               	btfsc	status,2,c
  2784  0009B4  D005               	goto	u9540
  2785                           
  2786                           ; BSR set to: 0
  2787  0009B6  0E02               	movlw	2
  2788  0009B8  19E0               	xorwf	_play_mode& (0+255),w,b
  2789  0009BA  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2790  0009BC  A4D8               	btfss	status,2,c
  2791  0009BE  D011               	goto	l171
  2792  0009C0                     u9540:
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;newmain.c: 487: send_note(0x99, drum_midi[press_button], 0x40);
  2796                           
  2797                           ; BSR set to: 0
  2798  0009C0  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2799  0009C2  0D01               	mullw	1
  2800  0009C4  0EB9               	movlw	low _drum_midi
  2801  0009C6  24F3               	addwf	prodl,w,c
  2802  0009C8  6EF6               	movwf	tblptrl,c
  2803  0009CA  0E7D               	movlw	high _drum_midi
  2804  0009CC  20F4               	addwfc	prodh,w,c
  2805  0009CE  6EF7               	movwf	tblptrh,c
  2806  0009D0                     	if	0	;There are less than 3 active tblptr bytes
  2807  0009D0                     	endif
  2808  0009D0  0008               	tblrd		*
  2809  0009D2  CFF5 F02D          	movff	tablat,send_note@two
  2810  0009D6  0E40               	movlw	64
  2811  0009D8  6E2E               	movwf	send_note@three,c
  2812  0009DA  0E99               	movlw	153
  2813  0009DC  ECA9  F018         	call	_send_note
  2814                           
  2815                           ;newmain.c: 488: } else if (play_mode == 1 || play_mode == 3) {
  2816  0009E0  D011               	goto	l175
  2817  0009E2                     l171:
  2818  0009E2  0100               	movlb	0	; () banked
  2819  0009E4  05E0               	decf	_play_mode& (0+255),w,b
  2820  0009E6  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2821  0009E8  B4D8               	btfsc	status,2,c
  2822  0009EA  D005               	goto	u9560
  2823                           
  2824                           ; BSR set to: 0
  2825  0009EC  0E03               	movlw	3
  2826  0009EE  19E0               	xorwf	_play_mode& (0+255),w,b
  2827  0009F0  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2828  0009F2  A4D8               	btfss	status,2,c
  2829  0009F4  D007               	goto	l175
  2830  0009F6                     u9560:
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;newmain.c: 489: send_note(0x90, note, 127);
  2834                           
  2835                           ; BSR set to: 0
  2836  0009F6  C0D8  F02D         	movff	main@note,send_note@two
  2837  0009FA  0E7F               	movlw	127
  2838  0009FC  6E2E               	movwf	send_note@three,c
  2839  0009FE  0E90               	movlw	144
  2840  000A00  ECA9  F018         	call	_send_note
  2841  000A04                     l175:
  2842                           
  2843                           ;newmain.c: 490: }
  2844                           ;newmain.c: 491: press[press_button] = 1;
  2845  000A04  0100               	movlb	0	; () banked
  2846  000A06  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2847  000A08  0D02               	mullw	2
  2848  000A0A  0E00               	movlw	low _press
  2849  000A0C  24F3               	addwf	prodl,w,c
  2850  000A0E  6ED9               	movwf	fsr2l,c
  2851  000A10  0E01               	movlw	high _press
  2852  000A12  20F4               	addwfc	prodh,w,c
  2853  000A14  6EDA               	movwf	fsr2h,c
  2854  000A16  0E01               	movlw	1
  2855  000A18  D050               	goto	L1
  2856  000A1A                     l170:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;newmain.c: 493: if (play_mode == 0) {
  2860                           
  2861                           ; BSR set to: 0
  2862  000A1A  51E0               	movf	_play_mode& (0+255),w,b
  2863  000A1C  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2864  000A1E  A4D8               	btfss	status,2,c
  2865  000A20  D011               	goto	l179
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;newmain.c: 494: send_note(0x99, drum_midi[press_button], 0x40);
  2869  000A22  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2870  000A24  0D01               	mullw	1
  2871  000A26  0EB9               	movlw	low _drum_midi
  2872  000A28  24F3               	addwf	prodl,w,c
  2873  000A2A  6EF6               	movwf	tblptrl,c
  2874  000A2C  0E7D               	movlw	high _drum_midi
  2875  000A2E  20F4               	addwfc	prodh,w,c
  2876  000A30  6EF7               	movwf	tblptrh,c
  2877  000A32                     	if	0	;There are less than 3 active tblptr bytes
  2878  000A32                     	endif
  2879  000A32  0008               	tblrd		*
  2880  000A34  CFF5 F02D          	movff	tablat,send_note@two
  2881  000A38  0E40               	movlw	64
  2882  000A3A  6E2E               	movwf	send_note@three,c
  2883  000A3C  0E99               	movlw	153
  2884  000A3E  ECA9  F018         	call	_send_note
  2885                           
  2886                           ;newmain.c: 495: } else if (play_mode == 1) {
  2887  000A42  D031               	goto	l185
  2888  000A44                     l179:
  2889  000A44  0100               	movlb	0	; () banked
  2890  000A46  05E0               	decf	_play_mode& (0+255),w,b
  2891  000A48  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2892  000A4A  A4D8               	btfss	status,2,c
  2893  000A4C  D008               	goto	l181
  2894                           
  2895                           ; BSR set to: 0
  2896                           ;newmain.c: 496: send_note(0x90, note, 127);
  2897  000A4E  C0D8  F02D         	movff	main@note,send_note@two
  2898  000A52  0E7F               	movlw	127
  2899  000A54  6E2E               	movwf	send_note@three,c
  2900  000A56  0E90               	movlw	144
  2901  000A58  ECA9  F018         	call	_send_note
  2902                           
  2903                           ;newmain.c: 497: } else if (play_mode == 2) {
  2904  000A5C  D024               	goto	l185
  2905  000A5E                     l181:
  2906  000A5E  0E02               	movlw	2
  2907  000A60  0100               	movlb	0	; () banked
  2908  000A62  19E0               	xorwf	_play_mode& (0+255),w,b
  2909  000A64  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2910  000A66  A4D8               	btfss	status,2,c
  2911  000A68  D011               	goto	l183
  2912                           
  2913                           ; BSR set to: 0
  2914                           ;newmain.c: 498: send_note(0x89, drum_midi[press_button], 0x00);
  2915  000A6A  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2916  000A6C  0D01               	mullw	1
  2917  000A6E  0EB9               	movlw	low _drum_midi
  2918  000A70  24F3               	addwf	prodl,w,c
  2919  000A72  6EF6               	movwf	tblptrl,c
  2920  000A74  0E7D               	movlw	high _drum_midi
  2921  000A76  20F4               	addwfc	prodh,w,c
  2922  000A78  6EF7               	movwf	tblptrh,c
  2923  000A7A                     	if	0	;There are less than 3 active tblptr bytes
  2924  000A7A                     	endif
  2925  000A7A  0008               	tblrd		*
  2926  000A7C  CFF5 F02D          	movff	tablat,send_note@two
  2927  000A80  0E00               	movlw	0
  2928  000A82  6E2E               	movwf	send_note@three,c
  2929  000A84  0E89               	movlw	137
  2930  000A86  ECA9  F018         	call	_send_note
  2931                           
  2932                           ;newmain.c: 499: } else if (play_mode == 3) {
  2933  000A8A  D00D               	goto	l185
  2934  000A8C                     l183:
  2935  000A8C  0E03               	movlw	3
  2936  000A8E  0100               	movlb	0	; () banked
  2937  000A90  19E0               	xorwf	_play_mode& (0+255),w,b
  2938  000A92  11E1               	iorwf	(_play_mode+1)& (0+255),w,b
  2939  000A94  A4D8               	btfss	status,2,c
  2940  000A96  D007               	goto	l185
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;newmain.c: 500: send_note(0x80, note, 127);
  2944  000A98  C0D8  F02D         	movff	main@note,send_note@two
  2945  000A9C  0E7F               	movlw	127
  2946  000A9E  6E2E               	movwf	send_note@three,c
  2947  000AA0  0E80               	movlw	128
  2948  000AA2  ECA9  F018         	call	_send_note
  2949  000AA6                     l185:
  2950                           
  2951                           ;newmain.c: 501: }
  2952                           ;newmain.c: 502: press[press_button] = 0;
  2953  000AA6  0100               	movlb	0	; () banked
  2954  000AA8  51C3               	movf	_press_button& (0+255),w,b	;volatile
  2955  000AAA  0D02               	mullw	2
  2956  000AAC  0E00               	movlw	low _press
  2957  000AAE  24F3               	addwf	prodl,w,c
  2958  000AB0  6ED9               	movwf	fsr2l,c
  2959  000AB2  0E01               	movlw	high _press
  2960  000AB4  20F4               	addwfc	prodh,w,c
  2961  000AB6  6EDA               	movwf	fsr2h,c
  2962  000AB8  0E00               	movlw	0
  2963  000ABA                     L1:
  2964  000ABA  6EDE               	movwf	postinc2,c
  2965  000ABC  0E00               	movlw	0
  2966  000ABE  6EDD               	movwf	postdec2,c
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;newmain.c: 503: }
  2970                           ;newmain.c: 506: if (column == 19) {
  2971                           
  2972                           ; BSR set to: 0
  2973  000AC0  0E13               	movlw	19
  2974  000AC2  19C1               	xorwf	_column& (0+255),w,b	;volatile
  2975  000AC4  A4D8               	btfss	status,2,c
  2976  000AC6  D015               	goto	l186
  2977                           
  2978                           ; BSR set to: 0
  2979                           ;newmain.c: 507: for (i = 0; i < 64; i++)
  2980  000AC8  0E00               	movlw	0
  2981  000ACA  6FDF               	movwf	(main@i+1)& (0+255),b
  2982  000ACC  0E00               	movlw	0
  2983  000ACE  6FDE               	movwf	main@i& (0+255),b
  2984  000AD0                     l6651:
  2985                           
  2986                           ; BSR set to: 0
  2987  000AD0  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  2988  000AD2  D006               	goto	l187
  2989  000AD4  51DF               	movf	(main@i+1)& (0+255),w,b
  2990  000AD6  E10B               	bnz	l6661
  2991  000AD8  0E40               	movlw	64
  2992  000ADA  5DDE               	subwf	main@i& (0+255),w,b
  2993  000ADC  B0D8               	btfsc	status,0,c
  2994  000ADE  D007               	goto	u9630
  2995  000AE0                     l187:
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;newmain.c: 508: clr_led(i);
  2999                           
  3000                           ; BSR set to: 0
  3001  000AE0  51DE               	movf	main@i& (0+255),w,b
  3002  000AE2  ECC8  F016         	call	_clr_led
  3003  000AE6  0100               	movlb	0	; () banked
  3004  000AE8  4BDE               	infsnz	main@i& (0+255),f,b
  3005  000AEA  2BDF               	incf	(main@i+1)& (0+255),f,b
  3006  000AEC  D7F1               	goto	l6651
  3007  000AEE                     u9630:
  3008  000AEE                     l6661:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;newmain.c: 509: write_display();
  3012  000AEE  EC2E  F016         	call	_write_display	;wreg free
  3013  000AF2                     l186:
  3014                           
  3015                           ;newmain.c: 510: }
  3016                           ;newmain.c: 512: if (rightbutton == 0 && column != 19) {
  3017  000AF2  0100               	movlb	0	; () banked
  3018  000AF4  51C2               	movf	_rightbutton& (0+255),w,b	;volatile
  3019  000AF6  A4D8               	btfss	status,2,c
  3020  000AF8  D0AB               	goto	l189
  3021                           
  3022                           ; BSR set to: 0
  3023  000AFA  0E13               	movlw	19
  3024  000AFC  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3025  000AFE  B4D8               	btfsc	status,2,c
  3026  000B00  D0A7               	goto	l189
  3027                           
  3028                           ; BSR set to: 0
  3029                           ;newmain.c: 513: for (i = 0; i < 14; i++) {
  3030  000B02  0E00               	movlw	0
  3031  000B04  6FDF               	movwf	(main@i+1)& (0+255),b
  3032  000B06  0E00               	movlw	0
  3033  000B08  6FDE               	movwf	main@i& (0+255),b
  3034  000B0A                     l6669:
  3035                           
  3036                           ; BSR set to: 0
  3037  000B0A  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  3038  000B0C  D006               	goto	l190
  3039  000B0E  51DF               	movf	(main@i+1)& (0+255),w,b
  3040  000B10  E156               	bnz	l6707
  3041  000B12  0E0E               	movlw	14
  3042  000B14  5DDE               	subwf	main@i& (0+255),w,b
  3043  000B16  B0D8               	btfsc	status,0,c
  3044  000B18  D052               	goto	u9710
  3045  000B1A                     l190:
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;newmain.c: 514: if (press_button == show0_1[i]) {
  3049                           
  3050                           ; BSR set to: 0
  3051  000B1A  0E8B               	movlw	low _show0_1
  3052  000B1C  25DE               	addwf	main@i& (0+255),w,b
  3053  000B1E  6EF6               	movwf	tblptrl,c
  3054  000B20  0E7F               	movlw	high _show0_1
  3055  000B22  21DF               	addwfc	(main@i+1)& (0+255),w,b
  3056  000B24  6EF7               	movwf	tblptrh,c
  3057  000B26                     	if	0	;There are less than 3 active tblptr bytes
  3058  000B26                     	endif
  3059  000B26  0008               	tblrd		*
  3060  000B28  50F5               	movf	tablat,w,c
  3061  000B2A  19C3               	xorwf	_press_button& (0+255),w,b	;volatile
  3062  000B2C  A4D8               	btfss	status,2,c
  3063  000B2E  D002               	goto	l192
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;newmain.c: 515: m = 1;
  3067  000B30  0E01               	movlw	1
  3068  000B32  D03E               	goto	L4
  3069  000B34                     l192:
  3070                           
  3071                           ; BSR set to: 0
  3072                           
  3073                           ; BSR set to: 0
  3074  000B34  C0DE  F0CF         	movff	main@i,??_main
  3075  000B38  C0DF  F0D0         	movff	main@i+1,??_main+1
  3076  000B3C  1FCF               	comf	??_main& (0+255),f,b
  3077  000B3E  1FD0               	comf	(??_main+1)& (0+255),f,b
  3078  000B40  4BCF               	infsnz	??_main& (0+255),f,b
  3079  000B42  2BD0               	incf	(??_main+1)& (0+255),f,b
  3080  000B44  0E27               	movlw	39
  3081  000B46  27CF               	addwf	??_main& (0+255),f,b
  3082  000B48  0E00               	movlw	0
  3083  000B4A  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3084  000B4C  0E8B               	movlw	low _show0_1
  3085  000B4E  25CF               	addwf	??_main& (0+255),w,b
  3086  000B50  6EF6               	movwf	tblptrl,c
  3087  000B52  0E7F               	movlw	high _show0_1
  3088  000B54  21D0               	addwfc	(??_main+1)& (0+255),w,b
  3089  000B56  6EF7               	movwf	tblptrh,c
  3090  000B58                     	if	0	;There are less than 3 active tblptr bytes
  3091  000B58                     	endif
  3092  000B58  0008               	tblrd		*
  3093  000B5A  50F5               	movf	tablat,w,c
  3094  000B5C  19C3               	xorwf	_press_button& (0+255),w,b	;volatile
  3095  000B5E  A4D8               	btfss	status,2,c
  3096  000B60  D002               	goto	l194
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;newmain.c: 519: m = 2;
  3100  000B62  0E02               	movlw	2
  3101  000B64  D025               	goto	L4
  3102  000B66                     l194:
  3103                           
  3104                           ; BSR set to: 0
  3105                           
  3106                           ; BSR set to: 0
  3107  000B66  0E63               	movlw	low _show0_2
  3108  000B68  25DE               	addwf	main@i& (0+255),w,b
  3109  000B6A  6EF6               	movwf	tblptrl,c
  3110  000B6C  0E7F               	movlw	high _show0_2
  3111  000B6E  21DF               	addwfc	(main@i+1)& (0+255),w,b
  3112  000B70  6EF7               	movwf	tblptrh,c
  3113  000B72                     	if	0	;There are less than 3 active tblptr bytes
  3114  000B72                     	endif
  3115  000B72  0008               	tblrd		*
  3116  000B74  50F5               	movf	tablat,w,c
  3117  000B76  19C3               	xorwf	_press_button& (0+255),w,b	;volatile
  3118  000B78  A4D8               	btfss	status,2,c
  3119  000B7A  D002               	goto	l196
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;newmain.c: 523: m = 3;
  3123  000B7C  0E03               	movlw	3
  3124  000B7E  D018               	goto	L4
  3125  000B80                     l196:
  3126                           
  3127                           ; BSR set to: 0
  3128                           
  3129                           ; BSR set to: 0
  3130  000B80  C0DE  F0CF         	movff	main@i,??_main
  3131  000B84  C0DF  F0D0         	movff	main@i+1,??_main+1
  3132  000B88  1FCF               	comf	??_main& (0+255),f,b
  3133  000B8A  1FD0               	comf	(??_main+1)& (0+255),f,b
  3134  000B8C  4BCF               	infsnz	??_main& (0+255),f,b
  3135  000B8E  2BD0               	incf	(??_main+1)& (0+255),f,b
  3136  000B90  0E27               	movlw	39
  3137  000B92  27CF               	addwf	??_main& (0+255),f,b
  3138  000B94  0E00               	movlw	0
  3139  000B96  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3140  000B98  0E63               	movlw	low _show0_2
  3141  000B9A  25CF               	addwf	??_main& (0+255),w,b
  3142  000B9C  6EF6               	movwf	tblptrl,c
  3143  000B9E  0E7F               	movlw	high _show0_2
  3144  000BA0  21D0               	addwfc	(??_main+1)& (0+255),w,b
  3145  000BA2  6EF7               	movwf	tblptrh,c
  3146  000BA4                     	if	0	;There are less than 3 active tblptr bytes
  3147  000BA4                     	endif
  3148  000BA4  0008               	tblrd		*
  3149  000BA6  50F5               	movf	tablat,w,c
  3150  000BA8  19C3               	xorwf	_press_button& (0+255),w,b	;volatile
  3151  000BAA  A4D8               	btfss	status,2,c
  3152  000BAC  D005               	goto	l198
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;newmain.c: 527: m = 4;
  3156  000BAE  0E04               	movlw	4
  3157  000BB0                     L4:
  3158  000BB0  6FDB               	movwf	main@m& (0+255),b
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;newmain.c: 528: n = i;
  3162  000BB2  C0DE  F0DA         	movff	main@i,main@n
  3163                           
  3164                           ;newmain.c: 529: break;
  3165  000BB6  D003               	goto	u9710
  3166  000BB8                     l198:
  3167                           
  3168                           ; BSR set to: 0
  3169                           
  3170                           ; BSR set to: 0
  3171                           
  3172                           ; BSR set to: 0
  3173                           
  3174                           ; BSR set to: 0
  3175                           
  3176                           ; BSR set to: 0
  3177  000BB8  4BDE               	infsnz	main@i& (0+255),f,b
  3178  000BBA  2BDF               	incf	(main@i+1)& (0+255),f,b
  3179  000BBC  D7A6               	goto	l6669
  3180  000BBE                     u9710:
  3181  000BBE                     l6707:
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;newmain.c: 530: }
  3185                           ;newmain.c: 531: }
  3186                           ;newmain.c: 532: for (i = 0; i < 2; i++) {
  3187  000BBE  0E00               	movlw	0
  3188  000BC0  6FDF               	movwf	(main@i+1)& (0+255),b
  3189  000BC2  0E00               	movlw	0
  3190  000BC4  6FDE               	movwf	main@i& (0+255),b
  3191  000BC6                     l6709:
  3192                           
  3193                           ; BSR set to: 0
  3194  000BC6  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  3195  000BC8  D006               	goto	l199
  3196  000BCA  51DF               	movf	(main@i+1)& (0+255),w,b
  3197  000BCC  E13B               	bnz	l6733
  3198  000BCE  0E02               	movlw	2
  3199  000BD0  5DDE               	subwf	main@i& (0+255),w,b
  3200  000BD2  B0D8               	btfsc	status,0,c
  3201  000BD4  D037               	goto	u9760
  3202  000BD6                     l199:
  3203                           
  3204                           ; BSR set to: 0
  3205                           ;newmain.c: 533: for (j = 0; j < 8; j++) {
  3206                           
  3207                           ; BSR set to: 0
  3208  000BD6  0E00               	movlw	0
  3209  000BD8  6FDD               	movwf	(main@j+1)& (0+255),b
  3210  000BDA  0E00               	movlw	0
  3211  000BDC  6FDC               	movwf	main@j& (0+255),b
  3212  000BDE                     l6715:
  3213                           
  3214                           ; BSR set to: 0
  3215  000BDE  BFDD               	btfsc	(main@j+1)& (0+255),7,b
  3216  000BE0  D006               	goto	l201
  3217  000BE2  51DD               	movf	(main@j+1)& (0+255),w,b
  3218  000BE4  E12C               	bnz	l6729
  3219  000BE6  0E08               	movlw	8
  3220  000BE8  5DDC               	subwf	main@j& (0+255),w,b
  3221  000BEA  B0D8               	btfsc	status,0,c
  3222  000BEC  D028               	goto	u9750
  3223  000BEE                     l201:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;newmain.c: 534: if (press_button == show0_3[i][j]) {
  3227                           
  3228                           ; BSR set to: 0
  3229  000BEE  C0DE  F02D         	movff	main@i,___wmul@multiplier
  3230  000BF2  C0DF  F02E         	movff	main@i+1,___wmul@multiplier+1
  3231  000BF6  0E00               	movlw	0
  3232  000BF8  6E30               	movwf	___wmul@multiplicand+1,c
  3233  000BFA  0E14               	movlw	20
  3234  000BFC  6E2F               	movwf	___wmul@multiplicand,c
  3235  000BFE  EC83  F018         	call	___wmul	;wreg free
  3236  000C02  0E55               	movlw	low _show0_3
  3237  000C04  0100               	movlb	0	; () banked
  3238  000C06  6FCF               	movwf	??_main& (0+255),b
  3239  000C08  0E7B               	movlw	high _show0_3
  3240  000C0A  6FD0               	movwf	(??_main+1)& (0+255),b
  3241  000C0C  502D               	movf	?___wmul,w,c
  3242  000C0E  27CF               	addwf	??_main& (0+255),f,b
  3243  000C10  502E               	movf	?___wmul+1,w,c
  3244  000C12  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3245  000C14  51DC               	movf	main@j& (0+255),w,b
  3246  000C16  27CF               	addwf	??_main& (0+255),f,b
  3247  000C18  51DD               	movf	(main@j+1)& (0+255),w,b
  3248  000C1A  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3249  000C1C  C0CF  FFF6         	movff	??_main,tblptrl
  3250  000C20  C0D0  FFF7         	movff	??_main+1,tblptrh
  3251  000C24                     	if	0	;tblptru may be non-zero
  3252  000C24                     	endif
  3253  000C24                     	if	0	;tblptru may be non-zero
  3254  000C24                     	endif
  3255  000C24  0008               	tblrd		*
  3256  000C26  50F5               	movf	tablat,w,c
  3257  000C28  19C3               	xorwf	_press_button& (0+255),w,b	;volatile
  3258  000C2A  A4D8               	btfss	status,2,c
  3259  000C2C  D005               	goto	l203
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;newmain.c: 535: m = 5;
  3263  000C2E  0E05               	movlw	5
  3264  000C30  6FDB               	movwf	main@m& (0+255),b
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;newmain.c: 536: n = i;
  3268  000C32  C0DE  F0DA         	movff	main@i,main@n
  3269                           
  3270                           ;newmain.c: 537: break;
  3271  000C36  D003               	goto	u9750
  3272  000C38                     l203:
  3273                           
  3274                           ; BSR set to: 0
  3275                           
  3276                           ; BSR set to: 0
  3277  000C38  4BDC               	infsnz	main@j& (0+255),f,b
  3278  000C3A  2BDD               	incf	(main@j+1)& (0+255),f,b
  3279  000C3C  D7D0               	goto	l6715
  3280  000C3E                     u9750:
  3281  000C3E                     l6729:
  3282                           
  3283                           ; BSR set to: 0
  3284  000C3E  4BDE               	infsnz	main@i& (0+255),f,b
  3285  000C40  2BDF               	incf	(main@i+1)& (0+255),f,b
  3286  000C42  D7C1               	goto	l6709
  3287  000C44                     u9760:
  3288  000C44                     l6733:
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;newmain.c: 538: }
  3292                           ;newmain.c: 539: }
  3293                           ;newmain.c: 540: }
  3294                           ;newmain.c: 541: animation0(m, n);
  3295  000C44  C0DA  F042         	movff	main@n,animation0@n
  3296  000C48  51DB               	movf	main@m& (0+255),w,b
  3297  000C4A  ECB5  F00F         	call	_animation0
  3298                           
  3299                           ;newmain.c: 542: } else if (rightbutton == 1 && column != 19) {
  3300  000C4E  D121               	goto	l229
  3301  000C50                     l189:
  3302  000C50  0100               	movlb	0	; () banked
  3303  000C52  05C2               	decf	_rightbutton& (0+255),w,b	;volatile
  3304  000C54  A4D8               	btfss	status,2,c
  3305  000C56  D010               	goto	l205
  3306                           
  3307                           ; BSR set to: 0
  3308  000C58  0E13               	movlw	19
  3309  000C5A  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3310  000C5C  B4D8               	btfsc	status,2,c
  3311  000C5E  D00C               	goto	l205
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;newmain.c: 544: m = press_button >> 4;
  3315  000C60  39C3               	swapf	_press_button& (0+255),w,b	;volatile
  3316  000C62  0B0F               	andlw	15
  3317  000C64  6FDB               	movwf	main@m& (0+255),b
  3318                           
  3319                           ;newmain.c: 545: n = press_button & 0x0f;
  3320  000C66  51C3               	movf	_press_button& (0+255),w,b	;volatile
  3321  000C68  0B0F               	andlw	15
  3322  000C6A  6FDA               	movwf	main@n& (0+255),b
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;newmain.c: 546: animation1(m, n);
  3326  000C6C  C0DA  F042         	movff	main@n,animation1@n
  3327  000C70  51DB               	movf	main@m& (0+255),w,b
  3328  000C72  EC7C  F015         	call	_animation1
  3329                           
  3330                           ;newmain.c: 547: } else if (rightbutton == 2 && column != 19) {
  3331  000C76  D10D               	goto	l229
  3332  000C78                     l205:
  3333  000C78  0E02               	movlw	2
  3334  000C7A  0100               	movlb	0	; () banked
  3335  000C7C  19C2               	xorwf	_rightbutton& (0+255),w,b	;volatile
  3336  000C7E  A4D8               	btfss	status,2,c
  3337  000C80  D012               	goto	l207
  3338                           
  3339                           ; BSR set to: 0
  3340  000C82  0E13               	movlw	19
  3341  000C84  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3342  000C86  B4D8               	btfsc	status,2,c
  3343  000C88  D00E               	goto	l207
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;newmain.c: 548: m = press_button >> 4;
  3347  000C8A  39C3               	swapf	_press_button& (0+255),w,b	;volatile
  3348  000C8C  0B0F               	andlw	15
  3349  000C8E  6FDB               	movwf	main@m& (0+255),b
  3350                           
  3351                           ;newmain.c: 549: n = press_button & 0x0f;
  3352  000C90  51C3               	movf	_press_button& (0+255),w,b	;volatile
  3353  000C92  0B0F               	andlw	15
  3354  000C94  6FDA               	movwf	main@n& (0+255),b
  3355                           
  3356                           ; BSR set to: 0
  3357                           ;newmain.c: 550: animation2(m, n, press_button);
  3358  000C96  C0DA  F042         	movff	main@n,animation2@n
  3359  000C9A  C0C3  F043         	movff	_press_button,animation2@h	;volatile
  3360  000C9E  51DB               	movf	main@m& (0+255),w,b
  3361  000CA0  EC66  F007         	call	_animation2
  3362                           
  3363                           ;newmain.c: 551: } else if (rightbutton == 3 && column != 19) {
  3364  000CA4  D0F6               	goto	l229
  3365  000CA6                     l207:
  3366  000CA6  0E03               	movlw	3
  3367  000CA8  0100               	movlb	0	; () banked
  3368  000CAA  19C2               	xorwf	_rightbutton& (0+255),w,b	;volatile
  3369  000CAC  A4D8               	btfss	status,2,c
  3370  000CAE  D069               	goto	l209
  3371                           
  3372                           ; BSR set to: 0
  3373  000CB0  0E13               	movlw	19
  3374  000CB2  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3375  000CB4  B4D8               	btfsc	status,2,c
  3376  000CB6  D065               	goto	l209
  3377                           
  3378                           ; BSR set to: 0
  3379                           ;newmain.c: 552: for (i = 0; i < 4; i++)
  3380  000CB8  0E00               	movlw	0
  3381  000CBA  6FDF               	movwf	(main@i+1)& (0+255),b
  3382  000CBC  0E00               	movlw	0
  3383  000CBE  6FDE               	movwf	main@i& (0+255),b
  3384  000CC0                     l6757:
  3385                           
  3386                           ; BSR set to: 0
  3387  000CC0  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  3388  000CC2  D006               	goto	l210
  3389  000CC4  51DF               	movf	(main@i+1)& (0+255),w,b
  3390  000CC6  E159               	bnz	l6781
  3391  000CC8  0E04               	movlw	4
  3392  000CCA  5DDE               	subwf	main@i& (0+255),w,b
  3393  000CCC  B0D8               	btfsc	status,0,c
  3394  000CCE  D055               	goto	u9880
  3395  000CD0                     l210:
  3396                           
  3397                           ; BSR set to: 0
  3398                           ;newmain.c: 553: for (j = 0; j < 26; j++)
  3399                           
  3400                           ; BSR set to: 0
  3401  000CD0  0E00               	movlw	0
  3402  000CD2  6FDD               	movwf	(main@j+1)& (0+255),b
  3403  000CD4  0E00               	movlw	0
  3404  000CD6  6FDC               	movwf	main@j& (0+255),b
  3405  000CD8                     l6763:
  3406                           
  3407                           ; BSR set to: 0
  3408  000CD8  BFDD               	btfsc	(main@j+1)& (0+255),7,b
  3409  000CDA  D006               	goto	l212
  3410  000CDC  51DD               	movf	(main@j+1)& (0+255),w,b
  3411  000CDE  E14A               	bnz	l6777
  3412  000CE0  0E1A               	movlw	26
  3413  000CE2  5DDC               	subwf	main@j& (0+255),w,b
  3414  000CE4  B0D8               	btfsc	status,0,c
  3415  000CE6  D046               	goto	u9870
  3416  000CE8                     l212:
  3417                           
  3418                           ; BSR set to: 0
  3419                           ;newmain.c: 554: if (circle[i][j] != 100) {
  3420                           
  3421                           ; BSR set to: 0
  3422  000CE8  C0DE  F02D         	movff	main@i,___wmul@multiplier
  3423  000CEC  C0DF  F02E         	movff	main@i+1,___wmul@multiplier+1
  3424  000CF0  0E00               	movlw	0
  3425  000CF2  6E30               	movwf	___wmul@multiplicand+1,c
  3426  000CF4  0E1A               	movlw	26
  3427  000CF6  6E2F               	movwf	___wmul@multiplicand,c
  3428  000CF8  EC83  F018         	call	___wmul	;wreg free
  3429  000CFC  0E41               	movlw	low _circle
  3430  000CFE  0100               	movlb	0	; () banked
  3431  000D00  6FCF               	movwf	??_main& (0+255),b
  3432  000D02  0E7C               	movlw	high _circle
  3433  000D04  6FD0               	movwf	(??_main+1)& (0+255),b
  3434  000D06  502D               	movf	?___wmul,w,c
  3435  000D08  27CF               	addwf	??_main& (0+255),f,b
  3436  000D0A  502E               	movf	?___wmul+1,w,c
  3437  000D0C  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3438  000D0E  51DC               	movf	main@j& (0+255),w,b
  3439  000D10  27CF               	addwf	??_main& (0+255),f,b
  3440  000D12  51DD               	movf	(main@j+1)& (0+255),w,b
  3441  000D14  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3442  000D16  C0CF  FFF6         	movff	??_main,tblptrl
  3443  000D1A  C0D0  FFF7         	movff	??_main+1,tblptrh
  3444  000D1E                     	if	0	;tblptru may be non-zero
  3445  000D1E                     	endif
  3446  000D1E                     	if	0	;tblptru may be non-zero
  3447  000D1E                     	endif
  3448  000D1E  0008               	tblrd		*
  3449  000D20  50F5               	movf	tablat,w,c
  3450  000D22  0A64               	xorlw	100
  3451  000D24  B4D8               	btfsc	status,2,c
  3452  000D26  D023               	goto	l215
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;newmain.c: 555: if (press_button == circle[i][j]) {
  3456  000D28  C0DE  F02D         	movff	main@i,___wmul@multiplier
  3457  000D2C  C0DF  F02E         	movff	main@i+1,___wmul@multiplier+1
  3458  000D30  0E00               	movlw	0
  3459  000D32  6E30               	movwf	___wmul@multiplicand+1,c
  3460  000D34  0E1A               	movlw	26
  3461  000D36  6E2F               	movwf	___wmul@multiplicand,c
  3462  000D38  EC83  F018         	call	___wmul	;wreg free
  3463  000D3C  0E41               	movlw	low _circle
  3464  000D3E  0100               	movlb	0	; () banked
  3465  000D40  6FCF               	movwf	??_main& (0+255),b
  3466  000D42  0E7C               	movlw	high _circle
  3467  000D44  6FD0               	movwf	(??_main+1)& (0+255),b
  3468  000D46  502D               	movf	?___wmul,w,c
  3469  000D48  27CF               	addwf	??_main& (0+255),f,b
  3470  000D4A  502E               	movf	?___wmul+1,w,c
  3471  000D4C  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3472  000D4E  51DC               	movf	main@j& (0+255),w,b
  3473  000D50  27CF               	addwf	??_main& (0+255),f,b
  3474  000D52  51DD               	movf	(main@j+1)& (0+255),w,b
  3475  000D54  23D0               	addwfc	(??_main+1)& (0+255),f,b
  3476  000D56  C0CF  FFF6         	movff	??_main,tblptrl
  3477  000D5A  C0D0  FFF7         	movff	??_main+1,tblptrh
  3478  000D5E                     	if	0	;tblptru may be non-zero
  3479  000D5E                     	endif
  3480  000D5E                     	if	0	;tblptru may be non-zero
  3481  000D5E                     	endif
  3482  000D5E  0008               	tblrd		*
  3483  000D60  50F5               	movf	tablat,w,c
  3484  000D62  19C3               	xorwf	_press_button& (0+255),w,b	;volatile
  3485  000D64  A4D8               	btfss	status,2,c
  3486  000D66  D003               	goto	l215
  3487                           
  3488                           ; BSR set to: 0
  3489                           ;newmain.c: 556: m = i;
  3490  000D68  C0DE  F0DB         	movff	main@i,main@m
  3491                           
  3492                           ;newmain.c: 557: goto A;
  3493  000D6C  D006               	goto	u9880
  3494  000D6E                     l215:
  3495                           
  3496                           ; BSR set to: 0
  3497                           
  3498                           ; BSR set to: 0
  3499                           
  3500                           ; BSR set to: 0
  3501  000D6E  4BDC               	infsnz	main@j& (0+255),f,b
  3502  000D70  2BDD               	incf	(main@j+1)& (0+255),f,b
  3503  000D72  D7B2               	goto	l6763
  3504  000D74                     u9870:
  3505  000D74                     l6777:
  3506                           
  3507                           ; BSR set to: 0
  3508  000D74  4BDE               	infsnz	main@i& (0+255),f,b
  3509  000D76  2BDF               	incf	(main@i+1)& (0+255),f,b
  3510  000D78  D7A3               	goto	l6757
  3511  000D7A                     u9880:
  3512  000D7A                     l6781:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;newmain.c: 561: animation3(m);
  3516  000D7A  51DB               	movf	main@m& (0+255),w,b
  3517  000D7C  EC09  F000         	call	_animation3
  3518                           
  3519                           ;newmain.c: 562: } else if (rightbutton == 8 && column != 19) {
  3520  000D80  D088               	goto	l229
  3521  000D82                     l209:
  3522  000D82  0E08               	movlw	8
  3523  000D84  0100               	movlb	0	; () banked
  3524  000D86  19C2               	xorwf	_rightbutton& (0+255),w,b	;volatile
  3525  000D88  A4D8               	btfss	status,2,c
  3526  000D8A  D00D               	goto	l218
  3527                           
  3528                           ; BSR set to: 0
  3529  000D8C  0E13               	movlw	19
  3530  000D8E  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3531  000D90  B4D8               	btfsc	status,2,c
  3532  000D92  D009               	goto	l218
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;newmain.c: 563: m = press_button >> 4;
  3536  000D94  39C3               	swapf	_press_button& (0+255),w,b	;volatile
  3537  000D96  0B0F               	andlw	15
  3538  000D98  6FDB               	movwf	main@m& (0+255),b
  3539                           
  3540                           ; BSR set to: 0
  3541                           ;newmain.c: 564: animation4(m, press_button);
  3542  000D9A  C0C3  F042         	movff	_press_button,animation4@h	;volatile
  3543  000D9E  51DB               	movf	main@m& (0+255),w,b
  3544  000DA0  EC7F  F00D         	call	_animation4
  3545                           
  3546                           ;newmain.c: 565: } else if (rightbutton == 9 && column != 19) {
  3547  000DA4  D076               	goto	l229
  3548  000DA6                     l218:
  3549  000DA6  0E09               	movlw	9
  3550  000DA8  0100               	movlb	0	; () banked
  3551  000DAA  19C2               	xorwf	_rightbutton& (0+255),w,b	;volatile
  3552  000DAC  A4D8               	btfss	status,2,c
  3553  000DAE  D012               	goto	l220
  3554                           
  3555                           ; BSR set to: 0
  3556  000DB0  0E13               	movlw	19
  3557  000DB2  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3558  000DB4  B4D8               	btfsc	status,2,c
  3559  000DB6  D00E               	goto	l220
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;newmain.c: 567: m = press_button >> 4;
  3563  000DB8  39C3               	swapf	_press_button& (0+255),w,b	;volatile
  3564  000DBA  0B0F               	andlw	15
  3565  000DBC  6FDB               	movwf	main@m& (0+255),b
  3566                           
  3567                           ;newmain.c: 568: n = press_button & 0x0f;
  3568  000DBE  51C3               	movf	_press_button& (0+255),w,b	;volatile
  3569  000DC0  0B0F               	andlw	15
  3570  000DC2  6FDA               	movwf	main@n& (0+255),b
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;newmain.c: 569: animation5(m, n, press_button);
  3574  000DC4  C0DA  F042         	movff	main@n,animation5@n
  3575  000DC8  C0C3  F043         	movff	_press_button,animation5@h	;volatile
  3576  000DCC  51DB               	movf	main@m& (0+255),w,b
  3577  000DCE  ECA2  F011         	call	_animation5
  3578                           
  3579                           ;newmain.c: 571: } else if (rightbutton == 10 && column != 19) {
  3580  000DD2  D05F               	goto	l229
  3581  000DD4                     l220:
  3582  000DD4  0E0A               	movlw	10
  3583  000DD6  0100               	movlb	0	; () banked
  3584  000DD8  19C2               	xorwf	_rightbutton& (0+255),w,b	;volatile
  3585  000DDA  A4D8               	btfss	status,2,c
  3586  000DDC  D04E               	goto	l222
  3587                           
  3588                           ; BSR set to: 0
  3589  000DDE  0E13               	movlw	19
  3590  000DE0  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3591  000DE2  B4D8               	btfsc	status,2,c
  3592  000DE4  D04A               	goto	l222
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;newmain.c: 572: for (i = 0; i < 8; i++) {
  3596  000DE6  0E00               	movlw	0
  3597  000DE8  6FDF               	movwf	(main@i+1)& (0+255),b
  3598  000DEA  0E00               	movlw	0
  3599  000DEC  6FDE               	movwf	main@i& (0+255),b
  3600  000DEE                     l6805:
  3601                           
  3602                           ; BSR set to: 0
  3603  000DEE  BFDF               	btfsc	(main@i+1)& (0+255),7,b
  3604  000DF0  D006               	goto	l223
  3605  000DF2  51DF               	movf	(main@i+1)& (0+255),w,b
  3606  000DF4  E13C               	bnz	l6827
  3607  000DF6  0E08               	movlw	8
  3608  000DF8  5DDE               	subwf	main@i& (0+255),w,b
  3609  000DFA  B0D8               	btfsc	status,0,c
  3610  000DFC  D038               	goto	u9990
  3611  000DFE                     l223:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;newmain.c: 573: for (j = 0; j < 8; j++) {
  3615                           
  3616                           ; BSR set to: 0
  3617  000DFE  0E00               	movlw	0
  3618  000E00  6FDD               	movwf	(main@j+1)& (0+255),b
  3619  000E02  0E00               	movlw	0
  3620  000E04  6FDC               	movwf	main@j& (0+255),b
  3621  000E06                     l6811:
  3622                           
  3623                           ; BSR set to: 0
  3624  000E06  BFDD               	btfsc	(main@j+1)& (0+255),7,b
  3625  000E08  D006               	goto	l225
  3626  000E0A  51DD               	movf	(main@j+1)& (0+255),w,b
  3627  000E0C  E12D               	bnz	l6823
  3628  000E0E  0E08               	movlw	8
  3629  000E10  5DDC               	subwf	main@j& (0+255),w,b
  3630  000E12  B0D8               	btfsc	status,0,c
  3631  000E14  D029               	goto	u9980
  3632  000E16                     l225:
  3633                           
  3634                           ; BSR set to: 0
  3635                           ;newmain.c: 574: if (press_button == Buttons[i][j]) {
  3636                           
  3637                           ; BSR set to: 0
  3638  000E16  C0DE  F0CF         	movff	main@i,??_main
  3639  000E1A  C0DF  F0D0         	movff	main@i+1,??_main+1
  3640  000E1E  90D8               	bcf	status,0,c
  3641  000E20  37CF               	rlcf	??_main& (0+255),f,b
  3642  000E22  37D0               	rlcf	(??_main+1)& (0+255),f,b
  3643  000E24  90D8               	bcf	status,0,c
  3644  000E26  37CF               	rlcf	??_main& (0+255),f,b
  3645  000E28  37D0               	rlcf	(??_main+1)& (0+255),f,b
  3646  000E2A  90D8               	bcf	status,0,c
  3647  000E2C  37CF               	rlcf	??_main& (0+255),f,b
  3648  000E2E  37D0               	rlcf	(??_main+1)& (0+255),f,b
  3649  000E30  0EF9               	movlw	low _Buttons
  3650  000E32  6FD1               	movwf	(??_main+2)& (0+255),b
  3651  000E34  0E7E               	movlw	high _Buttons
  3652  000E36  6FD2               	movwf	(??_main+3)& (0+255),b
  3653  000E38  51CF               	movf	??_main& (0+255),w,b
  3654  000E3A  27D1               	addwf	(??_main+2)& (0+255),f,b
  3655  000E3C  51D0               	movf	(??_main+1)& (0+255),w,b
  3656  000E3E  23D2               	addwfc	(??_main+3)& (0+255),f,b
  3657  000E40  51DC               	movf	main@j& (0+255),w,b
  3658  000E42  27D1               	addwf	(??_main+2)& (0+255),f,b
  3659  000E44  51DD               	movf	(main@j+1)& (0+255),w,b
  3660  000E46  23D2               	addwfc	(??_main+3)& (0+255),f,b
  3661  000E48  C0D1  FFF6         	movff	??_main+2,tblptrl
  3662  000E4C  C0D2  FFF7         	movff	??_main+3,tblptrh
  3663  000E50                     	if	0	;tblptru may be non-zero
  3664  000E50                     	endif
  3665  000E50                     	if	0	;tblptru may be non-zero
  3666  000E50                     	endif
  3667  000E50  0008               	tblrd		*
  3668  000E52  50F5               	movf	tablat,w,c
  3669  000E54  19C3               	xorwf	_press_button& (0+255),w,b	;volatile
  3670  000E56  A4D8               	btfss	status,2,c
  3671  000E58  D004               	goto	l227
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;newmain.c: 575: m = i;
  3675  000E5A  C0DE  F0DB         	movff	main@i,main@m
  3676                           
  3677                           ;newmain.c: 576: n = j;
  3678  000E5E  C0DC  F0DA         	movff	main@j,main@n
  3679  000E62                     l227:
  3680                           
  3681                           ; BSR set to: 0
  3682                           
  3683                           ; BSR set to: 0
  3684  000E62  4BDC               	infsnz	main@j& (0+255),f,b
  3685  000E64  2BDD               	incf	(main@j+1)& (0+255),f,b
  3686  000E66  D7CF               	goto	l6811
  3687  000E68                     u9980:
  3688  000E68                     l6823:
  3689                           
  3690                           ; BSR set to: 0
  3691  000E68  4BDE               	infsnz	main@i& (0+255),f,b
  3692  000E6A  2BDF               	incf	(main@i+1)& (0+255),f,b
  3693  000E6C  D7C0               	goto	l6805
  3694  000E6E                     u9990:
  3695  000E6E                     l6827:
  3696                           
  3697                           ; BSR set to: 0
  3698                           ;newmain.c: 577: }
  3699                           ;newmain.c: 578: }
  3700                           ;newmain.c: 579: }
  3701                           ;newmain.c: 580: animation6(m, n);
  3702  000E6E  C0DA  F042         	movff	main@n,animation6@n
  3703  000E72  51DB               	movf	main@m& (0+255),w,b
  3704  000E74  EC2A  F013         	call	_animation6
  3705                           
  3706                           ;newmain.c: 581: } else if (rightbutton == 11 && column != 19) {
  3707  000E78  D00C               	goto	l229
  3708  000E7A                     l222:
  3709  000E7A  0E0B               	movlw	11
  3710  000E7C  0100               	movlb	0	; () banked
  3711  000E7E  19C2               	xorwf	_rightbutton& (0+255),w,b	;volatile
  3712  000E80  A4D8               	btfss	status,2,c
  3713  000E82  D007               	goto	l229
  3714                           
  3715                           ; BSR set to: 0
  3716  000E84  0E13               	movlw	19
  3717  000E86  19C1               	xorwf	_column& (0+255),w,b	;volatile
  3718  000E88  B4D8               	btfsc	status,2,c
  3719  000E8A  D003               	goto	l229
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;newmain.c: 582: animation7(press_button);
  3723  000E8C  51C3               	movf	_press_button& (0+255),w,b	;volatile
  3724  000E8E  EC06  F00B         	call	_animation7
  3725  000E92                     l229:
  3726                           
  3727                           ;newmain.c: 583: }
  3728                           ;newmain.c: 586: for (k = 0; k < 64; k++) {
  3729  000E92  0E00               	movlw	0
  3730  000E94  0100               	movlb	0	; () banked
  3731  000E96  6FD9               	movwf	main@k& (0+255),b
  3732  000E98                     l6837:
  3733                           
  3734                           ; BSR set to: 0
  3735  000E98  0E3F               	movlw	63
  3736  000E9A  65D9               	cpfsgt	main@k& (0+255),b
  3737  000E9C  D001               	goto	l230
  3738  000E9E  D012               	goto	u10040
  3739  000EA0                     l230:
  3740                           
  3741                           ; BSR set to: 0
  3742                           ;newmain.c: 587: if (press[k] == 1) {
  3743                           
  3744                           ; BSR set to: 0
  3745  000EA0  51D9               	movf	main@k& (0+255),w,b
  3746  000EA2  0D02               	mullw	2
  3747  000EA4  0E00               	movlw	low _press
  3748  000EA6  24F3               	addwf	prodl,w,c
  3749  000EA8  6ED9               	movwf	fsr2l,c
  3750  000EAA  0E01               	movlw	high _press
  3751  000EAC  20F4               	addwfc	prodh,w,c
  3752  000EAE  6EDA               	movwf	fsr2h,c
  3753  000EB0  04DE               	decf	postinc2,w,c
  3754  000EB2  10DE               	iorwf	postinc2,w,c
  3755  000EB4  A4D8               	btfss	status,2,c
  3756  000EB6  D003               	goto	l232
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;newmain.c: 588: set_led(k);
  3760  000EB8  51D9               	movf	main@k& (0+255),w,b
  3761  000EBA  EC23  F017         	call	_set_led
  3762  000EBE                     l232:
  3763  000EBE  0100               	movlb	0	; () banked
  3764  000EC0  2BD9               	incf	main@k& (0+255),f,b
  3765  000EC2  D7EA               	goto	l6837
  3766  000EC4                     u10040:
  3767                           
  3768                           ; BSR set to: 0
  3769                           ;newmain.c: 589: }
  3770                           ;newmain.c: 590: }
  3771                           ;newmain.c: 591: write_display();
  3772                           
  3773                           ; BSR set to: 0
  3774  000EC4  EC2E  F016         	call	_write_display	;wreg free
  3775  000EC8  D540               	goto	l168
  3776  000ECA                     
  3777                           ;newmain.c: 594: }
  3778                           ;newmain.c: 597: }
  3779                           ;newmain.c: 599: while (1);
  3780  000ECA  D7FF               	goto	l234
  3781  000ECC                     __end_of_main:
  3782                           	opt stack 0
  3783                           tblptru	equ	0xFF8
  3784                           tblptrh	equ	0xFF7
  3785                           tblptrl	equ	0xFF6
  3786                           tablat	equ	0xFF5
  3787                           prodh	equ	0xFF4
  3788                           prodl	equ	0xFF3
  3789                           postinc0	equ	0xFEE
  3790                           wreg	equ	0xFE8
  3791                           indf2	equ	0xFDF
  3792                           postinc2	equ	0xFDE
  3793                           postdec2	equ	0xFDD
  3794                           fsr2h	equ	0xFDA
  3795                           fsr2l	equ	0xFD9
  3796                           status	equ	0xFD8
  3797                           
  3798 ;; *************** function _send_note *****************
  3799 ;; Defined at:
  3800 ;;		line 651 in file "newmain.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  one             1    wreg     unsigned char 
  3803 ;;  two             1   44[COMRAM] unsigned char 
  3804 ;;  three           1   45[COMRAM] unsigned char 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  one             1   46[COMRAM] unsigned char 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3816 ;;      Params:         2       0       0       0       0       0       0
  3817 ;;      Locals:         1       0       0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0       0
  3819 ;;      Totals:         3       0       0       0       0       0       0
  3820 ;;Total ram usage:        3 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:    3
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text1
  3831  003152                     __ptext1:
  3832                           	opt stack 0
  3833  003152                     _send_note:
  3834                           	opt stack 27
  3835                           
  3836                           ;incstack = 0
  3837                           ;send_note@one stored from wreg
  3838  003152  6E2F               	movwf	send_note@one,c
  3839  003154                     
  3840                           ;newmain.c: 652: while (!PIR1bits.TXIF || !TRMT);
  3841  003154  B89E               	btfsc	3998,4,c	;volatile
  3842  003156  A2AC               	btfss	4012,1,c	;volatile
  3843  003158  D7FD               	goto	l3375
  3844                           
  3845                           ;newmain.c: 653: TXREG = one;
  3846  00315A  C02F  FFAD         	movff	send_note@one,4013	;volatile
  3847  00315E  B89E               	btfsc	3998,4,c	;volatile
  3848  003160  A2AC               	btfss	4012,1,c	;volatile
  3849  003162  D7FD               	goto	l266
  3850                           
  3851                           ;newmain.c: 655: TXREG = two;
  3852  003164  C02D  FFAD         	movff	send_note@two,4013	;volatile
  3853  003168  B89E               	btfsc	3998,4,c	;volatile
  3854  00316A  A2AC               	btfss	4012,1,c	;volatile
  3855  00316C  D7FD               	goto	l269
  3856                           
  3857                           ;newmain.c: 657: TXREG = three;
  3858  00316E  C02E  FFAD         	movff	send_note@three,4013	;volatile
  3859  003172  0012               	return		;funcret
  3860  003174                     __end_of_send_note:
  3861                           	opt stack 0
  3862                           tblptru	equ	0xFF8
  3863                           tblptrh	equ	0xFF7
  3864                           tblptrl	equ	0xFF6
  3865                           tablat	equ	0xFF5
  3866                           prodh	equ	0xFF4
  3867                           prodl	equ	0xFF3
  3868                           postinc0	equ	0xFEE
  3869                           wreg	equ	0xFE8
  3870                           indf2	equ	0xFDF
  3871                           postinc2	equ	0xFDE
  3872                           postdec2	equ	0xFDD
  3873                           fsr2h	equ	0xFDA
  3874                           fsr2l	equ	0xFD9
  3875                           status	equ	0xFD8
  3876                           
  3877 ;; *************** function _keypad_interrupt *****************
  3878 ;; Defined at:
  3879 ;;		line 407 in file "newmain.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;		None
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;		None
  3884 ;; Return value:  Size  Location     Type
  3885 ;;                  1    wreg      void 
  3886 ;; Registers used:
  3887 ;;		None
  3888 ;; Tracked objects:
  3889 ;;		On entry : 0/0
  3890 ;;		On exit  : 0/0
  3891 ;;		Unchanged: 0/0
  3892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3893 ;;      Params:         0       0       0       0       0       0       0
  3894 ;;      Locals:         0       0       0       0       0       0       0
  3895 ;;      Temps:          0       0       0       0       0       0       0
  3896 ;;      Totals:         0       0       0       0       0       0       0
  3897 ;;Total ram usage:        0 bytes
  3898 ;; Hardware stack levels used:    1
  3899 ;; Hardware stack levels required when called:    3
  3900 ;; This function calls:
  3901 ;;		Nothing
  3902 ;; This function is called by:
  3903 ;;		_main
  3904 ;; This function uses a non-reentrant model
  3905 ;;
  3906                           
  3907                           	psect	text2
  3908  0031B8                     __ptext2:
  3909                           	opt stack 0
  3910  0031B8                     _keypad_interrupt:
  3911                           	opt stack 27
  3912                           
  3913                           ;newmain.c: 408: INTCONbits.INT0IE = 1;
  3914                           
  3915                           ;incstack = 0
  3916  0031B8  88F2               	bsf	intcon,4,c	;volatile
  3917                           
  3918                           ;newmain.c: 409: RCONbits.IPEN = 1;
  3919  0031BA  8ED0               	bsf	4048,7,c	;volatile
  3920                           
  3921                           ;newmain.c: 410: INTCONbits.GIE = 1;
  3922  0031BC  8EF2               	bsf	intcon,7,c	;volatile
  3923                           
  3924                           ;newmain.c: 411: INTCONbits.INT0IF = 0;
  3925  0031BE  92F2               	bcf	intcon,1,c	;volatile
  3926                           
  3927                           ;newmain.c: 412: INTCON2bits.INTEDG0 = 0;
  3928  0031C0  9CF1               	bcf	intcon2,6,c	;volatile
  3929                           
  3930                           ;newmain.c: 414: TRISBbits.TRISB0 = 1;
  3931  0031C2  8093               	bsf	3987,0,c	;volatile
  3932  0031C4  0012               	return		;funcret
  3933  0031C6                     __end_of_keypad_interrupt:
  3934                           	opt stack 0
  3935                           tblptru	equ	0xFF8
  3936                           tblptrh	equ	0xFF7
  3937                           tblptrl	equ	0xFF6
  3938                           tablat	equ	0xFF5
  3939                           prodh	equ	0xFF4
  3940                           prodl	equ	0xFF3
  3941                           intcon	equ	0xFF2
  3942                           intcon2	equ	0xFF1
  3943                           postinc0	equ	0xFEE
  3944                           wreg	equ	0xFE8
  3945                           indf2	equ	0xFDF
  3946                           postinc2	equ	0xFDE
  3947                           postdec2	equ	0xFDD
  3948                           fsr2h	equ	0xFDA
  3949                           fsr2l	equ	0xFD9
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function _animation7 *****************
  3953 ;; Defined at:
  3954 ;;		line 1137 in file "newmain.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  h               1    wreg     unsigned char 
  3957 ;; Auto vars:     Size  Location     Type
  3958 ;;  h               1   67[COMRAM] unsigned char 
  3959 ;;  j               2   70[COMRAM] int 
  3960 ;;  i               2   68[COMRAM] int 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3970 ;;      Params:         0       0       0       0       0       0       0
  3971 ;;      Locals:         5       0       0       0       0       0       0
  3972 ;;      Temps:          2       0       0       0       0       0       0
  3973 ;;      Totals:         7       0       0       0       0       0       0
  3974 ;;Total ram usage:        7 bytes
  3975 ;; Hardware stack levels used:    1
  3976 ;; Hardware stack levels required when called:    7
  3977 ;; This function calls:
  3978 ;;		___wmul
  3979 ;;		_clr_led
  3980 ;;		_set_led
  3981 ;;		_write_display
  3982 ;; This function is called by:
  3983 ;;		_main
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text3
  3988  00160C                     __ptext3:
  3989                           	opt stack 0
  3990  00160C                     _animation7:
  3991                           	opt stack 23
  3992                           
  3993                           ;incstack = 0
  3994                           ;animation7@h stored from wreg
  3995  00160C  6E44               	movwf	animation7@h,c
  3996                           
  3997                           ;newmain.c: 1138: int i = 0, j = 0;
  3998  00160E  0E00               	movlw	0
  3999  001610  6E46               	movwf	animation7@i+1,c
  4000  001612  0E00               	movlw	0
  4001  001614  6E45               	movwf	animation7@i,c
  4002  001616  0E00               	movlw	0
  4003  001618  6E48               	movwf	animation7@j+1,c
  4004  00161A  0E00               	movlw	0
  4005  00161C  6E47               	movwf	animation7@j,c
  4006                           
  4007                           ;newmain.c: 1139: if (h == 15 || h == 28 || h == 35 || h == 48 || h == 10 || h == 11 || 
      +                          h == 24 || h == 25 || h == 14 || h == 34 || h == 38 || h == 39 || h == 52 || h == 53 || 
      +                          h == 29 || h == 49) {
  4008  00161E  0E0F               	movlw	15
  4009  001620  1844               	xorwf	animation7@h,w,c
  4010  001622  B4D8               	btfsc	status,2,c
  4011  001624  D03C               	goto	u9160
  4012  001626  0E1C               	movlw	28
  4013  001628  1844               	xorwf	animation7@h,w,c
  4014  00162A  B4D8               	btfsc	status,2,c
  4015  00162C  D038               	goto	u9160
  4016  00162E  0E23               	movlw	35
  4017  001630  1844               	xorwf	animation7@h,w,c
  4018  001632  B4D8               	btfsc	status,2,c
  4019  001634  D034               	goto	u9160
  4020  001636  0E30               	movlw	48
  4021  001638  1844               	xorwf	animation7@h,w,c
  4022  00163A  B4D8               	btfsc	status,2,c
  4023  00163C  D030               	goto	u9160
  4024  00163E  0E0A               	movlw	10
  4025  001640  1844               	xorwf	animation7@h,w,c
  4026  001642  B4D8               	btfsc	status,2,c
  4027  001644  D02C               	goto	u9160
  4028  001646  0E0B               	movlw	11
  4029  001648  1844               	xorwf	animation7@h,w,c
  4030  00164A  B4D8               	btfsc	status,2,c
  4031  00164C  D028               	goto	u9160
  4032  00164E  0E18               	movlw	24
  4033  001650  1844               	xorwf	animation7@h,w,c
  4034  001652  B4D8               	btfsc	status,2,c
  4035  001654  D024               	goto	u9160
  4036  001656  0E19               	movlw	25
  4037  001658  1844               	xorwf	animation7@h,w,c
  4038  00165A  B4D8               	btfsc	status,2,c
  4039  00165C  D020               	goto	u9160
  4040  00165E  0E0E               	movlw	14
  4041  001660  1844               	xorwf	animation7@h,w,c
  4042  001662  B4D8               	btfsc	status,2,c
  4043  001664  D01C               	goto	u9160
  4044  001666  0E22               	movlw	34
  4045  001668  1844               	xorwf	animation7@h,w,c
  4046  00166A  B4D8               	btfsc	status,2,c
  4047  00166C  D018               	goto	u9160
  4048  00166E  0E26               	movlw	38
  4049  001670  1844               	xorwf	animation7@h,w,c
  4050  001672  B4D8               	btfsc	status,2,c
  4051  001674  D014               	goto	u9160
  4052  001676  0E27               	movlw	39
  4053  001678  1844               	xorwf	animation7@h,w,c
  4054  00167A  B4D8               	btfsc	status,2,c
  4055  00167C  D010               	goto	u9160
  4056  00167E  0E34               	movlw	52
  4057  001680  1844               	xorwf	animation7@h,w,c
  4058  001682  B4D8               	btfsc	status,2,c
  4059  001684  D00C               	goto	u9160
  4060  001686  0E35               	movlw	53
  4061  001688  1844               	xorwf	animation7@h,w,c
  4062  00168A  B4D8               	btfsc	status,2,c
  4063  00168C  D008               	goto	u9160
  4064  00168E  0E1D               	movlw	29
  4065  001690  1844               	xorwf	animation7@h,w,c
  4066  001692  B4D8               	btfsc	status,2,c
  4067  001694  D004               	goto	u9160
  4068  001696  0E31               	movlw	49
  4069  001698  1844               	xorwf	animation7@h,w,c
  4070  00169A  A4D8               	btfss	status,2,c
  4071  00169C  D0B9               	goto	l534
  4072  00169E                     u9160:
  4073                           
  4074                           ;newmain.c: 1140: for (i = 0; i < 4; i++) {
  4075  00169E  0E00               	movlw	0
  4076  0016A0  6E46               	movwf	animation7@i+1,c
  4077  0016A2  0E00               	movlw	0
  4078  0016A4  6E45               	movwf	animation7@i,c
  4079  0016A6  BE46               	btfsc	animation7@i+1,7,c
  4080  0016A8  D008               	goto	l537
  4081  0016AA  5046               	movf	animation7@i+1,w,c
  4082  0016AC  E105               	bnz	u9170
  4083  0016AE  0E04               	movlw	4
  4084  0016B0  5C45               	subwf	animation7@i,w,c
  4085  0016B2  B0D8               	btfsc	status,0,c
  4086  0016B4  0012               	return	
  4087  0016B6  D001               	goto	l537
  4088  0016B8                     u9170:
  4089  0016B8  0012               	return	
  4090  0016BA                     l537:
  4091                           
  4092                           ;newmain.c: 1141: for (j = 0; j < 29; j++) {
  4093  0016BA  0E00               	movlw	0
  4094  0016BC  6E48               	movwf	animation7@j+1,c
  4095  0016BE  0E00               	movlw	0
  4096  0016C0  6E47               	movwf	animation7@j,c
  4097  0016C2                     l6373:
  4098  0016C2  BE48               	btfsc	animation7@j+1,7,c
  4099  0016C4  D006               	goto	l539
  4100  0016C6  5048               	movf	animation7@j+1,w,c
  4101  0016C8  E144               	bnz	l6385
  4102  0016CA  0E1D               	movlw	29
  4103  0016CC  5C47               	subwf	animation7@j,w,c
  4104  0016CE  B0D8               	btfsc	status,0,c
  4105  0016D0  D040               	goto	u9200
  4106  0016D2                     l539:
  4107                           
  4108                           ;newmain.c: 1142: if (show7_1[i][j] != 100)
  4109  0016D2  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4110  0016D6  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4111  0016DA  0E00               	movlw	0
  4112  0016DC  6E30               	movwf	___wmul@multiplicand+1,c
  4113  0016DE  0E1D               	movlw	29
  4114  0016E0  6E2F               	movwf	___wmul@multiplicand,c
  4115  0016E2  EC83  F018         	call	___wmul	;wreg free
  4116  0016E6  0ECD               	movlw	low _show7_1
  4117  0016E8  6E42               	movwf	??_animation7& (0+255),c
  4118  0016EA  0E7B               	movlw	high _show7_1
  4119  0016EC  6E43               	movwf	(??_animation7+1)& (0+255),c
  4120  0016EE  502D               	movf	?___wmul,w,c
  4121  0016F0  2642               	addwf	??_animation7,f,c
  4122  0016F2  502E               	movf	?___wmul+1,w,c
  4123  0016F4  2243               	addwfc	??_animation7+1,f,c
  4124  0016F6  5047               	movf	animation7@j,w,c
  4125  0016F8  2642               	addwf	??_animation7,f,c
  4126  0016FA  5048               	movf	animation7@j+1,w,c
  4127  0016FC  2243               	addwfc	??_animation7+1,f,c
  4128  0016FE  C042  FFF6         	movff	??_animation7,tblptrl
  4129  001702  C043  FFF7         	movff	??_animation7+1,tblptrh
  4130  001706                     	if	0	;tblptru may be non-zero
  4131  001706                     	endif
  4132  001706                     	if	0	;tblptru may be non-zero
  4133  001706                     	endif
  4134  001706  0008               	tblrd		*
  4135  001708  50F5               	movf	tablat,w,c
  4136  00170A  0A64               	xorlw	100
  4137  00170C  B4D8               	btfsc	status,2,c
  4138  00170E  D021               	goto	u9200
  4139                           
  4140                           ;newmain.c: 1143: set_led(show7_1[i][j]);
  4141  001710  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4142  001714  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4143  001718  0E00               	movlw	0
  4144  00171A  6E30               	movwf	___wmul@multiplicand+1,c
  4145  00171C  0E1D               	movlw	29
  4146  00171E  6E2F               	movwf	___wmul@multiplicand,c
  4147  001720  EC83  F018         	call	___wmul	;wreg free
  4148  001724  0ECD               	movlw	low _show7_1
  4149  001726  6E42               	movwf	??_animation7& (0+255),c
  4150  001728  0E7B               	movlw	high _show7_1
  4151  00172A  6E43               	movwf	(??_animation7+1)& (0+255),c
  4152  00172C  502D               	movf	?___wmul,w,c
  4153  00172E  2642               	addwf	??_animation7,f,c
  4154  001730  502E               	movf	?___wmul+1,w,c
  4155  001732  2243               	addwfc	??_animation7+1,f,c
  4156  001734  5047               	movf	animation7@j,w,c
  4157  001736  2642               	addwf	??_animation7,f,c
  4158  001738  5048               	movf	animation7@j+1,w,c
  4159  00173A  2243               	addwfc	??_animation7+1,f,c
  4160  00173C  C042  FFF6         	movff	??_animation7,tblptrl
  4161  001740  C043  FFF7         	movff	??_animation7+1,tblptrh
  4162  001744                     	if	0	;tblptru may be non-zero
  4163  001744                     	endif
  4164  001744                     	if	0	;tblptru may be non-zero
  4165  001744                     	endif
  4166  001744  0008               	tblrd		*
  4167  001746  50F5               	movf	tablat,w,c
  4168  001748  EC23  F017         	call	_set_led
  4169                           
  4170                           ;newmain.c: 1144: else
  4171                           ;newmain.c: 1145: break;
  4172  00174C  4A47               	infsnz	animation7@j,f,c
  4173  00174E  2A48               	incf	animation7@j+1,f,c
  4174  001750  D7B8               	goto	l6373
  4175  001752                     u9200:
  4176  001752                     l6385:
  4177                           
  4178                           ;newmain.c: 1146: }
  4179                           ;newmain.c: 1147: write_display();
  4180  001752  EC2E  F016         	call	_write_display	;wreg free
  4181                           
  4182                           ;newmain.c: 1148: _delay((unsigned long)((10)*(4000000/4000.0)));
  4183  001756  0E0D               	movlw	13
  4184  001758  6E42               	movwf	??_animation7& (0+255),c
  4185  00175A  0EFC               	movlw	252
  4186  00175C                     u10137:
  4187  00175C  2EE8               	decfsz	wreg,f,c
  4188  00175E  D7FE               	bra	u10137
  4189  001760  2E42               	decfsz	??_animation7& (0+255),f,c
  4190  001762  D7FC               	bra	u10137
  4191                           
  4192                           ;newmain.c: 1149: for (j = 0; j < 29; j++) {
  4193  001764  0E00               	movlw	0
  4194  001766  6E48               	movwf	animation7@j+1,c
  4195  001768  0E00               	movlw	0
  4196  00176A  6E47               	movwf	animation7@j,c
  4197  00176C                     l6391:
  4198  00176C  BE48               	btfsc	animation7@j+1,7,c
  4199  00176E  D006               	goto	l543
  4200  001770  5048               	movf	animation7@j+1,w,c
  4201  001772  E144               	bnz	l6403
  4202  001774  0E1D               	movlw	29
  4203  001776  5C47               	subwf	animation7@j,w,c
  4204  001778  B0D8               	btfsc	status,0,c
  4205  00177A  D040               	goto	u9230
  4206  00177C                     l543:
  4207                           
  4208                           ;newmain.c: 1150: if (show7_1[i][j] != 100)
  4209  00177C  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4210  001780  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4211  001784  0E00               	movlw	0
  4212  001786  6E30               	movwf	___wmul@multiplicand+1,c
  4213  001788  0E1D               	movlw	29
  4214  00178A  6E2F               	movwf	___wmul@multiplicand,c
  4215  00178C  EC83  F018         	call	___wmul	;wreg free
  4216  001790  0ECD               	movlw	low _show7_1
  4217  001792  6E42               	movwf	??_animation7& (0+255),c
  4218  001794  0E7B               	movlw	high _show7_1
  4219  001796  6E43               	movwf	(??_animation7+1)& (0+255),c
  4220  001798  502D               	movf	?___wmul,w,c
  4221  00179A  2642               	addwf	??_animation7,f,c
  4222  00179C  502E               	movf	?___wmul+1,w,c
  4223  00179E  2243               	addwfc	??_animation7+1,f,c
  4224  0017A0  5047               	movf	animation7@j,w,c
  4225  0017A2  2642               	addwf	??_animation7,f,c
  4226  0017A4  5048               	movf	animation7@j+1,w,c
  4227  0017A6  2243               	addwfc	??_animation7+1,f,c
  4228  0017A8  C042  FFF6         	movff	??_animation7,tblptrl
  4229  0017AC  C043  FFF7         	movff	??_animation7+1,tblptrh
  4230  0017B0                     	if	0	;tblptru may be non-zero
  4231  0017B0                     	endif
  4232  0017B0                     	if	0	;tblptru may be non-zero
  4233  0017B0                     	endif
  4234  0017B0  0008               	tblrd		*
  4235  0017B2  50F5               	movf	tablat,w,c
  4236  0017B4  0A64               	xorlw	100
  4237  0017B6  B4D8               	btfsc	status,2,c
  4238  0017B8  D021               	goto	u9230
  4239                           
  4240                           ;newmain.c: 1151: clr_led(show7_1[i][j]);
  4241  0017BA  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4242  0017BE  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4243  0017C2  0E00               	movlw	0
  4244  0017C4  6E30               	movwf	___wmul@multiplicand+1,c
  4245  0017C6  0E1D               	movlw	29
  4246  0017C8  6E2F               	movwf	___wmul@multiplicand,c
  4247  0017CA  EC83  F018         	call	___wmul	;wreg free
  4248  0017CE  0ECD               	movlw	low _show7_1
  4249  0017D0  6E42               	movwf	??_animation7& (0+255),c
  4250  0017D2  0E7B               	movlw	high _show7_1
  4251  0017D4  6E43               	movwf	(??_animation7+1)& (0+255),c
  4252  0017D6  502D               	movf	?___wmul,w,c
  4253  0017D8  2642               	addwf	??_animation7,f,c
  4254  0017DA  502E               	movf	?___wmul+1,w,c
  4255  0017DC  2243               	addwfc	??_animation7+1,f,c
  4256  0017DE  5047               	movf	animation7@j,w,c
  4257  0017E0  2642               	addwf	??_animation7,f,c
  4258  0017E2  5048               	movf	animation7@j+1,w,c
  4259  0017E4  2243               	addwfc	??_animation7+1,f,c
  4260  0017E6  C042  FFF6         	movff	??_animation7,tblptrl
  4261  0017EA  C043  FFF7         	movff	??_animation7+1,tblptrh
  4262  0017EE                     	if	0	;tblptru may be non-zero
  4263  0017EE                     	endif
  4264  0017EE                     	if	0	;tblptru may be non-zero
  4265  0017EE                     	endif
  4266  0017EE  0008               	tblrd		*
  4267  0017F0  50F5               	movf	tablat,w,c
  4268  0017F2  ECC8  F016         	call	_clr_led
  4269                           
  4270                           ;newmain.c: 1152: else
  4271                           ;newmain.c: 1153: break;
  4272  0017F6  4A47               	infsnz	animation7@j,f,c
  4273  0017F8  2A48               	incf	animation7@j+1,f,c
  4274  0017FA  D7B8               	goto	l6391
  4275  0017FC                     u9230:
  4276  0017FC                     l6403:
  4277                           
  4278                           ;newmain.c: 1154: }
  4279                           ;newmain.c: 1155: write_display();
  4280  0017FC  EC2E  F016         	call	_write_display	;wreg free
  4281  001800  4A45               	infsnz	animation7@i,f,c
  4282  001802  2A46               	incf	animation7@i+1,f,c
  4283  001804  BE46               	btfsc	animation7@i+1,7,c
  4284  001806  D759               	goto	l537
  4285  001808  5046               	movf	animation7@i+1,w,c
  4286  00180A  E101               	bnz	u9240
  4287  00180C  D750               	goto	L5
  4288  00180E                     u9240:
  4289                           
  4290                           ;newmain.c: 1156: }
  4291                           ;newmain.c: 1157: } else {
  4292  00180E  0012               	return	
  4293  001810                     l534:
  4294                           
  4295                           ;newmain.c: 1159: if (count == 0) {
  4296  001810  5051               	movf	_count,w,c
  4297  001812  1052               	iorwf	_count+1,w,c
  4298  001814  A4D8               	btfss	status,2,c
  4299  001816  D0BD               	goto	l548
  4300                           
  4301                           ;newmain.c: 1160: for (i = 0; i < 7; i++) {
  4302  001818  0E00               	movlw	0
  4303  00181A  6E46               	movwf	animation7@i+1,c
  4304  00181C  0E00               	movlw	0
  4305  00181E  6E45               	movwf	animation7@i,c
  4306  001820  BE46               	btfsc	animation7@i+1,7,c
  4307  001822  D008               	goto	l549
  4308  001824  5046               	movf	animation7@i+1,w,c
  4309  001826  E105               	bnz	u9260
  4310  001828  0E07               	movlw	7
  4311  00182A  5C45               	subwf	animation7@i,w,c
  4312  00182C  B0D8               	btfsc	status,0,c
  4313  00182E  D0AC               	goto	u9330
  4314  001830  D001               	goto	l549
  4315  001832                     u9260:
  4316  001832  D0AA               	goto	u9330
  4317  001834                     l549:
  4318                           
  4319                           ;newmain.c: 1161: for (j = 0; j < 24; j++) {
  4320  001834  0E00               	movlw	0
  4321  001836  6E48               	movwf	animation7@j+1,c
  4322  001838  0E00               	movlw	0
  4323  00183A  6E47               	movwf	animation7@j,c
  4324  00183C                     l6419:
  4325  00183C  BE48               	btfsc	animation7@j+1,7,c
  4326  00183E  D006               	goto	l551
  4327  001840  5048               	movf	animation7@j+1,w,c
  4328  001842  E144               	bnz	l6431
  4329  001844  0E18               	movlw	24
  4330  001846  5C47               	subwf	animation7@j,w,c
  4331  001848  B0D8               	btfsc	status,0,c
  4332  00184A  D040               	goto	u9290
  4333  00184C                     l551:
  4334                           
  4335                           ;newmain.c: 1162: if (show7_2[i][j] != 100)
  4336  00184C  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4337  001850  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4338  001854  0E00               	movlw	0
  4339  001856  6E30               	movwf	___wmul@multiplicand+1,c
  4340  001858  0E18               	movlw	24
  4341  00185A  6E2F               	movwf	___wmul@multiplicand,c
  4342  00185C  EC83  F018         	call	___wmul	;wreg free
  4343  001860  0EAD               	movlw	low _show7_2
  4344  001862  6E42               	movwf	??_animation7& (0+255),c
  4345  001864  0E7A               	movlw	high _show7_2
  4346  001866  6E43               	movwf	(??_animation7+1)& (0+255),c
  4347  001868  502D               	movf	?___wmul,w,c
  4348  00186A  2642               	addwf	??_animation7,f,c
  4349  00186C  502E               	movf	?___wmul+1,w,c
  4350  00186E  2243               	addwfc	??_animation7+1,f,c
  4351  001870  5047               	movf	animation7@j,w,c
  4352  001872  2642               	addwf	??_animation7,f,c
  4353  001874  5048               	movf	animation7@j+1,w,c
  4354  001876  2243               	addwfc	??_animation7+1,f,c
  4355  001878  C042  FFF6         	movff	??_animation7,tblptrl
  4356  00187C  C043  FFF7         	movff	??_animation7+1,tblptrh
  4357  001880                     	if	0	;tblptru may be non-zero
  4358  001880                     	endif
  4359  001880                     	if	0	;tblptru may be non-zero
  4360  001880                     	endif
  4361  001880  0008               	tblrd		*
  4362  001882  50F5               	movf	tablat,w,c
  4363  001884  0A64               	xorlw	100
  4364  001886  B4D8               	btfsc	status,2,c
  4365  001888  D021               	goto	u9290
  4366                           
  4367                           ;newmain.c: 1163: set_led(show7_2[i][j]);
  4368  00188A  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4369  00188E  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4370  001892  0E00               	movlw	0
  4371  001894  6E30               	movwf	___wmul@multiplicand+1,c
  4372  001896  0E18               	movlw	24
  4373  001898  6E2F               	movwf	___wmul@multiplicand,c
  4374  00189A  EC83  F018         	call	___wmul	;wreg free
  4375  00189E  0EAD               	movlw	low _show7_2
  4376  0018A0  6E42               	movwf	??_animation7& (0+255),c
  4377  0018A2  0E7A               	movlw	high _show7_2
  4378  0018A4  6E43               	movwf	(??_animation7+1)& (0+255),c
  4379  0018A6  502D               	movf	?___wmul,w,c
  4380  0018A8  2642               	addwf	??_animation7,f,c
  4381  0018AA  502E               	movf	?___wmul+1,w,c
  4382  0018AC  2243               	addwfc	??_animation7+1,f,c
  4383  0018AE  5047               	movf	animation7@j,w,c
  4384  0018B0  2642               	addwf	??_animation7,f,c
  4385  0018B2  5048               	movf	animation7@j+1,w,c
  4386  0018B4  2243               	addwfc	??_animation7+1,f,c
  4387  0018B6  C042  FFF6         	movff	??_animation7,tblptrl
  4388  0018BA  C043  FFF7         	movff	??_animation7+1,tblptrh
  4389  0018BE                     	if	0	;tblptru may be non-zero
  4390  0018BE                     	endif
  4391  0018BE                     	if	0	;tblptru may be non-zero
  4392  0018BE                     	endif
  4393  0018BE  0008               	tblrd		*
  4394  0018C0  50F5               	movf	tablat,w,c
  4395  0018C2  EC23  F017         	call	_set_led
  4396                           
  4397                           ;newmain.c: 1164: else
  4398                           ;newmain.c: 1165: break;
  4399  0018C6  4A47               	infsnz	animation7@j,f,c
  4400  0018C8  2A48               	incf	animation7@j+1,f,c
  4401  0018CA  D7B8               	goto	l6419
  4402  0018CC                     u9290:
  4403  0018CC                     l6431:
  4404                           
  4405                           ;newmain.c: 1166: }
  4406                           ;newmain.c: 1167: write_display();
  4407  0018CC  EC2E  F016         	call	_write_display	;wreg free
  4408                           
  4409                           ;newmain.c: 1168: _delay((unsigned long)((10)*(4000000/4000.0)));
  4410  0018D0  0E0D               	movlw	13
  4411  0018D2  6E42               	movwf	??_animation7& (0+255),c
  4412  0018D4  0EFC               	movlw	252
  4413  0018D6                     u10147:
  4414  0018D6  2EE8               	decfsz	wreg,f,c
  4415  0018D8  D7FE               	bra	u10147
  4416  0018DA  2E42               	decfsz	??_animation7& (0+255),f,c
  4417  0018DC  D7FC               	bra	u10147
  4418                           
  4419                           ;newmain.c: 1169: for (j = 0; j < 24; j++) {
  4420  0018DE  0E00               	movlw	0
  4421  0018E0  6E48               	movwf	animation7@j+1,c
  4422  0018E2  0E00               	movlw	0
  4423  0018E4  6E47               	movwf	animation7@j,c
  4424  0018E6                     l6437:
  4425  0018E6  BE48               	btfsc	animation7@j+1,7,c
  4426  0018E8  D006               	goto	l555
  4427  0018EA  5048               	movf	animation7@j+1,w,c
  4428  0018EC  E144               	bnz	l6449
  4429  0018EE  0E18               	movlw	24
  4430  0018F0  5C47               	subwf	animation7@j,w,c
  4431  0018F2  B0D8               	btfsc	status,0,c
  4432  0018F4  D040               	goto	u9320
  4433  0018F6                     l555:
  4434                           
  4435                           ;newmain.c: 1170: if (show7_2[i][j] != 100)
  4436  0018F6  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4437  0018FA  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4438  0018FE  0E00               	movlw	0
  4439  001900  6E30               	movwf	___wmul@multiplicand+1,c
  4440  001902  0E18               	movlw	24
  4441  001904  6E2F               	movwf	___wmul@multiplicand,c
  4442  001906  EC83  F018         	call	___wmul	;wreg free
  4443  00190A  0EAD               	movlw	low _show7_2
  4444  00190C  6E42               	movwf	??_animation7& (0+255),c
  4445  00190E  0E7A               	movlw	high _show7_2
  4446  001910  6E43               	movwf	(??_animation7+1)& (0+255),c
  4447  001912  502D               	movf	?___wmul,w,c
  4448  001914  2642               	addwf	??_animation7,f,c
  4449  001916  502E               	movf	?___wmul+1,w,c
  4450  001918  2243               	addwfc	??_animation7+1,f,c
  4451  00191A  5047               	movf	animation7@j,w,c
  4452  00191C  2642               	addwf	??_animation7,f,c
  4453  00191E  5048               	movf	animation7@j+1,w,c
  4454  001920  2243               	addwfc	??_animation7+1,f,c
  4455  001922  C042  FFF6         	movff	??_animation7,tblptrl
  4456  001926  C043  FFF7         	movff	??_animation7+1,tblptrh
  4457  00192A                     	if	0	;tblptru may be non-zero
  4458  00192A                     	endif
  4459  00192A                     	if	0	;tblptru may be non-zero
  4460  00192A                     	endif
  4461  00192A  0008               	tblrd		*
  4462  00192C  50F5               	movf	tablat,w,c
  4463  00192E  0A64               	xorlw	100
  4464  001930  B4D8               	btfsc	status,2,c
  4465  001932  D021               	goto	u9320
  4466                           
  4467                           ;newmain.c: 1171: clr_led(show7_2[i][j]);
  4468  001934  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4469  001938  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4470  00193C  0E00               	movlw	0
  4471  00193E  6E30               	movwf	___wmul@multiplicand+1,c
  4472  001940  0E18               	movlw	24
  4473  001942  6E2F               	movwf	___wmul@multiplicand,c
  4474  001944  EC83  F018         	call	___wmul	;wreg free
  4475  001948  0EAD               	movlw	low _show7_2
  4476  00194A  6E42               	movwf	??_animation7& (0+255),c
  4477  00194C  0E7A               	movlw	high _show7_2
  4478  00194E  6E43               	movwf	(??_animation7+1)& (0+255),c
  4479  001950  502D               	movf	?___wmul,w,c
  4480  001952  2642               	addwf	??_animation7,f,c
  4481  001954  502E               	movf	?___wmul+1,w,c
  4482  001956  2243               	addwfc	??_animation7+1,f,c
  4483  001958  5047               	movf	animation7@j,w,c
  4484  00195A  2642               	addwf	??_animation7,f,c
  4485  00195C  5048               	movf	animation7@j+1,w,c
  4486  00195E  2243               	addwfc	??_animation7+1,f,c
  4487  001960  C042  FFF6         	movff	??_animation7,tblptrl
  4488  001964  C043  FFF7         	movff	??_animation7+1,tblptrh
  4489  001968                     	if	0	;tblptru may be non-zero
  4490  001968                     	endif
  4491  001968                     	if	0	;tblptru may be non-zero
  4492  001968                     	endif
  4493  001968  0008               	tblrd		*
  4494  00196A  50F5               	movf	tablat,w,c
  4495  00196C  ECC8  F016         	call	_clr_led
  4496                           
  4497                           ;newmain.c: 1172: else
  4498                           ;newmain.c: 1173: break;
  4499  001970  4A47               	infsnz	animation7@j,f,c
  4500  001972  2A48               	incf	animation7@j+1,f,c
  4501  001974  D7B8               	goto	l6437
  4502  001976                     u9320:
  4503  001976                     l6449:
  4504                           
  4505                           ;newmain.c: 1174: }
  4506                           ;newmain.c: 1175: write_display();
  4507  001976  EC2E  F016         	call	_write_display	;wreg free
  4508  00197A  4A45               	infsnz	animation7@i,f,c
  4509  00197C  2A46               	incf	animation7@i+1,f,c
  4510  00197E  BE46               	btfsc	animation7@i+1,7,c
  4511  001980  D759               	goto	l549
  4512  001982  5046               	movf	animation7@i+1,w,c
  4513  001984  E101               	bnz	l6455
  4514  001986  D750               	goto	L6
  4515  001988                     u9330:
  4516  001988                     l6455:
  4517                           
  4518                           ;newmain.c: 1176: }
  4519                           ;newmain.c: 1177: count = 1;
  4520  001988  0E00               	movlw	0
  4521  00198A  6E52               	movwf	_count+1,c
  4522  00198C  0E01               	movlw	1
  4523  00198E  6E51               	movwf	_count,c
  4524                           
  4525                           ;newmain.c: 1179: } else if (count == 1) {
  4526  001990  0012               	return	
  4527  001992                     l548:
  4528  001992  0451               	decf	_count,w,c
  4529  001994  1052               	iorwf	_count+1,w,c
  4530  001996  A4D8               	btfss	status,2,c
  4531  001998  0012               	return	
  4532                           
  4533                           ;newmain.c: 1180: for (i = 8; i >= 0; i--) {
  4534  00199A  0E00               	movlw	0
  4535  00199C  6E46               	movwf	animation7@i+1,c
  4536  00199E  0E08               	movlw	8
  4537  0019A0  6E45               	movwf	animation7@i,c
  4538  0019A2                     l6461:
  4539  0019A2  BE46               	btfsc	animation7@i+1,7,c
  4540  0019A4  D0A7               	goto	u9420
  4541                           
  4542                           ;newmain.c: 1181: for (j = 0; j < 24; j++) {
  4543  0019A6  0E00               	movlw	0
  4544  0019A8  6E48               	movwf	animation7@j+1,c
  4545  0019AA  0E00               	movlw	0
  4546  0019AC  6E47               	movwf	animation7@j,c
  4547  0019AE                     l6467:
  4548  0019AE  BE48               	btfsc	animation7@j+1,7,c
  4549  0019B0  D006               	goto	l563
  4550  0019B2  5048               	movf	animation7@j+1,w,c
  4551  0019B4  E144               	bnz	l6479
  4552  0019B6  0E18               	movlw	24
  4553  0019B8  5C47               	subwf	animation7@j,w,c
  4554  0019BA  B0D8               	btfsc	status,0,c
  4555  0019BC  D040               	goto	u9380
  4556  0019BE                     l563:
  4557                           
  4558                           ;newmain.c: 1182: if (show7_2[i][j] != 100)
  4559  0019BE  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4560  0019C2  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4561  0019C6  0E00               	movlw	0
  4562  0019C8  6E30               	movwf	___wmul@multiplicand+1,c
  4563  0019CA  0E18               	movlw	24
  4564  0019CC  6E2F               	movwf	___wmul@multiplicand,c
  4565  0019CE  EC83  F018         	call	___wmul	;wreg free
  4566  0019D2  0EAD               	movlw	low _show7_2
  4567  0019D4  6E42               	movwf	??_animation7& (0+255),c
  4568  0019D6  0E7A               	movlw	high _show7_2
  4569  0019D8  6E43               	movwf	(??_animation7+1)& (0+255),c
  4570  0019DA  502D               	movf	?___wmul,w,c
  4571  0019DC  2642               	addwf	??_animation7,f,c
  4572  0019DE  502E               	movf	?___wmul+1,w,c
  4573  0019E0  2243               	addwfc	??_animation7+1,f,c
  4574  0019E2  5047               	movf	animation7@j,w,c
  4575  0019E4  2642               	addwf	??_animation7,f,c
  4576  0019E6  5048               	movf	animation7@j+1,w,c
  4577  0019E8  2243               	addwfc	??_animation7+1,f,c
  4578  0019EA  C042  FFF6         	movff	??_animation7,tblptrl
  4579  0019EE  C043  FFF7         	movff	??_animation7+1,tblptrh
  4580  0019F2                     	if	0	;tblptru may be non-zero
  4581  0019F2                     	endif
  4582  0019F2                     	if	0	;tblptru may be non-zero
  4583  0019F2                     	endif
  4584  0019F2  0008               	tblrd		*
  4585  0019F4  50F5               	movf	tablat,w,c
  4586  0019F6  0A64               	xorlw	100
  4587  0019F8  B4D8               	btfsc	status,2,c
  4588  0019FA  D021               	goto	u9380
  4589                           
  4590                           ;newmain.c: 1183: set_led(show7_2[i][j]);
  4591  0019FC  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4592  001A00  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4593  001A04  0E00               	movlw	0
  4594  001A06  6E30               	movwf	___wmul@multiplicand+1,c
  4595  001A08  0E18               	movlw	24
  4596  001A0A  6E2F               	movwf	___wmul@multiplicand,c
  4597  001A0C  EC83  F018         	call	___wmul	;wreg free
  4598  001A10  0EAD               	movlw	low _show7_2
  4599  001A12  6E42               	movwf	??_animation7& (0+255),c
  4600  001A14  0E7A               	movlw	high _show7_2
  4601  001A16  6E43               	movwf	(??_animation7+1)& (0+255),c
  4602  001A18  502D               	movf	?___wmul,w,c
  4603  001A1A  2642               	addwf	??_animation7,f,c
  4604  001A1C  502E               	movf	?___wmul+1,w,c
  4605  001A1E  2243               	addwfc	??_animation7+1,f,c
  4606  001A20  5047               	movf	animation7@j,w,c
  4607  001A22  2642               	addwf	??_animation7,f,c
  4608  001A24  5048               	movf	animation7@j+1,w,c
  4609  001A26  2243               	addwfc	??_animation7+1,f,c
  4610  001A28  C042  FFF6         	movff	??_animation7,tblptrl
  4611  001A2C  C043  FFF7         	movff	??_animation7+1,tblptrh
  4612  001A30                     	if	0	;tblptru may be non-zero
  4613  001A30                     	endif
  4614  001A30                     	if	0	;tblptru may be non-zero
  4615  001A30                     	endif
  4616  001A30  0008               	tblrd		*
  4617  001A32  50F5               	movf	tablat,w,c
  4618  001A34  EC23  F017         	call	_set_led
  4619                           
  4620                           ;newmain.c: 1184: else
  4621                           ;newmain.c: 1185: break;
  4622  001A38  4A47               	infsnz	animation7@j,f,c
  4623  001A3A  2A48               	incf	animation7@j+1,f,c
  4624  001A3C  D7B8               	goto	l6467
  4625  001A3E                     u9380:
  4626  001A3E                     l6479:
  4627                           
  4628                           ;newmain.c: 1186: }
  4629                           ;newmain.c: 1187: write_display();
  4630  001A3E  EC2E  F016         	call	_write_display	;wreg free
  4631                           
  4632                           ;newmain.c: 1188: _delay((unsigned long)((10)*(4000000/4000.0)));
  4633  001A42  0E0D               	movlw	13
  4634  001A44  6E42               	movwf	??_animation7& (0+255),c
  4635  001A46  0EFC               	movlw	252
  4636  001A48                     u10157:
  4637  001A48  2EE8               	decfsz	wreg,f,c
  4638  001A4A  D7FE               	bra	u10157
  4639  001A4C  2E42               	decfsz	??_animation7& (0+255),f,c
  4640  001A4E  D7FC               	bra	u10157
  4641                           
  4642                           ;newmain.c: 1189: for (j = 0; j < 24; j++) {
  4643  001A50  0E00               	movlw	0
  4644  001A52  6E48               	movwf	animation7@j+1,c
  4645  001A54  0E00               	movlw	0
  4646  001A56  6E47               	movwf	animation7@j,c
  4647  001A58                     l6485:
  4648  001A58  BE48               	btfsc	animation7@j+1,7,c
  4649  001A5A  D006               	goto	l567
  4650  001A5C  5048               	movf	animation7@j+1,w,c
  4651  001A5E  E144               	bnz	l6497
  4652  001A60  0E18               	movlw	24
  4653  001A62  5C47               	subwf	animation7@j,w,c
  4654  001A64  B0D8               	btfsc	status,0,c
  4655  001A66  D040               	goto	u9410
  4656  001A68                     l567:
  4657                           
  4658                           ;newmain.c: 1190: if (show7_2[i][j] != 100)
  4659  001A68  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4660  001A6C  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4661  001A70  0E00               	movlw	0
  4662  001A72  6E30               	movwf	___wmul@multiplicand+1,c
  4663  001A74  0E18               	movlw	24
  4664  001A76  6E2F               	movwf	___wmul@multiplicand,c
  4665  001A78  EC83  F018         	call	___wmul	;wreg free
  4666  001A7C  0EAD               	movlw	low _show7_2
  4667  001A7E  6E42               	movwf	??_animation7& (0+255),c
  4668  001A80  0E7A               	movlw	high _show7_2
  4669  001A82  6E43               	movwf	(??_animation7+1)& (0+255),c
  4670  001A84  502D               	movf	?___wmul,w,c
  4671  001A86  2642               	addwf	??_animation7,f,c
  4672  001A88  502E               	movf	?___wmul+1,w,c
  4673  001A8A  2243               	addwfc	??_animation7+1,f,c
  4674  001A8C  5047               	movf	animation7@j,w,c
  4675  001A8E  2642               	addwf	??_animation7,f,c
  4676  001A90  5048               	movf	animation7@j+1,w,c
  4677  001A92  2243               	addwfc	??_animation7+1,f,c
  4678  001A94  C042  FFF6         	movff	??_animation7,tblptrl
  4679  001A98  C043  FFF7         	movff	??_animation7+1,tblptrh
  4680  001A9C                     	if	0	;tblptru may be non-zero
  4681  001A9C                     	endif
  4682  001A9C                     	if	0	;tblptru may be non-zero
  4683  001A9C                     	endif
  4684  001A9C  0008               	tblrd		*
  4685  001A9E  50F5               	movf	tablat,w,c
  4686  001AA0  0A64               	xorlw	100
  4687  001AA2  B4D8               	btfsc	status,2,c
  4688  001AA4  D021               	goto	u9410
  4689                           
  4690                           ;newmain.c: 1191: clr_led(show7_2[i][j]);
  4691  001AA6  C045  F02D         	movff	animation7@i,___wmul@multiplier
  4692  001AAA  C046  F02E         	movff	animation7@i+1,___wmul@multiplier+1
  4693  001AAE  0E00               	movlw	0
  4694  001AB0  6E30               	movwf	___wmul@multiplicand+1,c
  4695  001AB2  0E18               	movlw	24
  4696  001AB4  6E2F               	movwf	___wmul@multiplicand,c
  4697  001AB6  EC83  F018         	call	___wmul	;wreg free
  4698  001ABA  0EAD               	movlw	low _show7_2
  4699  001ABC  6E42               	movwf	??_animation7& (0+255),c
  4700  001ABE  0E7A               	movlw	high _show7_2
  4701  001AC0  6E43               	movwf	(??_animation7+1)& (0+255),c
  4702  001AC2  502D               	movf	?___wmul,w,c
  4703  001AC4  2642               	addwf	??_animation7,f,c
  4704  001AC6  502E               	movf	?___wmul+1,w,c
  4705  001AC8  2243               	addwfc	??_animation7+1,f,c
  4706  001ACA  5047               	movf	animation7@j,w,c
  4707  001ACC  2642               	addwf	??_animation7,f,c
  4708  001ACE  5048               	movf	animation7@j+1,w,c
  4709  001AD0  2243               	addwfc	??_animation7+1,f,c
  4710  001AD2  C042  FFF6         	movff	??_animation7,tblptrl
  4711  001AD6  C043  FFF7         	movff	??_animation7+1,tblptrh
  4712  001ADA                     	if	0	;tblptru may be non-zero
  4713  001ADA                     	endif
  4714  001ADA                     	if	0	;tblptru may be non-zero
  4715  001ADA                     	endif
  4716  001ADA  0008               	tblrd		*
  4717  001ADC  50F5               	movf	tablat,w,c
  4718  001ADE  ECC8  F016         	call	_clr_led
  4719                           
  4720                           ;newmain.c: 1192: else
  4721                           ;newmain.c: 1193: break;
  4722  001AE2  4A47               	infsnz	animation7@j,f,c
  4723  001AE4  2A48               	incf	animation7@j+1,f,c
  4724  001AE6  D7B8               	goto	l6485
  4725  001AE8                     u9410:
  4726  001AE8                     l6497:
  4727                           
  4728                           ;newmain.c: 1194: }
  4729                           ;newmain.c: 1195: write_display();
  4730  001AE8  EC2E  F016         	call	_write_display	;wreg free
  4731  001AEC  0645               	decf	animation7@i,f,c
  4732  001AEE  A0D8               	btfss	status,0,c
  4733  001AF0  0646               	decf	animation7@i+1,f,c
  4734  001AF2  D757               	goto	l6461
  4735  001AF4                     u9420:
  4736                           
  4737                           ;newmain.c: 1196: }
  4738                           ;newmain.c: 1197: count = 0;
  4739  001AF4  0E00               	movlw	0
  4740  001AF6  6E52               	movwf	_count+1,c
  4741  001AF8  0E00               	movlw	0
  4742  001AFA  6E51               	movwf	_count,c
  4743  001AFC  0012               	return	
  4744  001AFE                     __end_of_animation7:
  4745                           	opt stack 0
  4746                           tblptru	equ	0xFF8
  4747                           tblptrh	equ	0xFF7
  4748                           tblptrl	equ	0xFF6
  4749                           tablat	equ	0xFF5
  4750                           prodh	equ	0xFF4
  4751                           prodl	equ	0xFF3
  4752                           intcon	equ	0xFF2
  4753                           intcon2	equ	0xFF1
  4754                           postinc0	equ	0xFEE
  4755                           wreg	equ	0xFE8
  4756                           indf2	equ	0xFDF
  4757                           postinc2	equ	0xFDE
  4758                           postdec2	equ	0xFDD
  4759                           fsr2h	equ	0xFDA
  4760                           fsr2l	equ	0xFD9
  4761                           status	equ	0xFD8
  4762                           
  4763 ;; *************** function _animation6 *****************
  4764 ;; Defined at:
  4765 ;;		line 1103 in file "newmain.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  m               1    wreg     unsigned char 
  4768 ;;  n               1   65[COMRAM] unsigned char 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;  m               1   79[COMRAM] unsigned char 
  4771 ;;  x               1   70[COMRAM] unsigned char 
  4772 ;;  d               2   77[COMRAM] int 
  4773 ;;  c               2   75[COMRAM] int 
  4774 ;;  b               2   73[COMRAM] int 
  4775 ;;  a               2   71[COMRAM] int 
  4776 ;; Return value:  Size  Location     Type
  4777 ;;                  1    wreg      void 
  4778 ;; Registers used:
  4779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4780 ;; Tracked objects:
  4781 ;;		On entry : 0/0
  4782 ;;		On exit  : 0/0
  4783 ;;		Unchanged: 0/0
  4784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4785 ;;      Params:         1       0       0       0       0       0       0
  4786 ;;      Locals:        10       0       0       0       0       0       0
  4787 ;;      Temps:          4       0       0       0       0       0       0
  4788 ;;      Totals:        15       0       0       0       0       0       0
  4789 ;;Total ram usage:       15 bytes
  4790 ;; Hardware stack levels used:    1
  4791 ;; Hardware stack levels required when called:    7
  4792 ;; This function calls:
  4793 ;;		_clr_led
  4794 ;;		_set_led
  4795 ;;		_write_display
  4796 ;; This function is called by:
  4797 ;;		_main
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text4
  4802  002654                     __ptext4:
  4803                           	opt stack 0
  4804  002654                     _animation6:
  4805                           	opt stack 23
  4806                           
  4807                           ;incstack = 0
  4808                           ;animation6@m stored from wreg
  4809  002654  6E50               	movwf	animation6@m,c
  4810                           
  4811                           ;newmain.c: 1104: int a = m - 1, b = m + 1, c = n - 1, d = n + 1;
  4812  002656  0EFF               	movlw	255
  4813  002658  2450               	addwf	animation6@m,w,c
  4814  00265A  6E48               	movwf	animation6@a,c
  4815  00265C  6A49               	clrf	animation6@a+1,c
  4816  00265E  0EFF               	movlw	255
  4817  002660  2249               	addwfc	animation6@a+1,f,c
  4818  002662  0E01               	movlw	1
  4819  002664  2450               	addwf	animation6@m,w,c
  4820  002666  6E4A               	movwf	animation6@b,c
  4821  002668  6A4B               	clrf	animation6@b+1,c
  4822  00266A  0E00               	movlw	0
  4823  00266C  224B               	addwfc	animation6@b+1,f,c
  4824  00266E  0EFF               	movlw	255
  4825  002670  2442               	addwf	animation6@n,w,c
  4826  002672  6E4C               	movwf	animation6@c,c
  4827  002674  6A4D               	clrf	animation6@c+1,c
  4828  002676  0EFF               	movlw	255
  4829  002678  224D               	addwfc	animation6@c+1,f,c
  4830  00267A  0E01               	movlw	1
  4831  00267C  2442               	addwf	animation6@n,w,c
  4832  00267E  6E4E               	movwf	animation6@d,c
  4833  002680  6A4F               	clrf	animation6@d+1,c
  4834  002682  0E00               	movlw	0
  4835  002684  224F               	addwfc	animation6@d+1,f,c
  4836                           
  4837                           ;newmain.c: 1106: set_led(Buttons[m][n]);
  4838  002686  5050               	movf	animation6@m,w,c
  4839  002688  0D08               	mullw	8
  4840  00268A  0EF9               	movlw	low _Buttons
  4841  00268C  6E43               	movwf	??_animation6& (0+255),c
  4842  00268E  0E7E               	movlw	high _Buttons
  4843  002690  6E44               	movwf	(??_animation6+1)& (0+255),c
  4844  002692  50F3               	movf	prodl,w,c
  4845  002694  2643               	addwf	??_animation6,f,c
  4846  002696  50F4               	movf	prodh,w,c
  4847  002698  2244               	addwfc	??_animation6+1,f,c
  4848  00269A  5042               	movf	animation6@n,w,c
  4849  00269C  0D01               	mullw	1
  4850  00269E  50F3               	movf	prodl,w,c
  4851  0026A0  2643               	addwf	??_animation6,f,c
  4852  0026A2  50F4               	movf	prodh,w,c
  4853  0026A4  2244               	addwfc	??_animation6+1,f,c
  4854  0026A6  C043  FFF6         	movff	??_animation6,tblptrl
  4855  0026AA  C044  FFF7         	movff	??_animation6+1,tblptrh
  4856  0026AE                     	if	0	;tblptru may be non-zero
  4857  0026AE                     	endif
  4858  0026AE                     	if	0	;tblptru may be non-zero
  4859  0026AE                     	endif
  4860  0026AE  0008               	tblrd		*
  4861  0026B0  50F5               	movf	tablat,w,c
  4862  0026B2  EC23  F017         	call	_set_led
  4863                           
  4864                           ;newmain.c: 1107: write_display();
  4865  0026B6  EC2E  F016         	call	_write_display	;wreg free
  4866                           
  4867                           ;newmain.c: 1108: _delay((unsigned long)((10)*(4000000/4000.0)));
  4868  0026BA  0E0D               	movlw	13
  4869  0026BC  6E43               	movwf	??_animation6& (0+255),c
  4870  0026BE  0EFC               	movlw	252
  4871  0026C0                     u10167:
  4872  0026C0  2EE8               	decfsz	wreg,f,c
  4873  0026C2  D7FE               	bra	u10167
  4874  0026C4  2E43               	decfsz	??_animation6& (0+255),f,c
  4875  0026C6  D7FC               	bra	u10167
  4876                           
  4877                           ;newmain.c: 1109: clr_led(Buttons[m][n]);
  4878  0026C8  5050               	movf	animation6@m,w,c
  4879  0026CA  0D08               	mullw	8
  4880  0026CC  0EF9               	movlw	low _Buttons
  4881  0026CE  6E43               	movwf	??_animation6& (0+255),c
  4882  0026D0  0E7E               	movlw	high _Buttons
  4883  0026D2  6E44               	movwf	(??_animation6+1)& (0+255),c
  4884  0026D4  50F3               	movf	prodl,w,c
  4885  0026D6  2643               	addwf	??_animation6,f,c
  4886  0026D8  50F4               	movf	prodh,w,c
  4887  0026DA  2244               	addwfc	??_animation6+1,f,c
  4888  0026DC  5042               	movf	animation6@n,w,c
  4889  0026DE  0D01               	mullw	1
  4890  0026E0  50F3               	movf	prodl,w,c
  4891  0026E2  2643               	addwf	??_animation6,f,c
  4892  0026E4  50F4               	movf	prodh,w,c
  4893  0026E6  2244               	addwfc	??_animation6+1,f,c
  4894  0026E8  C043  FFF6         	movff	??_animation6,tblptrl
  4895  0026EC  C044  FFF7         	movff	??_animation6+1,tblptrh
  4896  0026F0                     	if	0	;tblptru may be non-zero
  4897  0026F0                     	endif
  4898  0026F0                     	if	0	;tblptru may be non-zero
  4899  0026F0                     	endif
  4900  0026F0  0008               	tblrd		*
  4901  0026F2  50F5               	movf	tablat,w,c
  4902  0026F4  ECC8  F016         	call	_clr_led
  4903                           
  4904                           ;newmain.c: 1110: write_display();
  4905  0026F8  EC2E  F016         	call	_write_display	;wreg free
  4906                           
  4907                           ;newmain.c: 1112: for (uint8_t x = 0; x < 8; x++) {
  4908  0026FC  0E00               	movlw	0
  4909  0026FE  6E47               	movwf	animation6@x,c
  4910  002700                     l6285:
  4911  002700  0E07               	movlw	7
  4912  002702  6447               	cpfsgt	animation6@x,c
  4913  002704  D001               	goto	l523
  4914  002706  0012               	return	
  4915  002708                     l523:
  4916                           
  4917                           ;newmain.c: 1113: if (a >= 0)
  4918  002708  BE49               	btfsc	animation6@a+1,7,c
  4919  00270A  D023               	goto	l525
  4920                           
  4921                           ;newmain.c: 1114: set_led(Buttons[a][n]);
  4922  00270C  5042               	movf	animation6@n,w,c
  4923  00270E  0D01               	mullw	1
  4924  002710  C048  F043         	movff	animation6@a,??_animation6
  4925  002714  C049  F044         	movff	animation6@a+1,??_animation6+1
  4926  002718  90D8               	bcf	status,0,c
  4927  00271A  3643               	rlcf	??_animation6,f,c
  4928  00271C  3644               	rlcf	??_animation6+1,f,c
  4929  00271E  90D8               	bcf	status,0,c
  4930  002720  3643               	rlcf	??_animation6,f,c
  4931  002722  3644               	rlcf	??_animation6+1,f,c
  4932  002724  90D8               	bcf	status,0,c
  4933  002726  3643               	rlcf	??_animation6,f,c
  4934  002728  3644               	rlcf	??_animation6+1,f,c
  4935  00272A  0EF9               	movlw	low _Buttons
  4936  00272C  6E45               	movwf	(??_animation6+2)& (0+255),c
  4937  00272E  0E7E               	movlw	high _Buttons
  4938  002730  6E46               	movwf	(??_animation6+3)& (0+255),c
  4939  002732  5043               	movf	??_animation6,w,c
  4940  002734  2645               	addwf	??_animation6+2,f,c
  4941  002736  5044               	movf	??_animation6+1,w,c
  4942  002738  2246               	addwfc	??_animation6+3,f,c
  4943  00273A  50F3               	movf	prodl,w,c
  4944  00273C  2645               	addwf	??_animation6+2,f,c
  4945  00273E  50F4               	movf	prodh,w,c
  4946  002740  2246               	addwfc	??_animation6+3,f,c
  4947  002742  C045  FFF6         	movff	??_animation6+2,tblptrl
  4948  002746  C046  FFF7         	movff	??_animation6+3,tblptrh
  4949  00274A                     	if	0	;tblptru may be non-zero
  4950  00274A                     	endif
  4951  00274A                     	if	0	;tblptru may be non-zero
  4952  00274A                     	endif
  4953  00274A  0008               	tblrd		*
  4954  00274C  50F5               	movf	tablat,w,c
  4955  00274E  EC23  F017         	call	_set_led
  4956  002752                     l525:
  4957                           
  4958                           ;newmain.c: 1115: if (b < 8)
  4959  002752  BE4B               	btfsc	animation6@b+1,7,c
  4960  002754  D006               	goto	u8970
  4961  002756  504B               	movf	animation6@b+1,w,c
  4962  002758  E127               	bnz	l6297
  4963  00275A  0E08               	movlw	8
  4964  00275C  5C4A               	subwf	animation6@b,w,c
  4965  00275E  B0D8               	btfsc	status,0,c
  4966  002760  D023               	goto	l526
  4967  002762                     u8970:
  4968                           
  4969                           ;newmain.c: 1116: set_led(Buttons[b][n]);
  4970  002762  5042               	movf	animation6@n,w,c
  4971  002764  0D01               	mullw	1
  4972  002766  C04A  F043         	movff	animation6@b,??_animation6
  4973  00276A  C04B  F044         	movff	animation6@b+1,??_animation6+1
  4974  00276E  90D8               	bcf	status,0,c
  4975  002770  3643               	rlcf	??_animation6,f,c
  4976  002772  3644               	rlcf	??_animation6+1,f,c
  4977  002774  90D8               	bcf	status,0,c
  4978  002776  3643               	rlcf	??_animation6,f,c
  4979  002778  3644               	rlcf	??_animation6+1,f,c
  4980  00277A  90D8               	bcf	status,0,c
  4981  00277C  3643               	rlcf	??_animation6,f,c
  4982  00277E  3644               	rlcf	??_animation6+1,f,c
  4983  002780  0EF9               	movlw	low _Buttons
  4984  002782  6E45               	movwf	(??_animation6+2)& (0+255),c
  4985  002784  0E7E               	movlw	high _Buttons
  4986  002786  6E46               	movwf	(??_animation6+3)& (0+255),c
  4987  002788  5043               	movf	??_animation6,w,c
  4988  00278A  2645               	addwf	??_animation6+2,f,c
  4989  00278C  5044               	movf	??_animation6+1,w,c
  4990  00278E  2246               	addwfc	??_animation6+3,f,c
  4991  002790  50F3               	movf	prodl,w,c
  4992  002792  2645               	addwf	??_animation6+2,f,c
  4993  002794  50F4               	movf	prodh,w,c
  4994  002796  2246               	addwfc	??_animation6+3,f,c
  4995  002798  C045  FFF6         	movff	??_animation6+2,tblptrl
  4996  00279C  C046  FFF7         	movff	??_animation6+3,tblptrh
  4997  0027A0                     	if	0	;tblptru may be non-zero
  4998  0027A0                     	endif
  4999  0027A0                     	if	0	;tblptru may be non-zero
  5000  0027A0                     	endif
  5001  0027A0  0008               	tblrd		*
  5002  0027A2  50F5               	movf	tablat,w,c
  5003  0027A4  EC23  F017         	call	_set_led
  5004  0027A8                     l526:
  5005  0027A8                     l6297:
  5006                           
  5007                           ;newmain.c: 1117: if (c >= 0)
  5008  0027A8  BE4D               	btfsc	animation6@c+1,7,c
  5009  0027AA  D016               	goto	l527
  5010                           
  5011                           ;newmain.c: 1118: set_led(Buttons[m][c]);
  5012  0027AC  5050               	movf	animation6@m,w,c
  5013  0027AE  0D08               	mullw	8
  5014  0027B0  0EF9               	movlw	low _Buttons
  5015  0027B2  6E43               	movwf	??_animation6& (0+255),c
  5016  0027B4  0E7E               	movlw	high _Buttons
  5017  0027B6  6E44               	movwf	(??_animation6+1)& (0+255),c
  5018  0027B8  50F3               	movf	prodl,w,c
  5019  0027BA  2643               	addwf	??_animation6,f,c
  5020  0027BC  50F4               	movf	prodh,w,c
  5021  0027BE  2244               	addwfc	??_animation6+1,f,c
  5022  0027C0  504C               	movf	animation6@c,w,c
  5023  0027C2  2643               	addwf	??_animation6,f,c
  5024  0027C4  504D               	movf	animation6@c+1,w,c
  5025  0027C6  2244               	addwfc	??_animation6+1,f,c
  5026  0027C8  C043  FFF6         	movff	??_animation6,tblptrl
  5027  0027CC  C044  FFF7         	movff	??_animation6+1,tblptrh
  5028  0027D0                     	if	0	;tblptru may be non-zero
  5029  0027D0                     	endif
  5030  0027D0                     	if	0	;tblptru may be non-zero
  5031  0027D0                     	endif
  5032  0027D0  0008               	tblrd		*
  5033  0027D2  50F5               	movf	tablat,w,c
  5034  0027D4  EC23  F017         	call	_set_led
  5035  0027D8                     l527:
  5036                           
  5037                           ;newmain.c: 1119: if (d < 8)
  5038  0027D8  BE4F               	btfsc	animation6@d+1,7,c
  5039  0027DA  D006               	goto	u8990
  5040  0027DC  504F               	movf	animation6@d+1,w,c
  5041  0027DE  E11A               	bnz	l6305
  5042  0027E0  0E08               	movlw	8
  5043  0027E2  5C4E               	subwf	animation6@d,w,c
  5044  0027E4  B0D8               	btfsc	status,0,c
  5045  0027E6  D016               	goto	l528
  5046  0027E8                     u8990:
  5047                           
  5048                           ;newmain.c: 1120: set_led(Buttons[m][d]);
  5049  0027E8  5050               	movf	animation6@m,w,c
  5050  0027EA  0D08               	mullw	8
  5051  0027EC  0EF9               	movlw	low _Buttons
  5052  0027EE  6E43               	movwf	??_animation6& (0+255),c
  5053  0027F0  0E7E               	movlw	high _Buttons
  5054  0027F2  6E44               	movwf	(??_animation6+1)& (0+255),c
  5055  0027F4  50F3               	movf	prodl,w,c
  5056  0027F6  2643               	addwf	??_animation6,f,c
  5057  0027F8  50F4               	movf	prodh,w,c
  5058  0027FA  2244               	addwfc	??_animation6+1,f,c
  5059  0027FC  504E               	movf	animation6@d,w,c
  5060  0027FE  2643               	addwf	??_animation6,f,c
  5061  002800  504F               	movf	animation6@d+1,w,c
  5062  002802  2244               	addwfc	??_animation6+1,f,c
  5063  002804  C043  FFF6         	movff	??_animation6,tblptrl
  5064  002808  C044  FFF7         	movff	??_animation6+1,tblptrh
  5065  00280C                     	if	0	;tblptru may be non-zero
  5066  00280C                     	endif
  5067  00280C                     	if	0	;tblptru may be non-zero
  5068  00280C                     	endif
  5069  00280C  0008               	tblrd		*
  5070  00280E  50F5               	movf	tablat,w,c
  5071  002810  EC23  F017         	call	_set_led
  5072  002814                     l528:
  5073  002814                     l6305:
  5074                           
  5075                           ;newmain.c: 1122: write_display();
  5076  002814  EC2E  F016         	call	_write_display	;wreg free
  5077                           
  5078                           ;newmain.c: 1123: _delay((unsigned long)((10)*(4000000/4000.0)));
  5079  002818  0E0D               	movlw	13
  5080  00281A  6E43               	movwf	??_animation6& (0+255),c
  5081  00281C  0EFC               	movlw	252
  5082  00281E                     u10177:
  5083  00281E  2EE8               	decfsz	wreg,f,c
  5084  002820  D7FE               	bra	u10177
  5085  002822  2E43               	decfsz	??_animation6& (0+255),f,c
  5086  002824  D7FC               	bra	u10177
  5087                           
  5088                           ;newmain.c: 1124: clr_led(Buttons[a][n]);
  5089  002826  5042               	movf	animation6@n,w,c
  5090  002828  0D01               	mullw	1
  5091  00282A  C048  F043         	movff	animation6@a,??_animation6
  5092  00282E  C049  F044         	movff	animation6@a+1,??_animation6+1
  5093  002832  90D8               	bcf	status,0,c
  5094  002834  3643               	rlcf	??_animation6,f,c
  5095  002836  3644               	rlcf	??_animation6+1,f,c
  5096  002838  90D8               	bcf	status,0,c
  5097  00283A  3643               	rlcf	??_animation6,f,c
  5098  00283C  3644               	rlcf	??_animation6+1,f,c
  5099  00283E  90D8               	bcf	status,0,c
  5100  002840  3643               	rlcf	??_animation6,f,c
  5101  002842  3644               	rlcf	??_animation6+1,f,c
  5102  002844  0EF9               	movlw	low _Buttons
  5103  002846  6E45               	movwf	(??_animation6+2)& (0+255),c
  5104  002848  0E7E               	movlw	high _Buttons
  5105  00284A  6E46               	movwf	(??_animation6+3)& (0+255),c
  5106  00284C  5043               	movf	??_animation6,w,c
  5107  00284E  2645               	addwf	??_animation6+2,f,c
  5108  002850  5044               	movf	??_animation6+1,w,c
  5109  002852  2246               	addwfc	??_animation6+3,f,c
  5110  002854  50F3               	movf	prodl,w,c
  5111  002856  2645               	addwf	??_animation6+2,f,c
  5112  002858  50F4               	movf	prodh,w,c
  5113  00285A  2246               	addwfc	??_animation6+3,f,c
  5114  00285C  C045  FFF6         	movff	??_animation6+2,tblptrl
  5115  002860  C046  FFF7         	movff	??_animation6+3,tblptrh
  5116  002864                     	if	0	;tblptru may be non-zero
  5117  002864                     	endif
  5118  002864                     	if	0	;tblptru may be non-zero
  5119  002864                     	endif
  5120  002864  0008               	tblrd		*
  5121  002866  50F5               	movf	tablat,w,c
  5122  002868  ECC8  F016         	call	_clr_led
  5123                           
  5124                           ;newmain.c: 1125: clr_led(Buttons[b][n]);
  5125  00286C  5042               	movf	animation6@n,w,c
  5126  00286E  0D01               	mullw	1
  5127  002870  C04A  F043         	movff	animation6@b,??_animation6
  5128  002874  C04B  F044         	movff	animation6@b+1,??_animation6+1
  5129  002878  90D8               	bcf	status,0,c
  5130  00287A  3643               	rlcf	??_animation6,f,c
  5131  00287C  3644               	rlcf	??_animation6+1,f,c
  5132  00287E  90D8               	bcf	status,0,c
  5133  002880  3643               	rlcf	??_animation6,f,c
  5134  002882  3644               	rlcf	??_animation6+1,f,c
  5135  002884  90D8               	bcf	status,0,c
  5136  002886  3643               	rlcf	??_animation6,f,c
  5137  002888  3644               	rlcf	??_animation6+1,f,c
  5138  00288A  0EF9               	movlw	low _Buttons
  5139  00288C  6E45               	movwf	(??_animation6+2)& (0+255),c
  5140  00288E  0E7E               	movlw	high _Buttons
  5141  002890  6E46               	movwf	(??_animation6+3)& (0+255),c
  5142  002892  5043               	movf	??_animation6,w,c
  5143  002894  2645               	addwf	??_animation6+2,f,c
  5144  002896  5044               	movf	??_animation6+1,w,c
  5145  002898  2246               	addwfc	??_animation6+3,f,c
  5146  00289A  50F3               	movf	prodl,w,c
  5147  00289C  2645               	addwf	??_animation6+2,f,c
  5148  00289E  50F4               	movf	prodh,w,c
  5149  0028A0  2246               	addwfc	??_animation6+3,f,c
  5150  0028A2  C045  FFF6         	movff	??_animation6+2,tblptrl
  5151  0028A6  C046  FFF7         	movff	??_animation6+3,tblptrh
  5152  0028AA                     	if	0	;tblptru may be non-zero
  5153  0028AA                     	endif
  5154  0028AA                     	if	0	;tblptru may be non-zero
  5155  0028AA                     	endif
  5156  0028AA  0008               	tblrd		*
  5157  0028AC  50F5               	movf	tablat,w,c
  5158  0028AE  ECC8  F016         	call	_clr_led
  5159                           
  5160                           ;newmain.c: 1126: clr_led(Buttons[m][c]);
  5161  0028B2  5050               	movf	animation6@m,w,c
  5162  0028B4  0D08               	mullw	8
  5163  0028B6  0EF9               	movlw	low _Buttons
  5164  0028B8  6E43               	movwf	??_animation6& (0+255),c
  5165  0028BA  0E7E               	movlw	high _Buttons
  5166  0028BC  6E44               	movwf	(??_animation6+1)& (0+255),c
  5167  0028BE  50F3               	movf	prodl,w,c
  5168  0028C0  2643               	addwf	??_animation6,f,c
  5169  0028C2  50F4               	movf	prodh,w,c
  5170  0028C4  2244               	addwfc	??_animation6+1,f,c
  5171  0028C6  504C               	movf	animation6@c,w,c
  5172  0028C8  2643               	addwf	??_animation6,f,c
  5173  0028CA  504D               	movf	animation6@c+1,w,c
  5174  0028CC  2244               	addwfc	??_animation6+1,f,c
  5175  0028CE  C043  FFF6         	movff	??_animation6,tblptrl
  5176  0028D2  C044  FFF7         	movff	??_animation6+1,tblptrh
  5177  0028D6                     	if	0	;tblptru may be non-zero
  5178  0028D6                     	endif
  5179  0028D6                     	if	0	;tblptru may be non-zero
  5180  0028D6                     	endif
  5181  0028D6  0008               	tblrd		*
  5182  0028D8  50F5               	movf	tablat,w,c
  5183  0028DA  ECC8  F016         	call	_clr_led
  5184                           
  5185                           ;newmain.c: 1127: clr_led(Buttons[m][d]);
  5186  0028DE  5050               	movf	animation6@m,w,c
  5187  0028E0  0D08               	mullw	8
  5188  0028E2  0EF9               	movlw	low _Buttons
  5189  0028E4  6E43               	movwf	??_animation6& (0+255),c
  5190  0028E6  0E7E               	movlw	high _Buttons
  5191  0028E8  6E44               	movwf	(??_animation6+1)& (0+255),c
  5192  0028EA  50F3               	movf	prodl,w,c
  5193  0028EC  2643               	addwf	??_animation6,f,c
  5194  0028EE  50F4               	movf	prodh,w,c
  5195  0028F0  2244               	addwfc	??_animation6+1,f,c
  5196  0028F2  504E               	movf	animation6@d,w,c
  5197  0028F4  2643               	addwf	??_animation6,f,c
  5198  0028F6  504F               	movf	animation6@d+1,w,c
  5199  0028F8  2244               	addwfc	??_animation6+1,f,c
  5200  0028FA  C043  FFF6         	movff	??_animation6,tblptrl
  5201  0028FE  C044  FFF7         	movff	??_animation6+1,tblptrh
  5202  002902                     	if	0	;tblptru may be non-zero
  5203  002902                     	endif
  5204  002902                     	if	0	;tblptru may be non-zero
  5205  002902                     	endif
  5206  002902  0008               	tblrd		*
  5207  002904  50F5               	movf	tablat,w,c
  5208  002906  ECC8  F016         	call	_clr_led
  5209                           
  5210                           ;newmain.c: 1128: write_display();
  5211  00290A  EC2E  F016         	call	_write_display	;wreg free
  5212                           
  5213                           ;newmain.c: 1129: a--;
  5214  00290E  0648               	decf	animation6@a,f,c
  5215  002910  A0D8               	btfss	status,0,c
  5216  002912  0649               	decf	animation6@a+1,f,c
  5217                           
  5218                           ;newmain.c: 1130: b++;
  5219  002914  4A4A               	infsnz	animation6@b,f,c
  5220  002916  2A4B               	incf	animation6@b+1,f,c
  5221                           
  5222                           ;newmain.c: 1131: c--;
  5223  002918  064C               	decf	animation6@c,f,c
  5224  00291A  A0D8               	btfss	status,0,c
  5225  00291C  064D               	decf	animation6@c+1,f,c
  5226                           
  5227                           ;newmain.c: 1132: d++;
  5228  00291E  4A4E               	infsnz	animation6@d,f,c
  5229  002920  2A4F               	incf	animation6@d+1,f,c
  5230  002922  2A47               	incf	animation6@x,f,c
  5231  002924  D6ED               	goto	l6285
  5232  002926                     __end_of_animation6:
  5233                           	opt stack 0
  5234                           tblptru	equ	0xFF8
  5235                           tblptrh	equ	0xFF7
  5236                           tblptrl	equ	0xFF6
  5237                           tablat	equ	0xFF5
  5238                           prodh	equ	0xFF4
  5239                           prodl	equ	0xFF3
  5240                           intcon	equ	0xFF2
  5241                           intcon2	equ	0xFF1
  5242                           postinc0	equ	0xFEE
  5243                           wreg	equ	0xFE8
  5244                           indf2	equ	0xFDF
  5245                           postinc2	equ	0xFDE
  5246                           postdec2	equ	0xFDD
  5247                           fsr2h	equ	0xFDA
  5248                           fsr2l	equ	0xFD9
  5249                           status	equ	0xFD8
  5250                           
  5251 ;; *************** function _animation5 *****************
  5252 ;; Defined at:
  5253 ;;		line 1029 in file "newmain.c"
  5254 ;; Parameters:    Size  Location     Type
  5255 ;;  m               1    wreg     unsigned char 
  5256 ;;  n               1   65[COMRAM] unsigned char 
  5257 ;;  h               1   66[COMRAM] unsigned char 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  m               1   69[COMRAM] unsigned char 
  5260 ;;  x               1   72[COMRAM] unsigned char 
  5261 ;;  i               1   71[COMRAM] unsigned char 
  5262 ;;  j               1   70[COMRAM] unsigned char 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5272 ;;      Params:         2       0       0       0       0       0       0
  5273 ;;      Locals:         4       0       0       0       0       0       0
  5274 ;;      Temps:          2       0       0       0       0       0       0
  5275 ;;      Totals:         8       0       0       0       0       0       0
  5276 ;;Total ram usage:        8 bytes
  5277 ;; Hardware stack levels used:    1
  5278 ;; Hardware stack levels required when called:    7
  5279 ;; This function calls:
  5280 ;;		_clr_led
  5281 ;;		_set_led
  5282 ;;		_write_display
  5283 ;; This function is called by:
  5284 ;;		_main
  5285 ;; This function uses a non-reentrant model
  5286 ;;
  5287                           
  5288                           	psect	text5
  5289  002344                     __ptext5:
  5290                           	opt stack 0
  5291  002344                     _animation5:
  5292                           	opt stack 23
  5293                           
  5294                           ;incstack = 0
  5295                           ;animation5@m stored from wreg
  5296  002344  6E46               	movwf	animation5@m,c
  5297                           
  5298                           ;newmain.c: 1030: uint8_t i = 0, j = 0, x = 0;
  5299  002346  0E00               	movlw	0
  5300  002348  6E48               	movwf	animation5@i,c
  5301  00234A  0E00               	movlw	0
  5302  00234C  6E47               	movwf	animation5@j,c
  5303  00234E  0E00               	movlw	0
  5304  002350  6E49               	movwf	animation5@x,c
  5305                           
  5306                           ;newmain.c: 1032: if (m == 0) {
  5307  002352  5046               	movf	animation5@m,w,c
  5308  002354  A4D8               	btfss	status,2,c
  5309  002356  D05C               	goto	l485
  5310                           
  5311                           ;newmain.c: 1033: for (i = 0; i < 16; i++) {
  5312  002358  0E00               	movlw	0
  5313  00235A  6E48               	movwf	animation5@i,c
  5314  00235C                     l6123:
  5315  00235C  0E0F               	movlw	15
  5316  00235E  6448               	cpfsgt	animation5@i,c
  5317  002360  D001               	goto	l486
  5318  002362  0012               	return	
  5319  002364                     l486:
  5320                           
  5321                           ;newmain.c: 1034: if (show5[i][0] == n) {
  5322  002364  5048               	movf	animation5@i,w,c
  5323  002366  0D04               	mullw	4
  5324  002368  0E39               	movlw	low _show5
  5325  00236A  24F3               	addwf	prodl,w,c
  5326  00236C  6EF6               	movwf	tblptrl,c
  5327  00236E  0E7E               	movlw	high _show5
  5328  002370  20F4               	addwfc	prodh,w,c
  5329  002372  6EF7               	movwf	tblptrh,c
  5330  002374                     	if	0	;There are less than 3 active tblptr bytes
  5331  002374                     	endif
  5332  002374  0008               	tblrd		*
  5333  002376  50F5               	movf	tablat,w,c
  5334  002378  1842               	xorwf	animation5@n,w,c
  5335  00237A  A4D8               	btfss	status,2,c
  5336  00237C  D047               	goto	l488
  5337                           
  5338                           ;newmain.c: 1035: for (j = 0; j < 4; j++) {
  5339  00237E  0E00               	movlw	0
  5340  002380  6E47               	movwf	animation5@j,c
  5341  002382                     l6131:
  5342  002382  0E03               	movlw	3
  5343  002384  6447               	cpfsgt	animation5@j,c
  5344  002386  D001               	goto	l489
  5345  002388  D03E               	goto	u8720
  5346  00238A                     l489:
  5347                           
  5348                           ;newmain.c: 1036: x = show5[i][j];
  5349  00238A  5048               	movf	animation5@i,w,c
  5350  00238C  0D04               	mullw	4
  5351  00238E  0E39               	movlw	low _show5
  5352  002390  6E44               	movwf	??_animation5& (0+255),c
  5353  002392  0E7E               	movlw	high _show5
  5354  002394  6E45               	movwf	(??_animation5+1)& (0+255),c
  5355  002396  50F3               	movf	prodl,w,c
  5356  002398  2644               	addwf	??_animation5,f,c
  5357  00239A  50F4               	movf	prodh,w,c
  5358  00239C  2245               	addwfc	??_animation5+1,f,c
  5359  00239E  5047               	movf	animation5@j,w,c
  5360  0023A0  0D01               	mullw	1
  5361  0023A2  50F3               	movf	prodl,w,c
  5362  0023A4  2644               	addwf	??_animation5,f,c
  5363  0023A6  50F4               	movf	prodh,w,c
  5364  0023A8  2245               	addwfc	??_animation5+1,f,c
  5365  0023AA  C044  FFF6         	movff	??_animation5,tblptrl
  5366  0023AE  C045  FFF7         	movff	??_animation5+1,tblptrh
  5367  0023B2                     	if	0	;tblptru may be non-zero
  5368  0023B2                     	endif
  5369  0023B2                     	if	0	;tblptru may be non-zero
  5370  0023B2                     	endif
  5371  0023B2  0008               	tblrd		*
  5372  0023B4  CFF5 F049          	movff	tablat,animation5@x
  5373                           
  5374                           ;newmain.c: 1037: if (temp[x] == 0) {
  5375  0023B8  5049               	movf	animation5@x,w,c
  5376  0023BA  0D01               	mullw	1
  5377  0023BC  0E80               	movlw	low _temp
  5378  0023BE  24F3               	addwf	prodl,w,c
  5379  0023C0  6ED9               	movwf	fsr2l,c
  5380  0023C2  0E00               	movlw	high _temp
  5381  0023C4  20F4               	addwfc	prodh,w,c
  5382  0023C6  6EDA               	movwf	fsr2h,c
  5383  0023C8  50DF               	movf	indf2,w,c
  5384  0023CA  A4D8               	btfss	status,2,c
  5385  0023CC  D00D               	goto	l491
  5386                           
  5387                           ;newmain.c: 1038: set_led(x);
  5388  0023CE  5049               	movf	animation5@x,w,c
  5389  0023D0  EC23  F017         	call	_set_led
  5390                           
  5391                           ;newmain.c: 1039: temp[x] = 1;
  5392  0023D4  5049               	movf	animation5@x,w,c
  5393  0023D6  0D01               	mullw	1
  5394  0023D8  0E80               	movlw	low _temp
  5395  0023DA  24F3               	addwf	prodl,w,c
  5396  0023DC  6ED9               	movwf	fsr2l,c
  5397  0023DE  0E00               	movlw	high _temp
  5398  0023E0  20F4               	addwfc	prodh,w,c
  5399  0023E2  6EDA               	movwf	fsr2h,c
  5400  0023E4  0E01               	movlw	1
  5401  0023E6  D00C               	goto	L7
  5402  0023E8                     l491:
  5403                           
  5404                           ;newmain.c: 1041: clr_led(x);
  5405  0023E8  5049               	movf	animation5@x,w,c
  5406  0023EA  ECC8  F016         	call	_clr_led
  5407                           
  5408                           ;newmain.c: 1042: temp[x] = 0;
  5409  0023EE  5049               	movf	animation5@x,w,c
  5410  0023F0  0D01               	mullw	1
  5411  0023F2  0E80               	movlw	low _temp
  5412  0023F4  24F3               	addwf	prodl,w,c
  5413  0023F6  6ED9               	movwf	fsr2l,c
  5414  0023F8  0E00               	movlw	high _temp
  5415  0023FA  20F4               	addwfc	prodh,w,c
  5416  0023FC  6EDA               	movwf	fsr2h,c
  5417  0023FE  0E00               	movlw	0
  5418  002400                     L7:
  5419  002400  6EDF               	movwf	indf2,c
  5420  002402  2A47               	incf	animation5@j,f,c
  5421  002404  D7BE               	goto	l6131
  5422  002406                     u8720:
  5423                           
  5424                           ;newmain.c: 1043: }
  5425                           ;newmain.c: 1044: }
  5426                           ;newmain.c: 1045: write_display();
  5427  002406  EC2E  F016         	call	_write_display	;wreg free
  5428                           
  5429                           ;newmain.c: 1046: break;
  5430  00240A  0012               	return	
  5431  00240C                     l488:
  5432  00240C  2A48               	incf	animation5@i,f,c
  5433  00240E  D7A6               	goto	l6123
  5434  002410                     l485:
  5435  002410  0446               	decf	animation5@m,w,c
  5436  002412  A4D8               	btfss	status,2,c
  5437  002414  D05D               	goto	l494
  5438                           
  5439                           ;newmain.c: 1050: for (i = 0; i < 16; i++) {
  5440  002416  0E00               	movlw	0
  5441  002418  6E48               	movwf	animation5@i,c
  5442  00241A                     l6161:
  5443  00241A  0E0F               	movlw	15
  5444  00241C  6448               	cpfsgt	animation5@i,c
  5445  00241E  D001               	goto	l495
  5446  002420  0012               	return	
  5447  002422                     l495:
  5448                           
  5449                           ;newmain.c: 1051: if (show5[i][0] == n) {
  5450  002422  5048               	movf	animation5@i,w,c
  5451  002424  0D04               	mullw	4
  5452  002426  0E39               	movlw	low _show5
  5453  002428  24F3               	addwf	prodl,w,c
  5454  00242A  6EF6               	movwf	tblptrl,c
  5455  00242C  0E7E               	movlw	high _show5
  5456  00242E  20F4               	addwfc	prodh,w,c
  5457  002430  6EF7               	movwf	tblptrh,c
  5458  002432                     	if	0	;There are less than 3 active tblptr bytes
  5459  002432                     	endif
  5460  002432  0008               	tblrd		*
  5461  002434  50F5               	movf	tablat,w,c
  5462  002436  1842               	xorwf	animation5@n,w,c
  5463  002438  A4D8               	btfss	status,2,c
  5464  00243A  D048               	goto	l497
  5465                           
  5466                           ;newmain.c: 1052: for (j = 0; j < 4; j++) {
  5467  00243C  0E00               	movlw	0
  5468  00243E  6E47               	movwf	animation5@j,c
  5469  002440                     l6169:
  5470  002440  0E03               	movlw	3
  5471  002442  6447               	cpfsgt	animation5@j,c
  5472  002444  D001               	goto	l498
  5473  002446  D03F               	goto	u8790
  5474  002448                     l498:
  5475                           
  5476                           ;newmain.c: 1053: x = show5[i][j] + 16;
  5477  002448  5048               	movf	animation5@i,w,c
  5478  00244A  0D04               	mullw	4
  5479  00244C  0E39               	movlw	low _show5
  5480  00244E  6E44               	movwf	??_animation5& (0+255),c
  5481  002450  0E7E               	movlw	high _show5
  5482  002452  6E45               	movwf	(??_animation5+1)& (0+255),c
  5483  002454  50F3               	movf	prodl,w,c
  5484  002456  2644               	addwf	??_animation5,f,c
  5485  002458  50F4               	movf	prodh,w,c
  5486  00245A  2245               	addwfc	??_animation5+1,f,c
  5487  00245C  5047               	movf	animation5@j,w,c
  5488  00245E  0D01               	mullw	1
  5489  002460  50F3               	movf	prodl,w,c
  5490  002462  2644               	addwf	??_animation5,f,c
  5491  002464  50F4               	movf	prodh,w,c
  5492  002466  2245               	addwfc	??_animation5+1,f,c
  5493  002468  C044  FFF6         	movff	??_animation5,tblptrl
  5494  00246C  C045  FFF7         	movff	??_animation5+1,tblptrh
  5495  002470                     	if	0	;tblptru may be non-zero
  5496  002470                     	endif
  5497  002470                     	if	0	;tblptru may be non-zero
  5498  002470                     	endif
  5499  002470  0008               	tblrd		*
  5500  002472  50F5               	movf	tablat,w,c
  5501  002474  0F10               	addlw	16
  5502  002476  6E49               	movwf	animation5@x,c
  5503                           
  5504                           ;newmain.c: 1054: if (temp[x] == 0) {
  5505  002478  5049               	movf	animation5@x,w,c
  5506  00247A  0D01               	mullw	1
  5507  00247C  0E80               	movlw	low _temp
  5508  00247E  24F3               	addwf	prodl,w,c
  5509  002480  6ED9               	movwf	fsr2l,c
  5510  002482  0E00               	movlw	high _temp
  5511  002484  20F4               	addwfc	prodh,w,c
  5512  002486  6EDA               	movwf	fsr2h,c
  5513  002488  50DF               	movf	indf2,w,c
  5514  00248A  A4D8               	btfss	status,2,c
  5515  00248C  D00D               	goto	l500
  5516                           
  5517                           ;newmain.c: 1055: set_led(x);
  5518  00248E  5049               	movf	animation5@x,w,c
  5519  002490  EC23  F017         	call	_set_led
  5520                           
  5521                           ;newmain.c: 1056: temp[x] = 1;
  5522  002494  5049               	movf	animation5@x,w,c
  5523  002496  0D01               	mullw	1
  5524  002498  0E80               	movlw	low _temp
  5525  00249A  24F3               	addwf	prodl,w,c
  5526  00249C  6ED9               	movwf	fsr2l,c
  5527  00249E  0E00               	movlw	high _temp
  5528  0024A0  20F4               	addwfc	prodh,w,c
  5529  0024A2  6EDA               	movwf	fsr2h,c
  5530  0024A4  0E01               	movlw	1
  5531  0024A6  D00C               	goto	L8
  5532  0024A8                     l500:
  5533                           
  5534                           ;newmain.c: 1058: clr_led(x);
  5535  0024A8  5049               	movf	animation5@x,w,c
  5536  0024AA  ECC8  F016         	call	_clr_led
  5537                           
  5538                           ;newmain.c: 1059: temp[x] = 0;
  5539  0024AE  5049               	movf	animation5@x,w,c
  5540  0024B0  0D01               	mullw	1
  5541  0024B2  0E80               	movlw	low _temp
  5542  0024B4  24F3               	addwf	prodl,w,c
  5543  0024B6  6ED9               	movwf	fsr2l,c
  5544  0024B8  0E00               	movlw	high _temp
  5545  0024BA  20F4               	addwfc	prodh,w,c
  5546  0024BC  6EDA               	movwf	fsr2h,c
  5547  0024BE  0E00               	movlw	0
  5548  0024C0                     L8:
  5549  0024C0  6EDF               	movwf	indf2,c
  5550  0024C2  2A47               	incf	animation5@j,f,c
  5551  0024C4  D7BD               	goto	l6169
  5552  0024C6                     u8790:
  5553                           
  5554                           ;newmain.c: 1060: }
  5555                           ;newmain.c: 1061: }
  5556                           ;newmain.c: 1062: write_display();
  5557  0024C6  EC2E  F016         	call	_write_display	;wreg free
  5558                           
  5559                           ;newmain.c: 1063: break;
  5560  0024CA  0012               	return	
  5561  0024CC                     l497:
  5562  0024CC  2A48               	incf	animation5@i,f,c
  5563  0024CE  D7A5               	goto	l6161
  5564  0024D0                     l494:
  5565  0024D0  0E02               	movlw	2
  5566  0024D2  1846               	xorwf	animation5@m,w,c
  5567  0024D4  A4D8               	btfss	status,2,c
  5568  0024D6  D05D               	goto	l503
  5569                           
  5570                           ;newmain.c: 1067: for (i = 0; i < 16; i++) {
  5571  0024D8  0E00               	movlw	0
  5572  0024DA  6E48               	movwf	animation5@i,c
  5573  0024DC                     l6199:
  5574  0024DC  0E0F               	movlw	15
  5575  0024DE  6448               	cpfsgt	animation5@i,c
  5576  0024E0  D001               	goto	l504
  5577  0024E2  0012               	return	
  5578  0024E4                     l504:
  5579                           
  5580                           ;newmain.c: 1068: if (show5[i][0] == n) {
  5581  0024E4  5048               	movf	animation5@i,w,c
  5582  0024E6  0D04               	mullw	4
  5583  0024E8  0E39               	movlw	low _show5
  5584  0024EA  24F3               	addwf	prodl,w,c
  5585  0024EC  6EF6               	movwf	tblptrl,c
  5586  0024EE  0E7E               	movlw	high _show5
  5587  0024F0  20F4               	addwfc	prodh,w,c
  5588  0024F2  6EF7               	movwf	tblptrh,c
  5589  0024F4                     	if	0	;There are less than 3 active tblptr bytes
  5590  0024F4                     	endif
  5591  0024F4  0008               	tblrd		*
  5592  0024F6  50F5               	movf	tablat,w,c
  5593  0024F8  1842               	xorwf	animation5@n,w,c
  5594  0024FA  A4D8               	btfss	status,2,c
  5595  0024FC  D048               	goto	l506
  5596                           
  5597                           ;newmain.c: 1069: for (j = 0; j < 4; j++) {
  5598  0024FE  0E00               	movlw	0
  5599  002500  6E47               	movwf	animation5@j,c
  5600  002502                     l6207:
  5601  002502  0E03               	movlw	3
  5602  002504  6447               	cpfsgt	animation5@j,c
  5603  002506  D001               	goto	l507
  5604  002508  D03F               	goto	u8860
  5605  00250A                     l507:
  5606                           
  5607                           ;newmain.c: 1070: x = show5[i][j] + 32;
  5608  00250A  5048               	movf	animation5@i,w,c
  5609  00250C  0D04               	mullw	4
  5610  00250E  0E39               	movlw	low _show5
  5611  002510  6E44               	movwf	??_animation5& (0+255),c
  5612  002512  0E7E               	movlw	high _show5
  5613  002514  6E45               	movwf	(??_animation5+1)& (0+255),c
  5614  002516  50F3               	movf	prodl,w,c
  5615  002518  2644               	addwf	??_animation5,f,c
  5616  00251A  50F4               	movf	prodh,w,c
  5617  00251C  2245               	addwfc	??_animation5+1,f,c
  5618  00251E  5047               	movf	animation5@j,w,c
  5619  002520  0D01               	mullw	1
  5620  002522  50F3               	movf	prodl,w,c
  5621  002524  2644               	addwf	??_animation5,f,c
  5622  002526  50F4               	movf	prodh,w,c
  5623  002528  2245               	addwfc	??_animation5+1,f,c
  5624  00252A  C044  FFF6         	movff	??_animation5,tblptrl
  5625  00252E  C045  FFF7         	movff	??_animation5+1,tblptrh
  5626  002532                     	if	0	;tblptru may be non-zero
  5627  002532                     	endif
  5628  002532                     	if	0	;tblptru may be non-zero
  5629  002532                     	endif
  5630  002532  0008               	tblrd		*
  5631  002534  50F5               	movf	tablat,w,c
  5632  002536  0F20               	addlw	32
  5633  002538  6E49               	movwf	animation5@x,c
  5634                           
  5635                           ;newmain.c: 1071: if (temp[x] == 0) {
  5636  00253A  5049               	movf	animation5@x,w,c
  5637  00253C  0D01               	mullw	1
  5638  00253E  0E80               	movlw	low _temp
  5639  002540  24F3               	addwf	prodl,w,c
  5640  002542  6ED9               	movwf	fsr2l,c
  5641  002544  0E00               	movlw	high _temp
  5642  002546  20F4               	addwfc	prodh,w,c
  5643  002548  6EDA               	movwf	fsr2h,c
  5644  00254A  50DF               	movf	indf2,w,c
  5645  00254C  A4D8               	btfss	status,2,c
  5646  00254E  D00D               	goto	l509
  5647                           
  5648                           ;newmain.c: 1072: set_led(x);
  5649  002550  5049               	movf	animation5@x,w,c
  5650  002552  EC23  F017         	call	_set_led
  5651                           
  5652                           ;newmain.c: 1073: temp[x] = 1;
  5653  002556  5049               	movf	animation5@x,w,c
  5654  002558  0D01               	mullw	1
  5655  00255A  0E80               	movlw	low _temp
  5656  00255C  24F3               	addwf	prodl,w,c
  5657  00255E  6ED9               	movwf	fsr2l,c
  5658  002560  0E00               	movlw	high _temp
  5659  002562  20F4               	addwfc	prodh,w,c
  5660  002564  6EDA               	movwf	fsr2h,c
  5661  002566  0E01               	movlw	1
  5662  002568  D00C               	goto	L9
  5663  00256A                     l509:
  5664                           
  5665                           ;newmain.c: 1075: clr_led(x);
  5666  00256A  5049               	movf	animation5@x,w,c
  5667  00256C  ECC8  F016         	call	_clr_led
  5668                           
  5669                           ;newmain.c: 1076: temp[x] = 0;
  5670  002570  5049               	movf	animation5@x,w,c
  5671  002572  0D01               	mullw	1
  5672  002574  0E80               	movlw	low _temp
  5673  002576  24F3               	addwf	prodl,w,c
  5674  002578  6ED9               	movwf	fsr2l,c
  5675  00257A  0E00               	movlw	high _temp
  5676  00257C  20F4               	addwfc	prodh,w,c
  5677  00257E  6EDA               	movwf	fsr2h,c
  5678  002580  0E00               	movlw	0
  5679  002582                     L9:
  5680  002582  6EDF               	movwf	indf2,c
  5681  002584  2A47               	incf	animation5@j,f,c
  5682  002586  D7BD               	goto	l6207
  5683  002588                     u8860:
  5684                           
  5685                           ;newmain.c: 1077: }
  5686                           ;newmain.c: 1078: }
  5687                           ;newmain.c: 1079: write_display();
  5688  002588  EC2E  F016         	call	_write_display	;wreg free
  5689                           
  5690                           ;newmain.c: 1080: break;
  5691  00258C  0012               	return	
  5692  00258E                     l506:
  5693  00258E  2A48               	incf	animation5@i,f,c
  5694  002590  D7A5               	goto	l6199
  5695  002592                     l503:
  5696  002592  0E03               	movlw	3
  5697  002594  1846               	xorwf	animation5@m,w,c
  5698  002596  A4D8               	btfss	status,2,c
  5699  002598  0012               	return	
  5700                           
  5701                           ;newmain.c: 1084: for (i = 0; i < 16; i++) {
  5702  00259A  0E00               	movlw	0
  5703  00259C  6E48               	movwf	animation5@i,c
  5704  00259E                     l6237:
  5705  00259E  0E0F               	movlw	15
  5706  0025A0  6448               	cpfsgt	animation5@i,c
  5707  0025A2  D001               	goto	l513
  5708  0025A4  0012               	return	
  5709  0025A6                     l513:
  5710                           
  5711                           ;newmain.c: 1085: if (show5[i][0] == n) {
  5712  0025A6  5048               	movf	animation5@i,w,c
  5713  0025A8  0D04               	mullw	4
  5714  0025AA  0E39               	movlw	low _show5
  5715  0025AC  24F3               	addwf	prodl,w,c
  5716  0025AE  6EF6               	movwf	tblptrl,c
  5717  0025B0  0E7E               	movlw	high _show5
  5718  0025B2  20F4               	addwfc	prodh,w,c
  5719  0025B4  6EF7               	movwf	tblptrh,c
  5720  0025B6                     	if	0	;There are less than 3 active tblptr bytes
  5721  0025B6                     	endif
  5722  0025B6  0008               	tblrd		*
  5723  0025B8  50F5               	movf	tablat,w,c
  5724  0025BA  1842               	xorwf	animation5@n,w,c
  5725  0025BC  A4D8               	btfss	status,2,c
  5726  0025BE  D048               	goto	l515
  5727                           
  5728                           ;newmain.c: 1086: for (j = 0; j < 4; j++) {
  5729  0025C0  0E00               	movlw	0
  5730  0025C2  6E47               	movwf	animation5@j,c
  5731  0025C4                     l6245:
  5732  0025C4  0E03               	movlw	3
  5733  0025C6  6447               	cpfsgt	animation5@j,c
  5734  0025C8  D001               	goto	l516
  5735  0025CA  D03F               	goto	u8930
  5736  0025CC                     l516:
  5737                           
  5738                           ;newmain.c: 1087: x = show5[i][j] + 48;
  5739  0025CC  5048               	movf	animation5@i,w,c
  5740  0025CE  0D04               	mullw	4
  5741  0025D0  0E39               	movlw	low _show5
  5742  0025D2  6E44               	movwf	??_animation5& (0+255),c
  5743  0025D4  0E7E               	movlw	high _show5
  5744  0025D6  6E45               	movwf	(??_animation5+1)& (0+255),c
  5745  0025D8  50F3               	movf	prodl,w,c
  5746  0025DA  2644               	addwf	??_animation5,f,c
  5747  0025DC  50F4               	movf	prodh,w,c
  5748  0025DE  2245               	addwfc	??_animation5+1,f,c
  5749  0025E0  5047               	movf	animation5@j,w,c
  5750  0025E2  0D01               	mullw	1
  5751  0025E4  50F3               	movf	prodl,w,c
  5752  0025E6  2644               	addwf	??_animation5,f,c
  5753  0025E8  50F4               	movf	prodh,w,c
  5754  0025EA  2245               	addwfc	??_animation5+1,f,c
  5755  0025EC  C044  FFF6         	movff	??_animation5,tblptrl
  5756  0025F0  C045  FFF7         	movff	??_animation5+1,tblptrh
  5757  0025F4                     	if	0	;tblptru may be non-zero
  5758  0025F4                     	endif
  5759  0025F4                     	if	0	;tblptru may be non-zero
  5760  0025F4                     	endif
  5761  0025F4  0008               	tblrd		*
  5762  0025F6  50F5               	movf	tablat,w,c
  5763  0025F8  0F30               	addlw	48
  5764  0025FA  6E49               	movwf	animation5@x,c
  5765                           
  5766                           ;newmain.c: 1088: if (temp[x] == 0) {
  5767  0025FC  5049               	movf	animation5@x,w,c
  5768  0025FE  0D01               	mullw	1
  5769  002600  0E80               	movlw	low _temp
  5770  002602  24F3               	addwf	prodl,w,c
  5771  002604  6ED9               	movwf	fsr2l,c
  5772  002606  0E00               	movlw	high _temp
  5773  002608  20F4               	addwfc	prodh,w,c
  5774  00260A  6EDA               	movwf	fsr2h,c
  5775  00260C  50DF               	movf	indf2,w,c
  5776  00260E  A4D8               	btfss	status,2,c
  5777  002610  D00D               	goto	l518
  5778                           
  5779                           ;newmain.c: 1089: set_led(x);
  5780  002612  5049               	movf	animation5@x,w,c
  5781  002614  EC23  F017         	call	_set_led
  5782                           
  5783                           ;newmain.c: 1090: temp[x] = 1;
  5784  002618  5049               	movf	animation5@x,w,c
  5785  00261A  0D01               	mullw	1
  5786  00261C  0E80               	movlw	low _temp
  5787  00261E  24F3               	addwf	prodl,w,c
  5788  002620  6ED9               	movwf	fsr2l,c
  5789  002622  0E00               	movlw	high _temp
  5790  002624  20F4               	addwfc	prodh,w,c
  5791  002626  6EDA               	movwf	fsr2h,c
  5792  002628  0E01               	movlw	1
  5793  00262A  D00C               	goto	L10
  5794  00262C                     l518:
  5795                           
  5796                           ;newmain.c: 1092: clr_led(x);
  5797  00262C  5049               	movf	animation5@x,w,c
  5798  00262E  ECC8  F016         	call	_clr_led
  5799                           
  5800                           ;newmain.c: 1093: temp[x] = 0;
  5801  002632  5049               	movf	animation5@x,w,c
  5802  002634  0D01               	mullw	1
  5803  002636  0E80               	movlw	low _temp
  5804  002638  24F3               	addwf	prodl,w,c
  5805  00263A  6ED9               	movwf	fsr2l,c
  5806  00263C  0E00               	movlw	high _temp
  5807  00263E  20F4               	addwfc	prodh,w,c
  5808  002640  6EDA               	movwf	fsr2h,c
  5809  002642  0E00               	movlw	0
  5810  002644                     L10:
  5811  002644  6EDF               	movwf	indf2,c
  5812  002646  2A47               	incf	animation5@j,f,c
  5813  002648  D7BD               	goto	l6245
  5814  00264A                     u8930:
  5815                           
  5816                           ;newmain.c: 1094: }
  5817                           ;newmain.c: 1095: }
  5818                           ;newmain.c: 1096: write_display();
  5819  00264A  EC2E  F016         	call	_write_display	;wreg free
  5820                           
  5821                           ;newmain.c: 1097: break;
  5822  00264E  0012               	return	
  5823  002650                     l515:
  5824  002650  2A48               	incf	animation5@i,f,c
  5825  002652  D7A5               	goto	l6237
  5826  002654                     __end_of_animation5:
  5827                           	opt stack 0
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           intcon	equ	0xFF2
  5835                           intcon2	equ	0xFF1
  5836                           postinc0	equ	0xFEE
  5837                           wreg	equ	0xFE8
  5838                           indf2	equ	0xFDF
  5839                           postinc2	equ	0xFDE
  5840                           postdec2	equ	0xFDD
  5841                           fsr2h	equ	0xFDA
  5842                           fsr2l	equ	0xFD9
  5843                           status	equ	0xFD8
  5844                           
  5845 ;; *************** function _animation4 *****************
  5846 ;; Defined at:
  5847 ;;		line 941 in file "newmain.c"
  5848 ;; Parameters:    Size  Location     Type
  5849 ;;  m               1    wreg     unsigned char 
  5850 ;;  h               1   65[COMRAM] unsigned char 
  5851 ;; Auto vars:     Size  Location     Type
  5852 ;;  m               1   68[COMRAM] unsigned char 
  5853 ;;  j               1   70[COMRAM] unsigned char 
  5854 ;;  i               1   69[COMRAM] unsigned char 
  5855 ;; Return value:  Size  Location     Type
  5856 ;;                  1    wreg      void 
  5857 ;; Registers used:
  5858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5859 ;; Tracked objects:
  5860 ;;		On entry : 0/0
  5861 ;;		On exit  : 0/0
  5862 ;;		Unchanged: 0/0
  5863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5864 ;;      Params:         1       0       0       0       0       0       0
  5865 ;;      Locals:         3       0       0       0       0       0       0
  5866 ;;      Temps:          2       0       0       0       0       0       0
  5867 ;;      Totals:         6       0       0       0       0       0       0
  5868 ;;Total ram usage:        6 bytes
  5869 ;; Hardware stack levels used:    1
  5870 ;; Hardware stack levels required when called:    7
  5871 ;; This function calls:
  5872 ;;		_clr_led
  5873 ;;		_set_led
  5874 ;;		_write_display
  5875 ;; This function is called by:
  5876 ;;		_main
  5877 ;; This function uses a non-reentrant model
  5878 ;;
  5879                           
  5880                           	psect	text6
  5881  001AFE                     __ptext6:
  5882                           	opt stack 0
  5883  001AFE                     _animation4:
  5884                           	opt stack 23
  5885                           
  5886                           ;incstack = 0
  5887                           ;animation4@m stored from wreg
  5888  001AFE  6E45               	movwf	animation4@m,c
  5889                           
  5890                           ;newmain.c: 942: uint8_t i = 0, j = 0;
  5891  001B00  0E00               	movlw	0
  5892  001B02  6E46               	movwf	animation4@i,c
  5893  001B04  0E00               	movlw	0
  5894  001B06  6E47               	movwf	animation4@j,c
  5895                           
  5896                           ;newmain.c: 943: set_led(h);
  5897  001B08  5042               	movf	animation4@h,w,c
  5898  001B0A  EC23  F017         	call	_set_led
  5899                           
  5900                           ;newmain.c: 944: write_display();
  5901  001B0E  EC2E  F016         	call	_write_display	;wreg free
  5902                           
  5903                           ;newmain.c: 945: if (m == 0) {
  5904  001B12  5045               	movf	animation4@m,w,c
  5905  001B14  A4D8               	btfss	status,2,c
  5906  001B16  D086               	goto	l433
  5907                           
  5908                           ;newmain.c: 946: for (i = 0; i < 8; i++) {
  5909  001B18  0E00               	movlw	0
  5910  001B1A  6E46               	movwf	animation4@i,c
  5911  001B1C                     l5933:
  5912  001B1C  0E07               	movlw	7
  5913  001B1E  6446               	cpfsgt	animation4@i,c
  5914  001B20  D001               	goto	l434
  5915  001B22  D21D               	goto	u8660
  5916  001B24                     l434:
  5917                           
  5918                           ;newmain.c: 947: for (j = 0; j < 8; j++) {
  5919  001B24  0E00               	movlw	0
  5920  001B26  6E47               	movwf	animation4@j,c
  5921  001B28                     l5939:
  5922  001B28  0E07               	movlw	7
  5923  001B2A  6447               	cpfsgt	animation4@j,c
  5924  001B2C  D001               	goto	l436
  5925  001B2E  D033               	goto	u8350
  5926  001B30                     l436:
  5927                           
  5928                           ;newmain.c: 948: if (show4_1[i][j] != 100)
  5929  001B30  5046               	movf	animation4@i,w,c
  5930  001B32  0D08               	mullw	8
  5931  001B34  0EB9               	movlw	low _show4_1
  5932  001B36  6E43               	movwf	??_animation4& (0+255),c
  5933  001B38  0E7E               	movlw	high _show4_1
  5934  001B3A  6E44               	movwf	(??_animation4+1)& (0+255),c
  5935  001B3C  50F3               	movf	prodl,w,c
  5936  001B3E  2643               	addwf	??_animation4,f,c
  5937  001B40  50F4               	movf	prodh,w,c
  5938  001B42  2244               	addwfc	??_animation4+1,f,c
  5939  001B44  5047               	movf	animation4@j,w,c
  5940  001B46  0D01               	mullw	1
  5941  001B48  50F3               	movf	prodl,w,c
  5942  001B4A  2643               	addwf	??_animation4,f,c
  5943  001B4C  50F4               	movf	prodh,w,c
  5944  001B4E  2244               	addwfc	??_animation4+1,f,c
  5945  001B50  C043  FFF6         	movff	??_animation4,tblptrl
  5946  001B54  C044  FFF7         	movff	??_animation4+1,tblptrh
  5947  001B58                     	if	0	;tblptru may be non-zero
  5948  001B58                     	endif
  5949  001B58                     	if	0	;tblptru may be non-zero
  5950  001B58                     	endif
  5951  001B58  0008               	tblrd		*
  5952  001B5A  50F5               	movf	tablat,w,c
  5953  001B5C  0A64               	xorlw	100
  5954  001B5E  B4D8               	btfsc	status,2,c
  5955  001B60  D01A               	goto	u8350
  5956                           
  5957                           ;newmain.c: 949: set_led(show4_1[i][j]);
  5958  001B62  5046               	movf	animation4@i,w,c
  5959  001B64  0D08               	mullw	8
  5960  001B66  0EB9               	movlw	low _show4_1
  5961  001B68  6E43               	movwf	??_animation4& (0+255),c
  5962  001B6A  0E7E               	movlw	high _show4_1
  5963  001B6C  6E44               	movwf	(??_animation4+1)& (0+255),c
  5964  001B6E  50F3               	movf	prodl,w,c
  5965  001B70  2643               	addwf	??_animation4,f,c
  5966  001B72  50F4               	movf	prodh,w,c
  5967  001B74  2244               	addwfc	??_animation4+1,f,c
  5968  001B76  5047               	movf	animation4@j,w,c
  5969  001B78  0D01               	mullw	1
  5970  001B7A  50F3               	movf	prodl,w,c
  5971  001B7C  2643               	addwf	??_animation4,f,c
  5972  001B7E  50F4               	movf	prodh,w,c
  5973  001B80  2244               	addwfc	??_animation4+1,f,c
  5974  001B82  C043  FFF6         	movff	??_animation4,tblptrl
  5975  001B86  C044  FFF7         	movff	??_animation4+1,tblptrh
  5976  001B8A                     	if	0	;tblptru may be non-zero
  5977  001B8A                     	endif
  5978  001B8A                     	if	0	;tblptru may be non-zero
  5979  001B8A                     	endif
  5980  001B8A  0008               	tblrd		*
  5981  001B8C  50F5               	movf	tablat,w,c
  5982  001B8E  EC23  F017         	call	_set_led
  5983                           
  5984                           ;newmain.c: 950: else
  5985                           ;newmain.c: 951: break;
  5986  001B92  2A47               	incf	animation4@j,f,c
  5987  001B94  D7C9               	goto	l5939
  5988  001B96                     u8350:
  5989                           
  5990                           ;newmain.c: 952: }
  5991                           ;newmain.c: 953: write_display();
  5992  001B96  EC2E  F016         	call	_write_display	;wreg free
  5993                           
  5994                           ;newmain.c: 954: _delay((unsigned long)((5)*(4000000/4000.0)));
  5995  001B9A  0E07               	movlw	7
  5996  001B9C  6E43               	movwf	??_animation4& (0+255),c
  5997  001B9E  0E7D               	movlw	125
  5998  001BA0                     u10187:
  5999  001BA0  2EE8               	decfsz	wreg,f,c
  6000  001BA2  D7FE               	bra	u10187
  6001  001BA4  2E43               	decfsz	??_animation4& (0+255),f,c
  6002  001BA6  D7FC               	bra	u10187
  6003  001BA8  F000               	nop	
  6004                           
  6005                           ;newmain.c: 956: for (j = 0; j < 8; j++) {
  6006  001BAA  0E00               	movlw	0
  6007  001BAC  6E47               	movwf	animation4@j,c
  6008  001BAE                     l5957:
  6009  001BAE  0E07               	movlw	7
  6010  001BB0  6447               	cpfsgt	animation4@j,c
  6011  001BB2  D001               	goto	l440
  6012  001BB4  D033               	goto	u8380
  6013  001BB6                     l440:
  6014                           
  6015                           ;newmain.c: 957: if (show4_1[i][j] != 100)
  6016  001BB6  5046               	movf	animation4@i,w,c
  6017  001BB8  0D08               	mullw	8
  6018  001BBA  0EB9               	movlw	low _show4_1
  6019  001BBC  6E43               	movwf	??_animation4& (0+255),c
  6020  001BBE  0E7E               	movlw	high _show4_1
  6021  001BC0  6E44               	movwf	(??_animation4+1)& (0+255),c
  6022  001BC2  50F3               	movf	prodl,w,c
  6023  001BC4  2643               	addwf	??_animation4,f,c
  6024  001BC6  50F4               	movf	prodh,w,c
  6025  001BC8  2244               	addwfc	??_animation4+1,f,c
  6026  001BCA  5047               	movf	animation4@j,w,c
  6027  001BCC  0D01               	mullw	1
  6028  001BCE  50F3               	movf	prodl,w,c
  6029  001BD0  2643               	addwf	??_animation4,f,c
  6030  001BD2  50F4               	movf	prodh,w,c
  6031  001BD4  2244               	addwfc	??_animation4+1,f,c
  6032  001BD6  C043  FFF6         	movff	??_animation4,tblptrl
  6033  001BDA  C044  FFF7         	movff	??_animation4+1,tblptrh
  6034  001BDE                     	if	0	;tblptru may be non-zero
  6035  001BDE                     	endif
  6036  001BDE                     	if	0	;tblptru may be non-zero
  6037  001BDE                     	endif
  6038  001BDE  0008               	tblrd		*
  6039  001BE0  50F5               	movf	tablat,w,c
  6040  001BE2  0A64               	xorlw	100
  6041  001BE4  B4D8               	btfsc	status,2,c
  6042  001BE6  D01A               	goto	u8380
  6043                           
  6044                           ;newmain.c: 958: clr_led(show4_1[i][j]);
  6045  001BE8  5046               	movf	animation4@i,w,c
  6046  001BEA  0D08               	mullw	8
  6047  001BEC  0EB9               	movlw	low _show4_1
  6048  001BEE  6E43               	movwf	??_animation4& (0+255),c
  6049  001BF0  0E7E               	movlw	high _show4_1
  6050  001BF2  6E44               	movwf	(??_animation4+1)& (0+255),c
  6051  001BF4  50F3               	movf	prodl,w,c
  6052  001BF6  2643               	addwf	??_animation4,f,c
  6053  001BF8  50F4               	movf	prodh,w,c
  6054  001BFA  2244               	addwfc	??_animation4+1,f,c
  6055  001BFC  5047               	movf	animation4@j,w,c
  6056  001BFE  0D01               	mullw	1
  6057  001C00  50F3               	movf	prodl,w,c
  6058  001C02  2643               	addwf	??_animation4,f,c
  6059  001C04  50F4               	movf	prodh,w,c
  6060  001C06  2244               	addwfc	??_animation4+1,f,c
  6061  001C08  C043  FFF6         	movff	??_animation4,tblptrl
  6062  001C0C  C044  FFF7         	movff	??_animation4+1,tblptrh
  6063  001C10                     	if	0	;tblptru may be non-zero
  6064  001C10                     	endif
  6065  001C10                     	if	0	;tblptru may be non-zero
  6066  001C10                     	endif
  6067  001C10  0008               	tblrd		*
  6068  001C12  50F5               	movf	tablat,w,c
  6069  001C14  ECC8  F016         	call	_clr_led
  6070                           
  6071                           ;newmain.c: 959: else
  6072                           ;newmain.c: 960: break;
  6073  001C18  2A47               	incf	animation4@j,f,c
  6074  001C1A  D7C9               	goto	l5957
  6075  001C1C                     u8380:
  6076                           
  6077                           ;newmain.c: 961: }
  6078                           ;newmain.c: 962: write_display();
  6079  001C1C  EC2E  F016         	call	_write_display	;wreg free
  6080  001C20  2A46               	incf	animation4@i,f,c
  6081  001C22  D77C               	goto	l5933
  6082  001C24                     l433:
  6083  001C24  0445               	decf	animation4@m,w,c
  6084  001C26  A4D8               	btfss	status,2,c
  6085  001C28  D086               	goto	l445
  6086                           
  6087                           ;newmain.c: 965: for (i = 0; i < 6; i++) {
  6088  001C2A  0E00               	movlw	0
  6089  001C2C  6E46               	movwf	animation4@i,c
  6090  001C2E                     l5979:
  6091  001C2E  0E05               	movlw	5
  6092  001C30  6446               	cpfsgt	animation4@i,c
  6093  001C32  D001               	goto	l446
  6094  001C34  D194               	goto	u8660
  6095  001C36                     l446:
  6096                           
  6097                           ;newmain.c: 966: for (j = 0; j < 8; j++) {
  6098  001C36  0E00               	movlw	0
  6099  001C38  6E47               	movwf	animation4@j,c
  6100  001C3A                     l5985:
  6101  001C3A  0E07               	movlw	7
  6102  001C3C  6447               	cpfsgt	animation4@j,c
  6103  001C3E  D001               	goto	l448
  6104  001C40  D033               	goto	u8440
  6105  001C42                     l448:
  6106                           
  6107                           ;newmain.c: 967: if (show4_2[i][j] != 100)
  6108  001C42  5046               	movf	animation4@i,w,c
  6109  001C44  0D08               	mullw	8
  6110  001C46  0E09               	movlw	low _show4_2
  6111  001C48  6E43               	movwf	??_animation4& (0+255),c
  6112  001C4A  0E7D               	movlw	high _show4_2
  6113  001C4C  6E44               	movwf	(??_animation4+1)& (0+255),c
  6114  001C4E  50F3               	movf	prodl,w,c
  6115  001C50  2643               	addwf	??_animation4,f,c
  6116  001C52  50F4               	movf	prodh,w,c
  6117  001C54  2244               	addwfc	??_animation4+1,f,c
  6118  001C56  5047               	movf	animation4@j,w,c
  6119  001C58  0D01               	mullw	1
  6120  001C5A  50F3               	movf	prodl,w,c
  6121  001C5C  2643               	addwf	??_animation4,f,c
  6122  001C5E  50F4               	movf	prodh,w,c
  6123  001C60  2244               	addwfc	??_animation4+1,f,c
  6124  001C62  C043  FFF6         	movff	??_animation4,tblptrl
  6125  001C66  C044  FFF7         	movff	??_animation4+1,tblptrh
  6126  001C6A                     	if	0	;tblptru may be non-zero
  6127  001C6A                     	endif
  6128  001C6A                     	if	0	;tblptru may be non-zero
  6129  001C6A                     	endif
  6130  001C6A  0008               	tblrd		*
  6131  001C6C  50F5               	movf	tablat,w,c
  6132  001C6E  0A64               	xorlw	100
  6133  001C70  B4D8               	btfsc	status,2,c
  6134  001C72  D01A               	goto	u8440
  6135                           
  6136                           ;newmain.c: 968: set_led(show4_2[i][j]);
  6137  001C74  5046               	movf	animation4@i,w,c
  6138  001C76  0D08               	mullw	8
  6139  001C78  0E09               	movlw	low _show4_2
  6140  001C7A  6E43               	movwf	??_animation4& (0+255),c
  6141  001C7C  0E7D               	movlw	high _show4_2
  6142  001C7E  6E44               	movwf	(??_animation4+1)& (0+255),c
  6143  001C80  50F3               	movf	prodl,w,c
  6144  001C82  2643               	addwf	??_animation4,f,c
  6145  001C84  50F4               	movf	prodh,w,c
  6146  001C86  2244               	addwfc	??_animation4+1,f,c
  6147  001C88  5047               	movf	animation4@j,w,c
  6148  001C8A  0D01               	mullw	1
  6149  001C8C  50F3               	movf	prodl,w,c
  6150  001C8E  2643               	addwf	??_animation4,f,c
  6151  001C90  50F4               	movf	prodh,w,c
  6152  001C92  2244               	addwfc	??_animation4+1,f,c
  6153  001C94  C043  FFF6         	movff	??_animation4,tblptrl
  6154  001C98  C044  FFF7         	movff	??_animation4+1,tblptrh
  6155  001C9C                     	if	0	;tblptru may be non-zero
  6156  001C9C                     	endif
  6157  001C9C                     	if	0	;tblptru may be non-zero
  6158  001C9C                     	endif
  6159  001C9C  0008               	tblrd		*
  6160  001C9E  50F5               	movf	tablat,w,c
  6161  001CA0  EC23  F017         	call	_set_led
  6162                           
  6163                           ;newmain.c: 969: else
  6164                           ;newmain.c: 970: break;
  6165  001CA4  2A47               	incf	animation4@j,f,c
  6166  001CA6  D7C9               	goto	l5985
  6167  001CA8                     u8440:
  6168                           
  6169                           ;newmain.c: 971: }
  6170                           ;newmain.c: 972: write_display();
  6171  001CA8  EC2E  F016         	call	_write_display	;wreg free
  6172                           
  6173                           ;newmain.c: 973: _delay((unsigned long)((5)*(4000000/4000.0)));
  6174  001CAC  0E07               	movlw	7
  6175  001CAE  6E43               	movwf	??_animation4& (0+255),c
  6176  001CB0  0E7D               	movlw	125
  6177  001CB2                     u10197:
  6178  001CB2  2EE8               	decfsz	wreg,f,c
  6179  001CB4  D7FE               	bra	u10197
  6180  001CB6  2E43               	decfsz	??_animation4& (0+255),f,c
  6181  001CB8  D7FC               	bra	u10197
  6182  001CBA  F000               	nop	
  6183                           
  6184                           ;newmain.c: 975: for (j = 0; j < 8; j++) {
  6185  001CBC  0E00               	movlw	0
  6186  001CBE  6E47               	movwf	animation4@j,c
  6187  001CC0                     l6003:
  6188  001CC0  0E07               	movlw	7
  6189  001CC2  6447               	cpfsgt	animation4@j,c
  6190  001CC4  D001               	goto	l452
  6191  001CC6  D033               	goto	u8470
  6192  001CC8                     l452:
  6193                           
  6194                           ;newmain.c: 976: if (show4_2[i][j] != 100)
  6195  001CC8  5046               	movf	animation4@i,w,c
  6196  001CCA  0D08               	mullw	8
  6197  001CCC  0E09               	movlw	low _show4_2
  6198  001CCE  6E43               	movwf	??_animation4& (0+255),c
  6199  001CD0  0E7D               	movlw	high _show4_2
  6200  001CD2  6E44               	movwf	(??_animation4+1)& (0+255),c
  6201  001CD4  50F3               	movf	prodl,w,c
  6202  001CD6  2643               	addwf	??_animation4,f,c
  6203  001CD8  50F4               	movf	prodh,w,c
  6204  001CDA  2244               	addwfc	??_animation4+1,f,c
  6205  001CDC  5047               	movf	animation4@j,w,c
  6206  001CDE  0D01               	mullw	1
  6207  001CE0  50F3               	movf	prodl,w,c
  6208  001CE2  2643               	addwf	??_animation4,f,c
  6209  001CE4  50F4               	movf	prodh,w,c
  6210  001CE6  2244               	addwfc	??_animation4+1,f,c
  6211  001CE8  C043  FFF6         	movff	??_animation4,tblptrl
  6212  001CEC  C044  FFF7         	movff	??_animation4+1,tblptrh
  6213  001CF0                     	if	0	;tblptru may be non-zero
  6214  001CF0                     	endif
  6215  001CF0                     	if	0	;tblptru may be non-zero
  6216  001CF0                     	endif
  6217  001CF0  0008               	tblrd		*
  6218  001CF2  50F5               	movf	tablat,w,c
  6219  001CF4  0A64               	xorlw	100
  6220  001CF6  B4D8               	btfsc	status,2,c
  6221  001CF8  D01A               	goto	u8470
  6222                           
  6223                           ;newmain.c: 977: clr_led(show4_2[i][j]);
  6224  001CFA  5046               	movf	animation4@i,w,c
  6225  001CFC  0D08               	mullw	8
  6226  001CFE  0E09               	movlw	low _show4_2
  6227  001D00  6E43               	movwf	??_animation4& (0+255),c
  6228  001D02  0E7D               	movlw	high _show4_2
  6229  001D04  6E44               	movwf	(??_animation4+1)& (0+255),c
  6230  001D06  50F3               	movf	prodl,w,c
  6231  001D08  2643               	addwf	??_animation4,f,c
  6232  001D0A  50F4               	movf	prodh,w,c
  6233  001D0C  2244               	addwfc	??_animation4+1,f,c
  6234  001D0E  5047               	movf	animation4@j,w,c
  6235  001D10  0D01               	mullw	1
  6236  001D12  50F3               	movf	prodl,w,c
  6237  001D14  2643               	addwf	??_animation4,f,c
  6238  001D16  50F4               	movf	prodh,w,c
  6239  001D18  2244               	addwfc	??_animation4+1,f,c
  6240  001D1A  C043  FFF6         	movff	??_animation4,tblptrl
  6241  001D1E  C044  FFF7         	movff	??_animation4+1,tblptrh
  6242  001D22                     	if	0	;tblptru may be non-zero
  6243  001D22                     	endif
  6244  001D22                     	if	0	;tblptru may be non-zero
  6245  001D22                     	endif
  6246  001D22  0008               	tblrd		*
  6247  001D24  50F5               	movf	tablat,w,c
  6248  001D26  ECC8  F016         	call	_clr_led
  6249                           
  6250                           ;newmain.c: 978: else
  6251                           ;newmain.c: 979: break;
  6252  001D2A  2A47               	incf	animation4@j,f,c
  6253  001D2C  D7C9               	goto	l6003
  6254  001D2E                     u8470:
  6255                           
  6256                           ;newmain.c: 980: }
  6257                           ;newmain.c: 981: write_display();
  6258  001D2E  EC2E  F016         	call	_write_display	;wreg free
  6259  001D32  2A46               	incf	animation4@i,f,c
  6260  001D34  D77C               	goto	l5979
  6261  001D36                     l445:
  6262  001D36  0E02               	movlw	2
  6263  001D38  1845               	xorwf	animation4@m,w,c
  6264  001D3A  A4D8               	btfss	status,2,c
  6265  001D3C  D086               	goto	l457
  6266                           
  6267                           ;newmain.c: 984: for (i = 0; i < 6; i++) {
  6268  001D3E  0E00               	movlw	0
  6269  001D40  6E46               	movwf	animation4@i,c
  6270  001D42                     l6025:
  6271  001D42  0E05               	movlw	5
  6272  001D44  6446               	cpfsgt	animation4@i,c
  6273  001D46  D001               	goto	l458
  6274  001D48  D10A               	goto	u8660
  6275  001D4A                     l458:
  6276                           
  6277                           ;newmain.c: 985: for (j = 0; j < 8; j++) {
  6278  001D4A  0E00               	movlw	0
  6279  001D4C  6E47               	movwf	animation4@j,c
  6280  001D4E                     l6031:
  6281  001D4E  0E07               	movlw	7
  6282  001D50  6447               	cpfsgt	animation4@j,c
  6283  001D52  D001               	goto	l460
  6284  001D54  D033               	goto	u8530
  6285  001D56                     l460:
  6286                           
  6287                           ;newmain.c: 986: if (show4_2[i][j] != 100)
  6288  001D56  5046               	movf	animation4@i,w,c
  6289  001D58  0D08               	mullw	8
  6290  001D5A  0E09               	movlw	low _show4_2
  6291  001D5C  6E43               	movwf	??_animation4& (0+255),c
  6292  001D5E  0E7D               	movlw	high _show4_2
  6293  001D60  6E44               	movwf	(??_animation4+1)& (0+255),c
  6294  001D62  50F3               	movf	prodl,w,c
  6295  001D64  2643               	addwf	??_animation4,f,c
  6296  001D66  50F4               	movf	prodh,w,c
  6297  001D68  2244               	addwfc	??_animation4+1,f,c
  6298  001D6A  5047               	movf	animation4@j,w,c
  6299  001D6C  0D01               	mullw	1
  6300  001D6E  50F3               	movf	prodl,w,c
  6301  001D70  2643               	addwf	??_animation4,f,c
  6302  001D72  50F4               	movf	prodh,w,c
  6303  001D74  2244               	addwfc	??_animation4+1,f,c
  6304  001D76  C043  FFF6         	movff	??_animation4,tblptrl
  6305  001D7A  C044  FFF7         	movff	??_animation4+1,tblptrh
  6306  001D7E                     	if	0	;tblptru may be non-zero
  6307  001D7E                     	endif
  6308  001D7E                     	if	0	;tblptru may be non-zero
  6309  001D7E                     	endif
  6310  001D7E  0008               	tblrd		*
  6311  001D80  50F5               	movf	tablat,w,c
  6312  001D82  0A64               	xorlw	100
  6313  001D84  B4D8               	btfsc	status,2,c
  6314  001D86  D01A               	goto	u8530
  6315                           
  6316                           ;newmain.c: 987: set_led(show4_3[i][j]);
  6317  001D88  5046               	movf	animation4@i,w,c
  6318  001D8A  0D08               	mullw	8
  6319  001D8C  0EA9               	movlw	low _show4_3
  6320  001D8E  6E43               	movwf	??_animation4& (0+255),c
  6321  001D90  0E7C               	movlw	high _show4_3
  6322  001D92  6E44               	movwf	(??_animation4+1)& (0+255),c
  6323  001D94  50F3               	movf	prodl,w,c
  6324  001D96  2643               	addwf	??_animation4,f,c
  6325  001D98  50F4               	movf	prodh,w,c
  6326  001D9A  2244               	addwfc	??_animation4+1,f,c
  6327  001D9C  5047               	movf	animation4@j,w,c
  6328  001D9E  0D01               	mullw	1
  6329  001DA0  50F3               	movf	prodl,w,c
  6330  001DA2  2643               	addwf	??_animation4,f,c
  6331  001DA4  50F4               	movf	prodh,w,c
  6332  001DA6  2244               	addwfc	??_animation4+1,f,c
  6333  001DA8  C043  FFF6         	movff	??_animation4,tblptrl
  6334  001DAC  C044  FFF7         	movff	??_animation4+1,tblptrh
  6335  001DB0                     	if	0	;tblptru may be non-zero
  6336  001DB0                     	endif
  6337  001DB0                     	if	0	;tblptru may be non-zero
  6338  001DB0                     	endif
  6339  001DB0  0008               	tblrd		*
  6340  001DB2  50F5               	movf	tablat,w,c
  6341  001DB4  EC23  F017         	call	_set_led
  6342                           
  6343                           ;newmain.c: 988: else
  6344                           ;newmain.c: 989: break;
  6345  001DB8  2A47               	incf	animation4@j,f,c
  6346  001DBA  D7C9               	goto	l6031
  6347  001DBC                     u8530:
  6348                           
  6349                           ;newmain.c: 990: }
  6350                           ;newmain.c: 991: write_display();
  6351  001DBC  EC2E  F016         	call	_write_display	;wreg free
  6352                           
  6353                           ;newmain.c: 992: _delay((unsigned long)((5)*(4000000/4000.0)));
  6354  001DC0  0E07               	movlw	7
  6355  001DC2  6E43               	movwf	??_animation4& (0+255),c
  6356  001DC4  0E7D               	movlw	125
  6357  001DC6                     u10207:
  6358  001DC6  2EE8               	decfsz	wreg,f,c
  6359  001DC8  D7FE               	bra	u10207
  6360  001DCA  2E43               	decfsz	??_animation4& (0+255),f,c
  6361  001DCC  D7FC               	bra	u10207
  6362  001DCE  F000               	nop	
  6363                           
  6364                           ;newmain.c: 994: for (j = 0; j < 8; j++) {
  6365  001DD0  0E00               	movlw	0
  6366  001DD2  6E47               	movwf	animation4@j,c
  6367  001DD4                     l6049:
  6368  001DD4  0E07               	movlw	7
  6369  001DD6  6447               	cpfsgt	animation4@j,c
  6370  001DD8  D001               	goto	l464
  6371  001DDA  D033               	goto	u8560
  6372  001DDC                     l464:
  6373                           
  6374                           ;newmain.c: 995: if (show4_2[i][j] != 100)
  6375  001DDC  5046               	movf	animation4@i,w,c
  6376  001DDE  0D08               	mullw	8
  6377  001DE0  0E09               	movlw	low _show4_2
  6378  001DE2  6E43               	movwf	??_animation4& (0+255),c
  6379  001DE4  0E7D               	movlw	high _show4_2
  6380  001DE6  6E44               	movwf	(??_animation4+1)& (0+255),c
  6381  001DE8  50F3               	movf	prodl,w,c
  6382  001DEA  2643               	addwf	??_animation4,f,c
  6383  001DEC  50F4               	movf	prodh,w,c
  6384  001DEE  2244               	addwfc	??_animation4+1,f,c
  6385  001DF0  5047               	movf	animation4@j,w,c
  6386  001DF2  0D01               	mullw	1
  6387  001DF4  50F3               	movf	prodl,w,c
  6388  001DF6  2643               	addwf	??_animation4,f,c
  6389  001DF8  50F4               	movf	prodh,w,c
  6390  001DFA  2244               	addwfc	??_animation4+1,f,c
  6391  001DFC  C043  FFF6         	movff	??_animation4,tblptrl
  6392  001E00  C044  FFF7         	movff	??_animation4+1,tblptrh
  6393  001E04                     	if	0	;tblptru may be non-zero
  6394  001E04                     	endif
  6395  001E04                     	if	0	;tblptru may be non-zero
  6396  001E04                     	endif
  6397  001E04  0008               	tblrd		*
  6398  001E06  50F5               	movf	tablat,w,c
  6399  001E08  0A64               	xorlw	100
  6400  001E0A  B4D8               	btfsc	status,2,c
  6401  001E0C  D01A               	goto	u8560
  6402                           
  6403                           ;newmain.c: 996: clr_led(show4_3[i][j]);
  6404  001E0E  5046               	movf	animation4@i,w,c
  6405  001E10  0D08               	mullw	8
  6406  001E12  0EA9               	movlw	low _show4_3
  6407  001E14  6E43               	movwf	??_animation4& (0+255),c
  6408  001E16  0E7C               	movlw	high _show4_3
  6409  001E18  6E44               	movwf	(??_animation4+1)& (0+255),c
  6410  001E1A  50F3               	movf	prodl,w,c
  6411  001E1C  2643               	addwf	??_animation4,f,c
  6412  001E1E  50F4               	movf	prodh,w,c
  6413  001E20  2244               	addwfc	??_animation4+1,f,c
  6414  001E22  5047               	movf	animation4@j,w,c
  6415  001E24  0D01               	mullw	1
  6416  001E26  50F3               	movf	prodl,w,c
  6417  001E28  2643               	addwf	??_animation4,f,c
  6418  001E2A  50F4               	movf	prodh,w,c
  6419  001E2C  2244               	addwfc	??_animation4+1,f,c
  6420  001E2E  C043  FFF6         	movff	??_animation4,tblptrl
  6421  001E32  C044  FFF7         	movff	??_animation4+1,tblptrh
  6422  001E36                     	if	0	;tblptru may be non-zero
  6423  001E36                     	endif
  6424  001E36                     	if	0	;tblptru may be non-zero
  6425  001E36                     	endif
  6426  001E36  0008               	tblrd		*
  6427  001E38  50F5               	movf	tablat,w,c
  6428  001E3A  ECC8  F016         	call	_clr_led
  6429                           
  6430                           ;newmain.c: 997: else
  6431                           ;newmain.c: 998: break;
  6432  001E3E  2A47               	incf	animation4@j,f,c
  6433  001E40  D7C9               	goto	l6049
  6434  001E42                     u8560:
  6435                           
  6436                           ;newmain.c: 999: }
  6437                           ;newmain.c: 1000: write_display();
  6438  001E42  EC2E  F016         	call	_write_display	;wreg free
  6439  001E46  2A46               	incf	animation4@i,f,c
  6440  001E48  D77C               	goto	l6025
  6441  001E4A                     l457:
  6442  001E4A  0E03               	movlw	3
  6443  001E4C  1845               	xorwf	animation4@m,w,c
  6444  001E4E  A4D8               	btfss	status,2,c
  6445  001E50  D086               	goto	u8660
  6446                           
  6447                           ;newmain.c: 1004: for (i = 0; i < 8; i++) {
  6448  001E52  0E00               	movlw	0
  6449  001E54  6E46               	movwf	animation4@i,c
  6450  001E56                     l6071:
  6451  001E56  0E07               	movlw	7
  6452  001E58  6446               	cpfsgt	animation4@i,c
  6453  001E5A  D001               	goto	l470
  6454  001E5C  D080               	goto	u8660
  6455  001E5E                     l470:
  6456                           
  6457                           ;newmain.c: 1005: for (j = 0; j < 8; j++) {
  6458  001E5E  0E00               	movlw	0
  6459  001E60  6E47               	movwf	animation4@j,c
  6460  001E62                     l6077:
  6461  001E62  0E07               	movlw	7
  6462  001E64  6447               	cpfsgt	animation4@j,c
  6463  001E66  D001               	goto	l472
  6464  001E68  D033               	goto	u8620
  6465  001E6A                     l472:
  6466                           
  6467                           ;newmain.c: 1006: if (show4_3[i][j] != 100)
  6468  001E6A  5046               	movf	animation4@i,w,c
  6469  001E6C  0D08               	mullw	8
  6470  001E6E  0EA9               	movlw	low _show4_3
  6471  001E70  6E43               	movwf	??_animation4& (0+255),c
  6472  001E72  0E7C               	movlw	high _show4_3
  6473  001E74  6E44               	movwf	(??_animation4+1)& (0+255),c
  6474  001E76  50F3               	movf	prodl,w,c
  6475  001E78  2643               	addwf	??_animation4,f,c
  6476  001E7A  50F4               	movf	prodh,w,c
  6477  001E7C  2244               	addwfc	??_animation4+1,f,c
  6478  001E7E  5047               	movf	animation4@j,w,c
  6479  001E80  0D01               	mullw	1
  6480  001E82  50F3               	movf	prodl,w,c
  6481  001E84  2643               	addwf	??_animation4,f,c
  6482  001E86  50F4               	movf	prodh,w,c
  6483  001E88  2244               	addwfc	??_animation4+1,f,c
  6484  001E8A  C043  FFF6         	movff	??_animation4,tblptrl
  6485  001E8E  C044  FFF7         	movff	??_animation4+1,tblptrh
  6486  001E92                     	if	0	;tblptru may be non-zero
  6487  001E92                     	endif
  6488  001E92                     	if	0	;tblptru may be non-zero
  6489  001E92                     	endif
  6490  001E92  0008               	tblrd		*
  6491  001E94  50F5               	movf	tablat,w,c
  6492  001E96  0A64               	xorlw	100
  6493  001E98  B4D8               	btfsc	status,2,c
  6494  001E9A  D01A               	goto	u8620
  6495                           
  6496                           ;newmain.c: 1007: set_led(show4_4[i][j]);
  6497  001E9C  5046               	movf	animation4@i,w,c
  6498  001E9E  0D08               	mullw	8
  6499  001EA0  0E79               	movlw	low _show4_4
  6500  001EA2  6E43               	movwf	??_animation4& (0+255),c
  6501  001EA4  0E7E               	movlw	high _show4_4
  6502  001EA6  6E44               	movwf	(??_animation4+1)& (0+255),c
  6503  001EA8  50F3               	movf	prodl,w,c
  6504  001EAA  2643               	addwf	??_animation4,f,c
  6505  001EAC  50F4               	movf	prodh,w,c
  6506  001EAE  2244               	addwfc	??_animation4+1,f,c
  6507  001EB0  5047               	movf	animation4@j,w,c
  6508  001EB2  0D01               	mullw	1
  6509  001EB4  50F3               	movf	prodl,w,c
  6510  001EB6  2643               	addwf	??_animation4,f,c
  6511  001EB8  50F4               	movf	prodh,w,c
  6512  001EBA  2244               	addwfc	??_animation4+1,f,c
  6513  001EBC  C043  FFF6         	movff	??_animation4,tblptrl
  6514  001EC0  C044  FFF7         	movff	??_animation4+1,tblptrh
  6515  001EC4                     	if	0	;tblptru may be non-zero
  6516  001EC4                     	endif
  6517  001EC4                     	if	0	;tblptru may be non-zero
  6518  001EC4                     	endif
  6519  001EC4  0008               	tblrd		*
  6520  001EC6  50F5               	movf	tablat,w,c
  6521  001EC8  EC23  F017         	call	_set_led
  6522                           
  6523                           ;newmain.c: 1008: else
  6524                           ;newmain.c: 1009: break;
  6525  001ECC  2A47               	incf	animation4@j,f,c
  6526  001ECE  D7C9               	goto	l6077
  6527  001ED0                     u8620:
  6528                           
  6529                           ;newmain.c: 1010: }
  6530                           ;newmain.c: 1011: write_display();
  6531  001ED0  EC2E  F016         	call	_write_display	;wreg free
  6532                           
  6533                           ;newmain.c: 1012: _delay((unsigned long)((5)*(4000000/4000.0)));
  6534  001ED4  0E07               	movlw	7
  6535  001ED6  6E43               	movwf	??_animation4& (0+255),c
  6536  001ED8  0E7D               	movlw	125
  6537  001EDA                     u10217:
  6538  001EDA  2EE8               	decfsz	wreg,f,c
  6539  001EDC  D7FE               	bra	u10217
  6540  001EDE  2E43               	decfsz	??_animation4& (0+255),f,c
  6541  001EE0  D7FC               	bra	u10217
  6542  001EE2  F000               	nop	
  6543                           
  6544                           ;newmain.c: 1014: for (j = 0; j < 8; j++) {
  6545  001EE4  0E00               	movlw	0
  6546  001EE6  6E47               	movwf	animation4@j,c
  6547  001EE8                     l6095:
  6548  001EE8  0E07               	movlw	7
  6549  001EEA  6447               	cpfsgt	animation4@j,c
  6550  001EEC  D001               	goto	l476
  6551  001EEE  D033               	goto	u8650
  6552  001EF0                     l476:
  6553                           
  6554                           ;newmain.c: 1015: if (show4_3[i][j] != 100)
  6555  001EF0  5046               	movf	animation4@i,w,c
  6556  001EF2  0D08               	mullw	8
  6557  001EF4  0EA9               	movlw	low _show4_3
  6558  001EF6  6E43               	movwf	??_animation4& (0+255),c
  6559  001EF8  0E7C               	movlw	high _show4_3
  6560  001EFA  6E44               	movwf	(??_animation4+1)& (0+255),c
  6561  001EFC  50F3               	movf	prodl,w,c
  6562  001EFE  2643               	addwf	??_animation4,f,c
  6563  001F00  50F4               	movf	prodh,w,c
  6564  001F02  2244               	addwfc	??_animation4+1,f,c
  6565  001F04  5047               	movf	animation4@j,w,c
  6566  001F06  0D01               	mullw	1
  6567  001F08  50F3               	movf	prodl,w,c
  6568  001F0A  2643               	addwf	??_animation4,f,c
  6569  001F0C  50F4               	movf	prodh,w,c
  6570  001F0E  2244               	addwfc	??_animation4+1,f,c
  6571  001F10  C043  FFF6         	movff	??_animation4,tblptrl
  6572  001F14  C044  FFF7         	movff	??_animation4+1,tblptrh
  6573  001F18                     	if	0	;tblptru may be non-zero
  6574  001F18                     	endif
  6575  001F18                     	if	0	;tblptru may be non-zero
  6576  001F18                     	endif
  6577  001F18  0008               	tblrd		*
  6578  001F1A  50F5               	movf	tablat,w,c
  6579  001F1C  0A64               	xorlw	100
  6580  001F1E  B4D8               	btfsc	status,2,c
  6581  001F20  D01A               	goto	u8650
  6582                           
  6583                           ;newmain.c: 1016: clr_led(show4_4[i][j]);
  6584  001F22  5046               	movf	animation4@i,w,c
  6585  001F24  0D08               	mullw	8
  6586  001F26  0E79               	movlw	low _show4_4
  6587  001F28  6E43               	movwf	??_animation4& (0+255),c
  6588  001F2A  0E7E               	movlw	high _show4_4
  6589  001F2C  6E44               	movwf	(??_animation4+1)& (0+255),c
  6590  001F2E  50F3               	movf	prodl,w,c
  6591  001F30  2643               	addwf	??_animation4,f,c
  6592  001F32  50F4               	movf	prodh,w,c
  6593  001F34  2244               	addwfc	??_animation4+1,f,c
  6594  001F36  5047               	movf	animation4@j,w,c
  6595  001F38  0D01               	mullw	1
  6596  001F3A  50F3               	movf	prodl,w,c
  6597  001F3C  2643               	addwf	??_animation4,f,c
  6598  001F3E  50F4               	movf	prodh,w,c
  6599  001F40  2244               	addwfc	??_animation4+1,f,c
  6600  001F42  C043  FFF6         	movff	??_animation4,tblptrl
  6601  001F46  C044  FFF7         	movff	??_animation4+1,tblptrh
  6602  001F4A                     	if	0	;tblptru may be non-zero
  6603  001F4A                     	endif
  6604  001F4A                     	if	0	;tblptru may be non-zero
  6605  001F4A                     	endif
  6606  001F4A  0008               	tblrd		*
  6607  001F4C  50F5               	movf	tablat,w,c
  6608  001F4E  ECC8  F016         	call	_clr_led
  6609                           
  6610                           ;newmain.c: 1017: else
  6611                           ;newmain.c: 1018: break;
  6612  001F52  2A47               	incf	animation4@j,f,c
  6613  001F54  D7C9               	goto	l6095
  6614  001F56                     u8650:
  6615                           
  6616                           ;newmain.c: 1019: }
  6617                           ;newmain.c: 1020: write_display();
  6618  001F56  EC2E  F016         	call	_write_display	;wreg free
  6619  001F5A  2A46               	incf	animation4@i,f,c
  6620  001F5C  D77C               	goto	l6071
  6621  001F5E                     u8660:
  6622                           
  6623                           ;newmain.c: 1021: }
  6624                           ;newmain.c: 1022: }
  6625                           ;newmain.c: 1023: clr_led(h);
  6626  001F5E  5042               	movf	animation4@h,w,c
  6627  001F60  ECC8  F016         	call	_clr_led
  6628                           
  6629                           ;newmain.c: 1024: write_display();
  6630  001F64  EC2E  F016         	call	_write_display	;wreg free
  6631  001F68  0012               	return		;funcret
  6632  001F6A                     __end_of_animation4:
  6633                           	opt stack 0
  6634                           tblptru	equ	0xFF8
  6635                           tblptrh	equ	0xFF7
  6636                           tblptrl	equ	0xFF6
  6637                           tablat	equ	0xFF5
  6638                           prodh	equ	0xFF4
  6639                           prodl	equ	0xFF3
  6640                           intcon	equ	0xFF2
  6641                           intcon2	equ	0xFF1
  6642                           postinc0	equ	0xFEE
  6643                           wreg	equ	0xFE8
  6644                           indf2	equ	0xFDF
  6645                           postinc2	equ	0xFDE
  6646                           postdec2	equ	0xFDD
  6647                           fsr2h	equ	0xFDA
  6648                           fsr2l	equ	0xFD9
  6649                           status	equ	0xFD8
  6650                           
  6651 ;; *************** function _animation3 *****************
  6652 ;; Defined at:
  6653 ;;		line 845 in file "newmain.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  m               1    wreg     unsigned char 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  m               1   69[COMRAM] unsigned char 
  6658 ;;  j               2   72[COMRAM] int 
  6659 ;;  i               2   70[COMRAM] int 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  1    wreg      void 
  6662 ;; Registers used:
  6663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6669 ;;      Params:         0       0       0       0       0       0       0
  6670 ;;      Locals:         5       0       0       0       0       0       0
  6671 ;;      Temps:          4       0       0       0       0       0       0
  6672 ;;      Totals:         9       0       0       0       0       0       0
  6673 ;;Total ram usage:        9 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    7
  6676 ;; This function calls:
  6677 ;;		___wmul
  6678 ;;		_clr_led
  6679 ;;		_set_led
  6680 ;;		_write_display
  6681 ;; This function is called by:
  6682 ;;		_main
  6683 ;; This function uses a non-reentrant model
  6684 ;;
  6685                           
  6686                           	psect	text7
  6687  000012                     __ptext7:
  6688                           	opt stack 0
  6689  000012                     _animation3:
  6690                           	opt stack 23
  6691                           
  6692                           ;incstack = 0
  6693                           ;animation3@m stored from wreg
  6694  000012  6E46               	movwf	animation3@m,c
  6695                           
  6696                           ;newmain.c: 846: int i = 0, j = 0;
  6697  000014  0E00               	movlw	0
  6698  000016  6E48               	movwf	animation3@i+1,c
  6699  000018  0E00               	movlw	0
  6700  00001A  6E47               	movwf	animation3@i,c
  6701  00001C  0E00               	movlw	0
  6702  00001E  6E4A               	movwf	animation3@j+1,c
  6703  000020  0E00               	movlw	0
  6704  000022  6E49               	movwf	animation3@j,c
  6705                           
  6706                           ;newmain.c: 847: if (m == 0) {
  6707  000024  5046               	movf	animation3@m,w,c
  6708  000026  A4D8               	btfss	status,2,c
  6709  000028  D0C6               	goto	l373
  6710                           
  6711                           ;newmain.c: 848: for (i = 0; i < 10; i++) {
  6712  00002A  0E00               	movlw	0
  6713  00002C  6E48               	movwf	animation3@i+1,c
  6714  00002E  0E00               	movlw	0
  6715  000030  6E47               	movwf	animation3@i,c
  6716  000032  BE48               	btfsc	animation3@i+1,7,c
  6717  000034  D008               	goto	l374
  6718  000036  5048               	movf	animation3@i+1,w,c
  6719  000038  E105               	bnz	u7880
  6720  00003A  0E0A               	movlw	10
  6721  00003C  5C47               	subwf	animation3@i,w,c
  6722  00003E  B0D8               	btfsc	status,0,c
  6723  000040  0012               	return	
  6724  000042  D001               	goto	l374
  6725  000044                     u7880:
  6726  000044  0012               	return	
  6727  000046                     l374:
  6728                           
  6729                           ;newmain.c: 849: for (j = 0; j < 8; j++) {
  6730  000046  0E00               	movlw	0
  6731  000048  6E4A               	movwf	animation3@j+1,c
  6732  00004A  0E00               	movlw	0
  6733  00004C  6E49               	movwf	animation3@j,c
  6734  00004E                     l5705:
  6735  00004E  BE4A               	btfsc	animation3@j+1,7,c
  6736  000050  D006               	goto	l376
  6737  000052  504A               	movf	animation3@j+1,w,c
  6738  000054  E14A               	bnz	l5717
  6739  000056  0E08               	movlw	8
  6740  000058  5C49               	subwf	animation3@j,w,c
  6741  00005A  B0D8               	btfsc	status,0,c
  6742  00005C  D046               	goto	u7910
  6743  00005E                     l376:
  6744                           
  6745                           ;newmain.c: 850: if (show3_1[i][j] != 100)
  6746  00005E  C047  F042         	movff	animation3@i,??_animation3
  6747  000062  C048  F043         	movff	animation3@i+1,??_animation3+1
  6748  000066  90D8               	bcf	status,0,c
  6749  000068  3642               	rlcf	??_animation3,f,c
  6750  00006A  3643               	rlcf	??_animation3+1,f,c
  6751  00006C  90D8               	bcf	status,0,c
  6752  00006E  3642               	rlcf	??_animation3,f,c
  6753  000070  3643               	rlcf	??_animation3+1,f,c
  6754  000072  90D8               	bcf	status,0,c
  6755  000074  3642               	rlcf	??_animation3,f,c
  6756  000076  3643               	rlcf	??_animation3+1,f,c
  6757  000078  0E69               	movlw	low _show3_1
  6758  00007A  6E44               	movwf	(??_animation3+2)& (0+255),c
  6759  00007C  0E7D               	movlw	high _show3_1
  6760  00007E  6E45               	movwf	(??_animation3+3)& (0+255),c
  6761  000080  5042               	movf	??_animation3,w,c
  6762  000082  2644               	addwf	??_animation3+2,f,c
  6763  000084  5043               	movf	??_animation3+1,w,c
  6764  000086  2245               	addwfc	??_animation3+3,f,c
  6765  000088  5049               	movf	animation3@j,w,c
  6766  00008A  2644               	addwf	??_animation3+2,f,c
  6767  00008C  504A               	movf	animation3@j+1,w,c
  6768  00008E  2245               	addwfc	??_animation3+3,f,c
  6769  000090  C044  FFF6         	movff	??_animation3+2,tblptrl
  6770  000094  C045  FFF7         	movff	??_animation3+3,tblptrh
  6771  000098                     	if	0	;tblptru may be non-zero
  6772  000098                     	endif
  6773  000098                     	if	0	;tblptru may be non-zero
  6774  000098                     	endif
  6775  000098  0008               	tblrd		*
  6776  00009A  50F5               	movf	tablat,w,c
  6777  00009C  0A64               	xorlw	100
  6778  00009E  B4D8               	btfsc	status,2,c
  6779  0000A0  D024               	goto	u7910
  6780                           
  6781                           ;newmain.c: 851: set_led(show3_1[i][j]);
  6782  0000A2  C047  F042         	movff	animation3@i,??_animation3
  6783  0000A6  C048  F043         	movff	animation3@i+1,??_animation3+1
  6784  0000AA  90D8               	bcf	status,0,c
  6785  0000AC  3642               	rlcf	??_animation3,f,c
  6786  0000AE  3643               	rlcf	??_animation3+1,f,c
  6787  0000B0  90D8               	bcf	status,0,c
  6788  0000B2  3642               	rlcf	??_animation3,f,c
  6789  0000B4  3643               	rlcf	??_animation3+1,f,c
  6790  0000B6  90D8               	bcf	status,0,c
  6791  0000B8  3642               	rlcf	??_animation3,f,c
  6792  0000BA  3643               	rlcf	??_animation3+1,f,c
  6793  0000BC  0E69               	movlw	low _show3_1
  6794  0000BE  6E44               	movwf	(??_animation3+2)& (0+255),c
  6795  0000C0  0E7D               	movlw	high _show3_1
  6796  0000C2  6E45               	movwf	(??_animation3+3)& (0+255),c
  6797  0000C4  5042               	movf	??_animation3,w,c
  6798  0000C6  2644               	addwf	??_animation3+2,f,c
  6799  0000C8  5043               	movf	??_animation3+1,w,c
  6800  0000CA  2245               	addwfc	??_animation3+3,f,c
  6801  0000CC  5049               	movf	animation3@j,w,c
  6802  0000CE  2644               	addwf	??_animation3+2,f,c
  6803  0000D0  504A               	movf	animation3@j+1,w,c
  6804  0000D2  2245               	addwfc	??_animation3+3,f,c
  6805  0000D4  C044  FFF6         	movff	??_animation3+2,tblptrl
  6806  0000D8  C045  FFF7         	movff	??_animation3+3,tblptrh
  6807  0000DC                     	if	0	;tblptru may be non-zero
  6808  0000DC                     	endif
  6809  0000DC                     	if	0	;tblptru may be non-zero
  6810  0000DC                     	endif
  6811  0000DC  0008               	tblrd		*
  6812  0000DE  50F5               	movf	tablat,w,c
  6813  0000E0  EC23  F017         	call	_set_led
  6814                           
  6815                           ;newmain.c: 852: else
  6816                           ;newmain.c: 853: break;
  6817  0000E4  4A49               	infsnz	animation3@j,f,c
  6818  0000E6  2A4A               	incf	animation3@j+1,f,c
  6819  0000E8  D7B2               	goto	l5705
  6820  0000EA                     u7910:
  6821  0000EA                     l5717:
  6822                           
  6823                           ;newmain.c: 854: }
  6824                           ;newmain.c: 855: write_display();
  6825  0000EA  EC2E  F016         	call	_write_display	;wreg free
  6826                           
  6827                           ;newmain.c: 856: _delay((unsigned long)((5)*(4000000/4000.0)));
  6828  0000EE  0E07               	movlw	7
  6829  0000F0  6E42               	movwf	??_animation3& (0+255),c
  6830  0000F2  0E7D               	movlw	125
  6831  0000F4                     u10227:
  6832  0000F4  2EE8               	decfsz	wreg,f,c
  6833  0000F6  D7FE               	bra	u10227
  6834  0000F8  2E42               	decfsz	??_animation3& (0+255),f,c
  6835  0000FA  D7FC               	bra	u10227
  6836  0000FC  F000               	nop	
  6837                           
  6838                           ;newmain.c: 857: for (j = 0; j < 8; j++) {
  6839  0000FE  0E00               	movlw	0
  6840  000100  6E4A               	movwf	animation3@j+1,c
  6841  000102  0E00               	movlw	0
  6842  000104  6E49               	movwf	animation3@j,c
  6843  000106                     l5723:
  6844  000106  BE4A               	btfsc	animation3@j+1,7,c
  6845  000108  D006               	goto	l380
  6846  00010A  504A               	movf	animation3@j+1,w,c
  6847  00010C  E14A               	bnz	l5735
  6848  00010E  0E08               	movlw	8
  6849  000110  5C49               	subwf	animation3@j,w,c
  6850  000112  B0D8               	btfsc	status,0,c
  6851  000114  D046               	goto	u7940
  6852  000116                     l380:
  6853                           
  6854                           ;newmain.c: 858: if (show3_1[i][j] != 100)
  6855  000116  C047  F042         	movff	animation3@i,??_animation3
  6856  00011A  C048  F043         	movff	animation3@i+1,??_animation3+1
  6857  00011E  90D8               	bcf	status,0,c
  6858  000120  3642               	rlcf	??_animation3,f,c
  6859  000122  3643               	rlcf	??_animation3+1,f,c
  6860  000124  90D8               	bcf	status,0,c
  6861  000126  3642               	rlcf	??_animation3,f,c
  6862  000128  3643               	rlcf	??_animation3+1,f,c
  6863  00012A  90D8               	bcf	status,0,c
  6864  00012C  3642               	rlcf	??_animation3,f,c
  6865  00012E  3643               	rlcf	??_animation3+1,f,c
  6866  000130  0E69               	movlw	low _show3_1
  6867  000132  6E44               	movwf	(??_animation3+2)& (0+255),c
  6868  000134  0E7D               	movlw	high _show3_1
  6869  000136  6E45               	movwf	(??_animation3+3)& (0+255),c
  6870  000138  5042               	movf	??_animation3,w,c
  6871  00013A  2644               	addwf	??_animation3+2,f,c
  6872  00013C  5043               	movf	??_animation3+1,w,c
  6873  00013E  2245               	addwfc	??_animation3+3,f,c
  6874  000140  5049               	movf	animation3@j,w,c
  6875  000142  2644               	addwf	??_animation3+2,f,c
  6876  000144  504A               	movf	animation3@j+1,w,c
  6877  000146  2245               	addwfc	??_animation3+3,f,c
  6878  000148  C044  FFF6         	movff	??_animation3+2,tblptrl
  6879  00014C  C045  FFF7         	movff	??_animation3+3,tblptrh
  6880  000150                     	if	0	;tblptru may be non-zero
  6881  000150                     	endif
  6882  000150                     	if	0	;tblptru may be non-zero
  6883  000150                     	endif
  6884  000150  0008               	tblrd		*
  6885  000152  50F5               	movf	tablat,w,c
  6886  000154  0A64               	xorlw	100
  6887  000156  B4D8               	btfsc	status,2,c
  6888  000158  D024               	goto	u7940
  6889                           
  6890                           ;newmain.c: 859: clr_led(show3_1[i][j]);
  6891  00015A  C047  F042         	movff	animation3@i,??_animation3
  6892  00015E  C048  F043         	movff	animation3@i+1,??_animation3+1
  6893  000162  90D8               	bcf	status,0,c
  6894  000164  3642               	rlcf	??_animation3,f,c
  6895  000166  3643               	rlcf	??_animation3+1,f,c
  6896  000168  90D8               	bcf	status,0,c
  6897  00016A  3642               	rlcf	??_animation3,f,c
  6898  00016C  3643               	rlcf	??_animation3+1,f,c
  6899  00016E  90D8               	bcf	status,0,c
  6900  000170  3642               	rlcf	??_animation3,f,c
  6901  000172  3643               	rlcf	??_animation3+1,f,c
  6902  000174  0E69               	movlw	low _show3_1
  6903  000176  6E44               	movwf	(??_animation3+2)& (0+255),c
  6904  000178  0E7D               	movlw	high _show3_1
  6905  00017A  6E45               	movwf	(??_animation3+3)& (0+255),c
  6906  00017C  5042               	movf	??_animation3,w,c
  6907  00017E  2644               	addwf	??_animation3+2,f,c
  6908  000180  5043               	movf	??_animation3+1,w,c
  6909  000182  2245               	addwfc	??_animation3+3,f,c
  6910  000184  5049               	movf	animation3@j,w,c
  6911  000186  2644               	addwf	??_animation3+2,f,c
  6912  000188  504A               	movf	animation3@j+1,w,c
  6913  00018A  2245               	addwfc	??_animation3+3,f,c
  6914  00018C  C044  FFF6         	movff	??_animation3+2,tblptrl
  6915  000190  C045  FFF7         	movff	??_animation3+3,tblptrh
  6916  000194                     	if	0	;tblptru may be non-zero
  6917  000194                     	endif
  6918  000194                     	if	0	;tblptru may be non-zero
  6919  000194                     	endif
  6920  000194  0008               	tblrd		*
  6921  000196  50F5               	movf	tablat,w,c
  6922  000198  ECC8  F016         	call	_clr_led
  6923                           
  6924                           ;newmain.c: 860: else
  6925                           ;newmain.c: 861: break;
  6926  00019C  4A49               	infsnz	animation3@j,f,c
  6927  00019E  2A4A               	incf	animation3@j+1,f,c
  6928  0001A0  D7B2               	goto	l5723
  6929  0001A2                     u7940:
  6930  0001A2                     l5735:
  6931                           
  6932                           ;newmain.c: 862: }
  6933                           ;newmain.c: 863: write_display();
  6934  0001A2  EC2E  F016         	call	_write_display	;wreg free
  6935  0001A6  4A47               	infsnz	animation3@i,f,c
  6936  0001A8  2A48               	incf	animation3@i+1,f,c
  6937  0001AA  BE48               	btfsc	animation3@i+1,7,c
  6938  0001AC  D74C               	goto	l374
  6939  0001AE  5048               	movf	animation3@i+1,w,c
  6940  0001B0  E101               	bnz	u7950
  6941  0001B2  D743               	goto	L11
  6942  0001B4                     u7950:
  6943                           
  6944                           ;newmain.c: 864: }
  6945                           ;newmain.c: 865: } else if (m == 1) {
  6946  0001B4  0012               	return	
  6947  0001B6                     l373:
  6948  0001B6  0446               	decf	animation3@m,w,c
  6949  0001B8  A4D8               	btfss	status,2,c
  6950  0001BA  D0BA               	goto	l385
  6951                           
  6952                           ;newmain.c: 866: for (i = 0; i < 7; i++) {
  6953  0001BC  0E00               	movlw	0
  6954  0001BE  6E48               	movwf	animation3@i+1,c
  6955  0001C0  0E00               	movlw	0
  6956  0001C2  6E47               	movwf	animation3@i,c
  6957  0001C4  BE48               	btfsc	animation3@i+1,7,c
  6958  0001C6  D008               	goto	l386
  6959  0001C8  5048               	movf	animation3@i+1,w,c
  6960  0001CA  E105               	bnz	u7970
  6961  0001CC  0E07               	movlw	7
  6962  0001CE  5C47               	subwf	animation3@i,w,c
  6963  0001D0  B0D8               	btfsc	status,0,c
  6964  0001D2  0012               	return	
  6965  0001D4  D001               	goto	l386
  6966  0001D6                     u7970:
  6967  0001D6  0012               	return	
  6968  0001D8                     l386:
  6969                           
  6970                           ;newmain.c: 867: for (j = 0; j < 6; j++) {
  6971  0001D8  0E00               	movlw	0
  6972  0001DA  6E4A               	movwf	animation3@j+1,c
  6973  0001DC  0E00               	movlw	0
  6974  0001DE  6E49               	movwf	animation3@j,c
  6975  0001E0                     l5751:
  6976  0001E0  BE4A               	btfsc	animation3@j+1,7,c
  6977  0001E2  D006               	goto	l388
  6978  0001E4  504A               	movf	animation3@j+1,w,c
  6979  0001E6  E144               	bnz	l5763
  6980  0001E8  0E06               	movlw	6
  6981  0001EA  5C49               	subwf	animation3@j,w,c
  6982  0001EC  B0D8               	btfsc	status,0,c
  6983  0001EE  D040               	goto	u8000
  6984  0001F0                     l388:
  6985                           
  6986                           ;newmain.c: 868: if (show3_2[i][j] != 100)
  6987  0001F0  C047  F02D         	movff	animation3@i,___wmul@multiplier
  6988  0001F4  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  6989  0001F8  0E00               	movlw	0
  6990  0001FA  6E30               	movwf	___wmul@multiplicand+1,c
  6991  0001FC  0E06               	movlw	6
  6992  0001FE  6E2F               	movwf	___wmul@multiplicand,c
  6993  000200  EC83  F018         	call	___wmul	;wreg free
  6994  000204  0E39               	movlw	low _show3_2
  6995  000206  6E42               	movwf	??_animation3& (0+255),c
  6996  000208  0E7F               	movlw	high _show3_2
  6997  00020A  6E43               	movwf	(??_animation3+1)& (0+255),c
  6998  00020C  502D               	movf	?___wmul,w,c
  6999  00020E  2642               	addwf	??_animation3,f,c
  7000  000210  502E               	movf	?___wmul+1,w,c
  7001  000212  2243               	addwfc	??_animation3+1,f,c
  7002  000214  5049               	movf	animation3@j,w,c
  7003  000216  2642               	addwf	??_animation3,f,c
  7004  000218  504A               	movf	animation3@j+1,w,c
  7005  00021A  2243               	addwfc	??_animation3+1,f,c
  7006  00021C  C042  FFF6         	movff	??_animation3,tblptrl
  7007  000220  C043  FFF7         	movff	??_animation3+1,tblptrh
  7008  000224                     	if	0	;tblptru may be non-zero
  7009  000224                     	endif
  7010  000224                     	if	0	;tblptru may be non-zero
  7011  000224                     	endif
  7012  000224  0008               	tblrd		*
  7013  000226  50F5               	movf	tablat,w,c
  7014  000228  0A64               	xorlw	100
  7015  00022A  B4D8               	btfsc	status,2,c
  7016  00022C  D021               	goto	u8000
  7017                           
  7018                           ;newmain.c: 869: set_led(show3_2[i][j]);
  7019  00022E  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7020  000232  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7021  000236  0E00               	movlw	0
  7022  000238  6E30               	movwf	___wmul@multiplicand+1,c
  7023  00023A  0E06               	movlw	6
  7024  00023C  6E2F               	movwf	___wmul@multiplicand,c
  7025  00023E  EC83  F018         	call	___wmul	;wreg free
  7026  000242  0E39               	movlw	low _show3_2
  7027  000244  6E42               	movwf	??_animation3& (0+255),c
  7028  000246  0E7F               	movlw	high _show3_2
  7029  000248  6E43               	movwf	(??_animation3+1)& (0+255),c
  7030  00024A  502D               	movf	?___wmul,w,c
  7031  00024C  2642               	addwf	??_animation3,f,c
  7032  00024E  502E               	movf	?___wmul+1,w,c
  7033  000250  2243               	addwfc	??_animation3+1,f,c
  7034  000252  5049               	movf	animation3@j,w,c
  7035  000254  2642               	addwf	??_animation3,f,c
  7036  000256  504A               	movf	animation3@j+1,w,c
  7037  000258  2243               	addwfc	??_animation3+1,f,c
  7038  00025A  C042  FFF6         	movff	??_animation3,tblptrl
  7039  00025E  C043  FFF7         	movff	??_animation3+1,tblptrh
  7040  000262                     	if	0	;tblptru may be non-zero
  7041  000262                     	endif
  7042  000262                     	if	0	;tblptru may be non-zero
  7043  000262                     	endif
  7044  000262  0008               	tblrd		*
  7045  000264  50F5               	movf	tablat,w,c
  7046  000266  EC23  F017         	call	_set_led
  7047                           
  7048                           ;newmain.c: 870: else
  7049                           ;newmain.c: 871: break;
  7050  00026A  4A49               	infsnz	animation3@j,f,c
  7051  00026C  2A4A               	incf	animation3@j+1,f,c
  7052  00026E  D7B8               	goto	l5751
  7053  000270                     u8000:
  7054  000270                     l5763:
  7055                           
  7056                           ;newmain.c: 872: }
  7057                           ;newmain.c: 873: write_display();
  7058  000270  EC2E  F016         	call	_write_display	;wreg free
  7059                           
  7060                           ;newmain.c: 874: _delay((unsigned long)((5)*(4000000/4000.0)));
  7061  000274  0E07               	movlw	7
  7062  000276  6E42               	movwf	??_animation3& (0+255),c
  7063  000278  0E7D               	movlw	125
  7064  00027A                     u10237:
  7065  00027A  2EE8               	decfsz	wreg,f,c
  7066  00027C  D7FE               	bra	u10237
  7067  00027E  2E42               	decfsz	??_animation3& (0+255),f,c
  7068  000280  D7FC               	bra	u10237
  7069  000282  F000               	nop	
  7070                           
  7071                           ;newmain.c: 875: for (j = 0; j < 6; j++) {
  7072  000284  0E00               	movlw	0
  7073  000286  6E4A               	movwf	animation3@j+1,c
  7074  000288  0E00               	movlw	0
  7075  00028A  6E49               	movwf	animation3@j,c
  7076  00028C                     l5769:
  7077  00028C  BE4A               	btfsc	animation3@j+1,7,c
  7078  00028E  D006               	goto	l392
  7079  000290  504A               	movf	animation3@j+1,w,c
  7080  000292  E144               	bnz	l5781
  7081  000294  0E06               	movlw	6
  7082  000296  5C49               	subwf	animation3@j,w,c
  7083  000298  B0D8               	btfsc	status,0,c
  7084  00029A  D040               	goto	u8030
  7085  00029C                     l392:
  7086                           
  7087                           ;newmain.c: 876: if (show3_2[i][j] != 100)
  7088  00029C  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7089  0002A0  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7090  0002A4  0E00               	movlw	0
  7091  0002A6  6E30               	movwf	___wmul@multiplicand+1,c
  7092  0002A8  0E06               	movlw	6
  7093  0002AA  6E2F               	movwf	___wmul@multiplicand,c
  7094  0002AC  EC83  F018         	call	___wmul	;wreg free
  7095  0002B0  0E39               	movlw	low _show3_2
  7096  0002B2  6E42               	movwf	??_animation3& (0+255),c
  7097  0002B4  0E7F               	movlw	high _show3_2
  7098  0002B6  6E43               	movwf	(??_animation3+1)& (0+255),c
  7099  0002B8  502D               	movf	?___wmul,w,c
  7100  0002BA  2642               	addwf	??_animation3,f,c
  7101  0002BC  502E               	movf	?___wmul+1,w,c
  7102  0002BE  2243               	addwfc	??_animation3+1,f,c
  7103  0002C0  5049               	movf	animation3@j,w,c
  7104  0002C2  2642               	addwf	??_animation3,f,c
  7105  0002C4  504A               	movf	animation3@j+1,w,c
  7106  0002C6  2243               	addwfc	??_animation3+1,f,c
  7107  0002C8  C042  FFF6         	movff	??_animation3,tblptrl
  7108  0002CC  C043  FFF7         	movff	??_animation3+1,tblptrh
  7109  0002D0                     	if	0	;tblptru may be non-zero
  7110  0002D0                     	endif
  7111  0002D0                     	if	0	;tblptru may be non-zero
  7112  0002D0                     	endif
  7113  0002D0  0008               	tblrd		*
  7114  0002D2  50F5               	movf	tablat,w,c
  7115  0002D4  0A64               	xorlw	100
  7116  0002D6  B4D8               	btfsc	status,2,c
  7117  0002D8  D021               	goto	u8030
  7118                           
  7119                           ;newmain.c: 877: clr_led(show3_2[i][j]);
  7120  0002DA  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7121  0002DE  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7122  0002E2  0E00               	movlw	0
  7123  0002E4  6E30               	movwf	___wmul@multiplicand+1,c
  7124  0002E6  0E06               	movlw	6
  7125  0002E8  6E2F               	movwf	___wmul@multiplicand,c
  7126  0002EA  EC83  F018         	call	___wmul	;wreg free
  7127  0002EE  0E39               	movlw	low _show3_2
  7128  0002F0  6E42               	movwf	??_animation3& (0+255),c
  7129  0002F2  0E7F               	movlw	high _show3_2
  7130  0002F4  6E43               	movwf	(??_animation3+1)& (0+255),c
  7131  0002F6  502D               	movf	?___wmul,w,c
  7132  0002F8  2642               	addwf	??_animation3,f,c
  7133  0002FA  502E               	movf	?___wmul+1,w,c
  7134  0002FC  2243               	addwfc	??_animation3+1,f,c
  7135  0002FE  5049               	movf	animation3@j,w,c
  7136  000300  2642               	addwf	??_animation3,f,c
  7137  000302  504A               	movf	animation3@j+1,w,c
  7138  000304  2243               	addwfc	??_animation3+1,f,c
  7139  000306  C042  FFF6         	movff	??_animation3,tblptrl
  7140  00030A  C043  FFF7         	movff	??_animation3+1,tblptrh
  7141  00030E                     	if	0	;tblptru may be non-zero
  7142  00030E                     	endif
  7143  00030E                     	if	0	;tblptru may be non-zero
  7144  00030E                     	endif
  7145  00030E  0008               	tblrd		*
  7146  000310  50F5               	movf	tablat,w,c
  7147  000312  ECC8  F016         	call	_clr_led
  7148                           
  7149                           ;newmain.c: 878: else
  7150                           ;newmain.c: 879: break;
  7151  000316  4A49               	infsnz	animation3@j,f,c
  7152  000318  2A4A               	incf	animation3@j+1,f,c
  7153  00031A  D7B8               	goto	l5769
  7154  00031C                     u8030:
  7155  00031C                     l5781:
  7156                           
  7157                           ;newmain.c: 880: }
  7158                           ;newmain.c: 881: write_display();
  7159  00031C  EC2E  F016         	call	_write_display	;wreg free
  7160  000320  4A47               	infsnz	animation3@i,f,c
  7161  000322  2A48               	incf	animation3@i+1,f,c
  7162  000324  BE48               	btfsc	animation3@i+1,7,c
  7163  000326  D758               	goto	l386
  7164  000328  5048               	movf	animation3@i+1,w,c
  7165  00032A  E101               	bnz	u8040
  7166  00032C  D74F               	goto	L12
  7167  00032E                     u8040:
  7168                           
  7169                           ;newmain.c: 882: }
  7170                           ;newmain.c: 883: } else if (m == 2) {
  7171  00032E  0012               	return	
  7172  000330                     l385:
  7173  000330  0E02               	movlw	2
  7174  000332  1846               	xorwf	animation3@m,w,c
  7175  000334  A4D8               	btfss	status,2,c
  7176  000336  D0B9               	goto	l397
  7177                           
  7178                           ;newmain.c: 884: for (i = 0; i < 5; i++) {
  7179  000338  0E00               	movlw	0
  7180  00033A  6E48               	movwf	animation3@i+1,c
  7181  00033C  0E00               	movlw	0
  7182  00033E  6E47               	movwf	animation3@i,c
  7183  000340  BE48               	btfsc	animation3@i+1,7,c
  7184  000342  D008               	goto	l398
  7185  000344  5048               	movf	animation3@i+1,w,c
  7186  000346  E105               	bnz	u8060
  7187  000348  0E05               	movlw	5
  7188  00034A  5C47               	subwf	animation3@i,w,c
  7189  00034C  B0D8               	btfsc	status,0,c
  7190  00034E  0012               	return	
  7191  000350  D001               	goto	l398
  7192  000352                     u8060:
  7193  000352  0012               	return	
  7194  000354                     l398:
  7195                           
  7196                           ;newmain.c: 885: for (j = 0; j < 4; j++) {
  7197  000354  0E00               	movlw	0
  7198  000356  6E4A               	movwf	animation3@j+1,c
  7199  000358  0E00               	movlw	0
  7200  00035A  6E49               	movwf	animation3@j,c
  7201  00035C                     l5797:
  7202  00035C  BE4A               	btfsc	animation3@j+1,7,c
  7203  00035E  D006               	goto	l400
  7204  000360  504A               	movf	animation3@j+1,w,c
  7205  000362  E144               	bnz	l5809
  7206  000364  0E04               	movlw	4
  7207  000366  5C49               	subwf	animation3@j,w,c
  7208  000368  B0D8               	btfsc	status,0,c
  7209  00036A  D040               	goto	u8090
  7210  00036C                     l400:
  7211                           
  7212                           ;newmain.c: 886: if (show3_3[i][j] != 100)
  7213  00036C  C047  F042         	movff	animation3@i,??_animation3
  7214  000370  C048  F043         	movff	animation3@i+1,??_animation3+1
  7215  000374  90D8               	bcf	status,0,c
  7216  000376  3642               	rlcf	??_animation3,f,c
  7217  000378  3643               	rlcf	??_animation3+1,f,c
  7218  00037A  90D8               	bcf	status,0,c
  7219  00037C  3642               	rlcf	??_animation3,f,c
  7220  00037E  3643               	rlcf	??_animation3+1,f,c
  7221  000380  0ECB               	movlw	low _show3_3
  7222  000382  6E44               	movwf	(??_animation3+2)& (0+255),c
  7223  000384  0E7F               	movlw	high _show3_3
  7224  000386  6E45               	movwf	(??_animation3+3)& (0+255),c
  7225  000388  5042               	movf	??_animation3,w,c
  7226  00038A  2644               	addwf	??_animation3+2,f,c
  7227  00038C  5043               	movf	??_animation3+1,w,c
  7228  00038E  2245               	addwfc	??_animation3+3,f,c
  7229  000390  5049               	movf	animation3@j,w,c
  7230  000392  2644               	addwf	??_animation3+2,f,c
  7231  000394  504A               	movf	animation3@j+1,w,c
  7232  000396  2245               	addwfc	??_animation3+3,f,c
  7233  000398  C044  FFF6         	movff	??_animation3+2,tblptrl
  7234  00039C  C045  FFF7         	movff	??_animation3+3,tblptrh
  7235  0003A0                     	if	0	;tblptru may be non-zero
  7236  0003A0                     	endif
  7237  0003A0                     	if	0	;tblptru may be non-zero
  7238  0003A0                     	endif
  7239  0003A0  0008               	tblrd		*
  7240  0003A2  50F5               	movf	tablat,w,c
  7241  0003A4  0A64               	xorlw	100
  7242  0003A6  B4D8               	btfsc	status,2,c
  7243  0003A8  D021               	goto	u8090
  7244                           
  7245                           ;newmain.c: 887: set_led(show3_3[i][j]);
  7246  0003AA  C047  F042         	movff	animation3@i,??_animation3
  7247  0003AE  C048  F043         	movff	animation3@i+1,??_animation3+1
  7248  0003B2  90D8               	bcf	status,0,c
  7249  0003B4  3642               	rlcf	??_animation3,f,c
  7250  0003B6  3643               	rlcf	??_animation3+1,f,c
  7251  0003B8  90D8               	bcf	status,0,c
  7252  0003BA  3642               	rlcf	??_animation3,f,c
  7253  0003BC  3643               	rlcf	??_animation3+1,f,c
  7254  0003BE  0ECB               	movlw	low _show3_3
  7255  0003C0  6E44               	movwf	(??_animation3+2)& (0+255),c
  7256  0003C2  0E7F               	movlw	high _show3_3
  7257  0003C4  6E45               	movwf	(??_animation3+3)& (0+255),c
  7258  0003C6  5042               	movf	??_animation3,w,c
  7259  0003C8  2644               	addwf	??_animation3+2,f,c
  7260  0003CA  5043               	movf	??_animation3+1,w,c
  7261  0003CC  2245               	addwfc	??_animation3+3,f,c
  7262  0003CE  5049               	movf	animation3@j,w,c
  7263  0003D0  2644               	addwf	??_animation3+2,f,c
  7264  0003D2  504A               	movf	animation3@j+1,w,c
  7265  0003D4  2245               	addwfc	??_animation3+3,f,c
  7266  0003D6  C044  FFF6         	movff	??_animation3+2,tblptrl
  7267  0003DA  C045  FFF7         	movff	??_animation3+3,tblptrh
  7268  0003DE                     	if	0	;tblptru may be non-zero
  7269  0003DE                     	endif
  7270  0003DE                     	if	0	;tblptru may be non-zero
  7271  0003DE                     	endif
  7272  0003DE  0008               	tblrd		*
  7273  0003E0  50F5               	movf	tablat,w,c
  7274  0003E2  EC23  F017         	call	_set_led
  7275                           
  7276                           ;newmain.c: 888: else
  7277                           ;newmain.c: 889: break;
  7278  0003E6  4A49               	infsnz	animation3@j,f,c
  7279  0003E8  2A4A               	incf	animation3@j+1,f,c
  7280  0003EA  D7B8               	goto	l5797
  7281  0003EC                     u8090:
  7282  0003EC                     l5809:
  7283                           
  7284                           ;newmain.c: 890: }
  7285                           ;newmain.c: 891: write_display();
  7286  0003EC  EC2E  F016         	call	_write_display	;wreg free
  7287                           
  7288                           ;newmain.c: 892: _delay((unsigned long)((10)*(4000000/4000.0)));
  7289  0003F0  0E0D               	movlw	13
  7290  0003F2  6E42               	movwf	??_animation3& (0+255),c
  7291  0003F4  0EFC               	movlw	252
  7292  0003F6                     u10247:
  7293  0003F6  2EE8               	decfsz	wreg,f,c
  7294  0003F8  D7FE               	bra	u10247
  7295  0003FA  2E42               	decfsz	??_animation3& (0+255),f,c
  7296  0003FC  D7FC               	bra	u10247
  7297                           
  7298                           ;newmain.c: 893: for (j = 0; j < 4; j++) {
  7299  0003FE  0E00               	movlw	0
  7300  000400  6E4A               	movwf	animation3@j+1,c
  7301  000402  0E00               	movlw	0
  7302  000404  6E49               	movwf	animation3@j,c
  7303  000406                     l5815:
  7304  000406  BE4A               	btfsc	animation3@j+1,7,c
  7305  000408  D006               	goto	l404
  7306  00040A  504A               	movf	animation3@j+1,w,c
  7307  00040C  E144               	bnz	l5827
  7308  00040E  0E04               	movlw	4
  7309  000410  5C49               	subwf	animation3@j,w,c
  7310  000412  B0D8               	btfsc	status,0,c
  7311  000414  D040               	goto	u8120
  7312  000416                     l404:
  7313                           
  7314                           ;newmain.c: 894: if (show3_3[i][j] != 100)
  7315  000416  C047  F042         	movff	animation3@i,??_animation3
  7316  00041A  C048  F043         	movff	animation3@i+1,??_animation3+1
  7317  00041E  90D8               	bcf	status,0,c
  7318  000420  3642               	rlcf	??_animation3,f,c
  7319  000422  3643               	rlcf	??_animation3+1,f,c
  7320  000424  90D8               	bcf	status,0,c
  7321  000426  3642               	rlcf	??_animation3,f,c
  7322  000428  3643               	rlcf	??_animation3+1,f,c
  7323  00042A  0ECB               	movlw	low _show3_3
  7324  00042C  6E44               	movwf	(??_animation3+2)& (0+255),c
  7325  00042E  0E7F               	movlw	high _show3_3
  7326  000430  6E45               	movwf	(??_animation3+3)& (0+255),c
  7327  000432  5042               	movf	??_animation3,w,c
  7328  000434  2644               	addwf	??_animation3+2,f,c
  7329  000436  5043               	movf	??_animation3+1,w,c
  7330  000438  2245               	addwfc	??_animation3+3,f,c
  7331  00043A  5049               	movf	animation3@j,w,c
  7332  00043C  2644               	addwf	??_animation3+2,f,c
  7333  00043E  504A               	movf	animation3@j+1,w,c
  7334  000440  2245               	addwfc	??_animation3+3,f,c
  7335  000442  C044  FFF6         	movff	??_animation3+2,tblptrl
  7336  000446  C045  FFF7         	movff	??_animation3+3,tblptrh
  7337  00044A                     	if	0	;tblptru may be non-zero
  7338  00044A                     	endif
  7339  00044A                     	if	0	;tblptru may be non-zero
  7340  00044A                     	endif
  7341  00044A  0008               	tblrd		*
  7342  00044C  50F5               	movf	tablat,w,c
  7343  00044E  0A64               	xorlw	100
  7344  000450  B4D8               	btfsc	status,2,c
  7345  000452  D021               	goto	u8120
  7346                           
  7347                           ;newmain.c: 895: clr_led(show3_3[i][j]);
  7348  000454  C047  F042         	movff	animation3@i,??_animation3
  7349  000458  C048  F043         	movff	animation3@i+1,??_animation3+1
  7350  00045C  90D8               	bcf	status,0,c
  7351  00045E  3642               	rlcf	??_animation3,f,c
  7352  000460  3643               	rlcf	??_animation3+1,f,c
  7353  000462  90D8               	bcf	status,0,c
  7354  000464  3642               	rlcf	??_animation3,f,c
  7355  000466  3643               	rlcf	??_animation3+1,f,c
  7356  000468  0ECB               	movlw	low _show3_3
  7357  00046A  6E44               	movwf	(??_animation3+2)& (0+255),c
  7358  00046C  0E7F               	movlw	high _show3_3
  7359  00046E  6E45               	movwf	(??_animation3+3)& (0+255),c
  7360  000470  5042               	movf	??_animation3,w,c
  7361  000472  2644               	addwf	??_animation3+2,f,c
  7362  000474  5043               	movf	??_animation3+1,w,c
  7363  000476  2245               	addwfc	??_animation3+3,f,c
  7364  000478  5049               	movf	animation3@j,w,c
  7365  00047A  2644               	addwf	??_animation3+2,f,c
  7366  00047C  504A               	movf	animation3@j+1,w,c
  7367  00047E  2245               	addwfc	??_animation3+3,f,c
  7368  000480  C044  FFF6         	movff	??_animation3+2,tblptrl
  7369  000484  C045  FFF7         	movff	??_animation3+3,tblptrh
  7370  000488                     	if	0	;tblptru may be non-zero
  7371  000488                     	endif
  7372  000488                     	if	0	;tblptru may be non-zero
  7373  000488                     	endif
  7374  000488  0008               	tblrd		*
  7375  00048A  50F5               	movf	tablat,w,c
  7376  00048C  ECC8  F016         	call	_clr_led
  7377                           
  7378                           ;newmain.c: 896: else
  7379                           ;newmain.c: 897: break;
  7380  000490  4A49               	infsnz	animation3@j,f,c
  7381  000492  2A4A               	incf	animation3@j+1,f,c
  7382  000494  D7B8               	goto	l5815
  7383  000496                     u8120:
  7384  000496                     l5827:
  7385                           
  7386                           ;newmain.c: 898: }
  7387                           ;newmain.c: 899: write_display();
  7388  000496  EC2E  F016         	call	_write_display	;wreg free
  7389  00049A  4A47               	infsnz	animation3@i,f,c
  7390  00049C  2A48               	incf	animation3@i+1,f,c
  7391  00049E  BE48               	btfsc	animation3@i+1,7,c
  7392  0004A0  D759               	goto	l398
  7393  0004A2  5048               	movf	animation3@i+1,w,c
  7394  0004A4  E101               	bnz	u8130
  7395  0004A6  D750               	goto	L13
  7396  0004A8                     u8130:
  7397                           
  7398                           ;newmain.c: 900: }
  7399                           ;newmain.c: 901: } else if (m == 3) {
  7400  0004A8  0012               	return	
  7401  0004AA                     l397:
  7402  0004AA  0E03               	movlw	3
  7403  0004AC  1846               	xorwf	animation3@m,w,c
  7404  0004AE  A4D8               	btfss	status,2,c
  7405  0004B0  0012               	return	
  7406                           
  7407                           ;newmain.c: 903: for (i = 3; i >= 0; i--) {
  7408  0004B2  0E00               	movlw	0
  7409  0004B4  6E48               	movwf	animation3@i+1,c
  7410  0004B6  0E03               	movlw	3
  7411  0004B8  6E47               	movwf	animation3@i,c
  7412  0004BA                     l5837:
  7413  0004BA  BE48               	btfsc	animation3@i+1,7,c
  7414  0004BC  D0A7               	goto	u8220
  7415                           
  7416                           ;newmain.c: 904: for (j = 0; j < 26; j++) {
  7417  0004BE  0E00               	movlw	0
  7418  0004C0  6E4A               	movwf	animation3@j+1,c
  7419  0004C2  0E00               	movlw	0
  7420  0004C4  6E49               	movwf	animation3@j,c
  7421  0004C6                     l5843:
  7422  0004C6  BE4A               	btfsc	animation3@j+1,7,c
  7423  0004C8  D006               	goto	l412
  7424  0004CA  504A               	movf	animation3@j+1,w,c
  7425  0004CC  E144               	bnz	l5855
  7426  0004CE  0E1A               	movlw	26
  7427  0004D0  5C49               	subwf	animation3@j,w,c
  7428  0004D2  B0D8               	btfsc	status,0,c
  7429  0004D4  D040               	goto	u8180
  7430  0004D6                     l412:
  7431                           
  7432                           ;newmain.c: 905: if (circle[i][j] != 100)
  7433  0004D6  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7434  0004DA  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7435  0004DE  0E00               	movlw	0
  7436  0004E0  6E30               	movwf	___wmul@multiplicand+1,c
  7437  0004E2  0E1A               	movlw	26
  7438  0004E4  6E2F               	movwf	___wmul@multiplicand,c
  7439  0004E6  EC83  F018         	call	___wmul	;wreg free
  7440  0004EA  0E41               	movlw	low _circle
  7441  0004EC  6E42               	movwf	??_animation3& (0+255),c
  7442  0004EE  0E7C               	movlw	high _circle
  7443  0004F0  6E43               	movwf	(??_animation3+1)& (0+255),c
  7444  0004F2  502D               	movf	?___wmul,w,c
  7445  0004F4  2642               	addwf	??_animation3,f,c
  7446  0004F6  502E               	movf	?___wmul+1,w,c
  7447  0004F8  2243               	addwfc	??_animation3+1,f,c
  7448  0004FA  5049               	movf	animation3@j,w,c
  7449  0004FC  2642               	addwf	??_animation3,f,c
  7450  0004FE  504A               	movf	animation3@j+1,w,c
  7451  000500  2243               	addwfc	??_animation3+1,f,c
  7452  000502  C042  FFF6         	movff	??_animation3,tblptrl
  7453  000506  C043  FFF7         	movff	??_animation3+1,tblptrh
  7454  00050A                     	if	0	;tblptru may be non-zero
  7455  00050A                     	endif
  7456  00050A                     	if	0	;tblptru may be non-zero
  7457  00050A                     	endif
  7458  00050A  0008               	tblrd		*
  7459  00050C  50F5               	movf	tablat,w,c
  7460  00050E  0A64               	xorlw	100
  7461  000510  B4D8               	btfsc	status,2,c
  7462  000512  D021               	goto	u8180
  7463                           
  7464                           ;newmain.c: 906: set_led(circle[i][j]);
  7465  000514  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7466  000518  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7467  00051C  0E00               	movlw	0
  7468  00051E  6E30               	movwf	___wmul@multiplicand+1,c
  7469  000520  0E1A               	movlw	26
  7470  000522  6E2F               	movwf	___wmul@multiplicand,c
  7471  000524  EC83  F018         	call	___wmul	;wreg free
  7472  000528  0E41               	movlw	low _circle
  7473  00052A  6E42               	movwf	??_animation3& (0+255),c
  7474  00052C  0E7C               	movlw	high _circle
  7475  00052E  6E43               	movwf	(??_animation3+1)& (0+255),c
  7476  000530  502D               	movf	?___wmul,w,c
  7477  000532  2642               	addwf	??_animation3,f,c
  7478  000534  502E               	movf	?___wmul+1,w,c
  7479  000536  2243               	addwfc	??_animation3+1,f,c
  7480  000538  5049               	movf	animation3@j,w,c
  7481  00053A  2642               	addwf	??_animation3,f,c
  7482  00053C  504A               	movf	animation3@j+1,w,c
  7483  00053E  2243               	addwfc	??_animation3+1,f,c
  7484  000540  C042  FFF6         	movff	??_animation3,tblptrl
  7485  000544  C043  FFF7         	movff	??_animation3+1,tblptrh
  7486  000548                     	if	0	;tblptru may be non-zero
  7487  000548                     	endif
  7488  000548                     	if	0	;tblptru may be non-zero
  7489  000548                     	endif
  7490  000548  0008               	tblrd		*
  7491  00054A  50F5               	movf	tablat,w,c
  7492  00054C  EC23  F017         	call	_set_led
  7493                           
  7494                           ;newmain.c: 907: else
  7495                           ;newmain.c: 908: break;
  7496  000550  4A49               	infsnz	animation3@j,f,c
  7497  000552  2A4A               	incf	animation3@j+1,f,c
  7498  000554  D7B8               	goto	l5843
  7499  000556                     u8180:
  7500  000556                     l5855:
  7501                           
  7502                           ;newmain.c: 909: }
  7503                           ;newmain.c: 910: write_display();
  7504  000556  EC2E  F016         	call	_write_display	;wreg free
  7505                           
  7506                           ;newmain.c: 911: _delay((unsigned long)((10)*(4000000/4000.0)));
  7507  00055A  0E0D               	movlw	13
  7508  00055C  6E42               	movwf	??_animation3& (0+255),c
  7509  00055E  0EFC               	movlw	252
  7510  000560                     u10257:
  7511  000560  2EE8               	decfsz	wreg,f,c
  7512  000562  D7FE               	bra	u10257
  7513  000564  2E42               	decfsz	??_animation3& (0+255),f,c
  7514  000566  D7FC               	bra	u10257
  7515                           
  7516                           ;newmain.c: 912: for (j = 0; j < 26; j++) {
  7517  000568  0E00               	movlw	0
  7518  00056A  6E4A               	movwf	animation3@j+1,c
  7519  00056C  0E00               	movlw	0
  7520  00056E  6E49               	movwf	animation3@j,c
  7521  000570                     l5861:
  7522  000570  BE4A               	btfsc	animation3@j+1,7,c
  7523  000572  D006               	goto	l416
  7524  000574  504A               	movf	animation3@j+1,w,c
  7525  000576  E144               	bnz	l5873
  7526  000578  0E1A               	movlw	26
  7527  00057A  5C49               	subwf	animation3@j,w,c
  7528  00057C  B0D8               	btfsc	status,0,c
  7529  00057E  D040               	goto	u8210
  7530  000580                     l416:
  7531                           
  7532                           ;newmain.c: 913: if (circle[i][j] != 100)
  7533  000580  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7534  000584  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7535  000588  0E00               	movlw	0
  7536  00058A  6E30               	movwf	___wmul@multiplicand+1,c
  7537  00058C  0E1A               	movlw	26
  7538  00058E  6E2F               	movwf	___wmul@multiplicand,c
  7539  000590  EC83  F018         	call	___wmul	;wreg free
  7540  000594  0E41               	movlw	low _circle
  7541  000596  6E42               	movwf	??_animation3& (0+255),c
  7542  000598  0E7C               	movlw	high _circle
  7543  00059A  6E43               	movwf	(??_animation3+1)& (0+255),c
  7544  00059C  502D               	movf	?___wmul,w,c
  7545  00059E  2642               	addwf	??_animation3,f,c
  7546  0005A0  502E               	movf	?___wmul+1,w,c
  7547  0005A2  2243               	addwfc	??_animation3+1,f,c
  7548  0005A4  5049               	movf	animation3@j,w,c
  7549  0005A6  2642               	addwf	??_animation3,f,c
  7550  0005A8  504A               	movf	animation3@j+1,w,c
  7551  0005AA  2243               	addwfc	??_animation3+1,f,c
  7552  0005AC  C042  FFF6         	movff	??_animation3,tblptrl
  7553  0005B0  C043  FFF7         	movff	??_animation3+1,tblptrh
  7554  0005B4                     	if	0	;tblptru may be non-zero
  7555  0005B4                     	endif
  7556  0005B4                     	if	0	;tblptru may be non-zero
  7557  0005B4                     	endif
  7558  0005B4  0008               	tblrd		*
  7559  0005B6  50F5               	movf	tablat,w,c
  7560  0005B8  0A64               	xorlw	100
  7561  0005BA  B4D8               	btfsc	status,2,c
  7562  0005BC  D021               	goto	u8210
  7563                           
  7564                           ;newmain.c: 914: clr_led(circle[i][j]);
  7565  0005BE  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7566  0005C2  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7567  0005C6  0E00               	movlw	0
  7568  0005C8  6E30               	movwf	___wmul@multiplicand+1,c
  7569  0005CA  0E1A               	movlw	26
  7570  0005CC  6E2F               	movwf	___wmul@multiplicand,c
  7571  0005CE  EC83  F018         	call	___wmul	;wreg free
  7572  0005D2  0E41               	movlw	low _circle
  7573  0005D4  6E42               	movwf	??_animation3& (0+255),c
  7574  0005D6  0E7C               	movlw	high _circle
  7575  0005D8  6E43               	movwf	(??_animation3+1)& (0+255),c
  7576  0005DA  502D               	movf	?___wmul,w,c
  7577  0005DC  2642               	addwf	??_animation3,f,c
  7578  0005DE  502E               	movf	?___wmul+1,w,c
  7579  0005E0  2243               	addwfc	??_animation3+1,f,c
  7580  0005E2  5049               	movf	animation3@j,w,c
  7581  0005E4  2642               	addwf	??_animation3,f,c
  7582  0005E6  504A               	movf	animation3@j+1,w,c
  7583  0005E8  2243               	addwfc	??_animation3+1,f,c
  7584  0005EA  C042  FFF6         	movff	??_animation3,tblptrl
  7585  0005EE  C043  FFF7         	movff	??_animation3+1,tblptrh
  7586  0005F2                     	if	0	;tblptru may be non-zero
  7587  0005F2                     	endif
  7588  0005F2                     	if	0	;tblptru may be non-zero
  7589  0005F2                     	endif
  7590  0005F2  0008               	tblrd		*
  7591  0005F4  50F5               	movf	tablat,w,c
  7592  0005F6  ECC8  F016         	call	_clr_led
  7593                           
  7594                           ;newmain.c: 915: else
  7595                           ;newmain.c: 916: break;
  7596  0005FA  4A49               	infsnz	animation3@j,f,c
  7597  0005FC  2A4A               	incf	animation3@j+1,f,c
  7598  0005FE  D7B8               	goto	l5861
  7599  000600                     u8210:
  7600  000600                     l5873:
  7601                           
  7602                           ;newmain.c: 917: }
  7603                           ;newmain.c: 918: write_display();
  7604  000600  EC2E  F016         	call	_write_display	;wreg free
  7605  000604  0647               	decf	animation3@i,f,c
  7606  000606  A0D8               	btfss	status,0,c
  7607  000608  0648               	decf	animation3@i+1,f,c
  7608  00060A  D757               	goto	l5837
  7609  00060C                     u8220:
  7610                           
  7611                           ;newmain.c: 919: }
  7612                           ;newmain.c: 921: for (i = 0; i < 3; i++) {
  7613  00060C  0E00               	movlw	0
  7614  00060E  6E48               	movwf	animation3@i+1,c
  7615  000610  0E00               	movlw	0
  7616  000612  6E47               	movwf	animation3@i,c
  7617  000614  BE48               	btfsc	animation3@i+1,7,c
  7618  000616  D008               	goto	l420
  7619  000618  5048               	movf	animation3@i+1,w,c
  7620  00061A  E105               	bnz	u8230
  7621  00061C  0E03               	movlw	3
  7622  00061E  5C47               	subwf	animation3@i,w,c
  7623  000620  B0D8               	btfsc	status,0,c
  7624  000622  0012               	return	
  7625  000624  D001               	goto	l420
  7626  000626                     u8230:
  7627  000626  0012               	return	
  7628  000628                     l420:
  7629                           
  7630                           ;newmain.c: 922: for (j = 0; j < 26; j++) {
  7631  000628  0E00               	movlw	0
  7632  00062A  6E4A               	movwf	animation3@j+1,c
  7633  00062C  0E00               	movlw	0
  7634  00062E  6E49               	movwf	animation3@j,c
  7635  000630                     l5887:
  7636  000630  BE4A               	btfsc	animation3@j+1,7,c
  7637  000632  D006               	goto	l422
  7638  000634  504A               	movf	animation3@j+1,w,c
  7639  000636  E144               	bnz	l5899
  7640  000638  0E1A               	movlw	26
  7641  00063A  5C49               	subwf	animation3@j,w,c
  7642  00063C  B0D8               	btfsc	status,0,c
  7643  00063E  D040               	goto	u8260
  7644  000640                     l422:
  7645                           
  7646                           ;newmain.c: 923: if (circle[i][j] != 100)
  7647  000640  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7648  000644  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7649  000648  0E00               	movlw	0
  7650  00064A  6E30               	movwf	___wmul@multiplicand+1,c
  7651  00064C  0E1A               	movlw	26
  7652  00064E  6E2F               	movwf	___wmul@multiplicand,c
  7653  000650  EC83  F018         	call	___wmul	;wreg free
  7654  000654  0E41               	movlw	low _circle
  7655  000656  6E42               	movwf	??_animation3& (0+255),c
  7656  000658  0E7C               	movlw	high _circle
  7657  00065A  6E43               	movwf	(??_animation3+1)& (0+255),c
  7658  00065C  502D               	movf	?___wmul,w,c
  7659  00065E  2642               	addwf	??_animation3,f,c
  7660  000660  502E               	movf	?___wmul+1,w,c
  7661  000662  2243               	addwfc	??_animation3+1,f,c
  7662  000664  5049               	movf	animation3@j,w,c
  7663  000666  2642               	addwf	??_animation3,f,c
  7664  000668  504A               	movf	animation3@j+1,w,c
  7665  00066A  2243               	addwfc	??_animation3+1,f,c
  7666  00066C  C042  FFF6         	movff	??_animation3,tblptrl
  7667  000670  C043  FFF7         	movff	??_animation3+1,tblptrh
  7668  000674                     	if	0	;tblptru may be non-zero
  7669  000674                     	endif
  7670  000674                     	if	0	;tblptru may be non-zero
  7671  000674                     	endif
  7672  000674  0008               	tblrd		*
  7673  000676  50F5               	movf	tablat,w,c
  7674  000678  0A64               	xorlw	100
  7675  00067A  B4D8               	btfsc	status,2,c
  7676  00067C  D021               	goto	u8260
  7677                           
  7678                           ;newmain.c: 924: set_led(circle[i][j]);
  7679  00067E  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7680  000682  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7681  000686  0E00               	movlw	0
  7682  000688  6E30               	movwf	___wmul@multiplicand+1,c
  7683  00068A  0E1A               	movlw	26
  7684  00068C  6E2F               	movwf	___wmul@multiplicand,c
  7685  00068E  EC83  F018         	call	___wmul	;wreg free
  7686  000692  0E41               	movlw	low _circle
  7687  000694  6E42               	movwf	??_animation3& (0+255),c
  7688  000696  0E7C               	movlw	high _circle
  7689  000698  6E43               	movwf	(??_animation3+1)& (0+255),c
  7690  00069A  502D               	movf	?___wmul,w,c
  7691  00069C  2642               	addwf	??_animation3,f,c
  7692  00069E  502E               	movf	?___wmul+1,w,c
  7693  0006A0  2243               	addwfc	??_animation3+1,f,c
  7694  0006A2  5049               	movf	animation3@j,w,c
  7695  0006A4  2642               	addwf	??_animation3,f,c
  7696  0006A6  504A               	movf	animation3@j+1,w,c
  7697  0006A8  2243               	addwfc	??_animation3+1,f,c
  7698  0006AA  C042  FFF6         	movff	??_animation3,tblptrl
  7699  0006AE  C043  FFF7         	movff	??_animation3+1,tblptrh
  7700  0006B2                     	if	0	;tblptru may be non-zero
  7701  0006B2                     	endif
  7702  0006B2                     	if	0	;tblptru may be non-zero
  7703  0006B2                     	endif
  7704  0006B2  0008               	tblrd		*
  7705  0006B4  50F5               	movf	tablat,w,c
  7706  0006B6  EC23  F017         	call	_set_led
  7707                           
  7708                           ;newmain.c: 925: else
  7709                           ;newmain.c: 926: break;
  7710  0006BA  4A49               	infsnz	animation3@j,f,c
  7711  0006BC  2A4A               	incf	animation3@j+1,f,c
  7712  0006BE  D7B8               	goto	l5887
  7713  0006C0                     u8260:
  7714  0006C0                     l5899:
  7715                           
  7716                           ;newmain.c: 927: }
  7717                           ;newmain.c: 928: write_display();
  7718  0006C0  EC2E  F016         	call	_write_display	;wreg free
  7719                           
  7720                           ;newmain.c: 929: _delay((unsigned long)((10)*(4000000/4000.0)));
  7721  0006C4  0E0D               	movlw	13
  7722  0006C6  6E42               	movwf	??_animation3& (0+255),c
  7723  0006C8  0EFC               	movlw	252
  7724  0006CA                     u10267:
  7725  0006CA  2EE8               	decfsz	wreg,f,c
  7726  0006CC  D7FE               	bra	u10267
  7727  0006CE  2E42               	decfsz	??_animation3& (0+255),f,c
  7728  0006D0  D7FC               	bra	u10267
  7729                           
  7730                           ;newmain.c: 930: for (j = 0; j < 26; j++) {
  7731  0006D2  0E00               	movlw	0
  7732  0006D4  6E4A               	movwf	animation3@j+1,c
  7733  0006D6  0E00               	movlw	0
  7734  0006D8  6E49               	movwf	animation3@j,c
  7735  0006DA                     l5905:
  7736  0006DA  BE4A               	btfsc	animation3@j+1,7,c
  7737  0006DC  D006               	goto	l426
  7738  0006DE  504A               	movf	animation3@j+1,w,c
  7739  0006E0  E144               	bnz	l5917
  7740  0006E2  0E1A               	movlw	26
  7741  0006E4  5C49               	subwf	animation3@j,w,c
  7742  0006E6  B0D8               	btfsc	status,0,c
  7743  0006E8  D040               	goto	u8290
  7744  0006EA                     l426:
  7745                           
  7746                           ;newmain.c: 931: if (circle[i][j] != 100)
  7747  0006EA  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7748  0006EE  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7749  0006F2  0E00               	movlw	0
  7750  0006F4  6E30               	movwf	___wmul@multiplicand+1,c
  7751  0006F6  0E1A               	movlw	26
  7752  0006F8  6E2F               	movwf	___wmul@multiplicand,c
  7753  0006FA  EC83  F018         	call	___wmul	;wreg free
  7754  0006FE  0E41               	movlw	low _circle
  7755  000700  6E42               	movwf	??_animation3& (0+255),c
  7756  000702  0E7C               	movlw	high _circle
  7757  000704  6E43               	movwf	(??_animation3+1)& (0+255),c
  7758  000706  502D               	movf	?___wmul,w,c
  7759  000708  2642               	addwf	??_animation3,f,c
  7760  00070A  502E               	movf	?___wmul+1,w,c
  7761  00070C  2243               	addwfc	??_animation3+1,f,c
  7762  00070E  5049               	movf	animation3@j,w,c
  7763  000710  2642               	addwf	??_animation3,f,c
  7764  000712  504A               	movf	animation3@j+1,w,c
  7765  000714  2243               	addwfc	??_animation3+1,f,c
  7766  000716  C042  FFF6         	movff	??_animation3,tblptrl
  7767  00071A  C043  FFF7         	movff	??_animation3+1,tblptrh
  7768  00071E                     	if	0	;tblptru may be non-zero
  7769  00071E                     	endif
  7770  00071E                     	if	0	;tblptru may be non-zero
  7771  00071E                     	endif
  7772  00071E  0008               	tblrd		*
  7773  000720  50F5               	movf	tablat,w,c
  7774  000722  0A64               	xorlw	100
  7775  000724  B4D8               	btfsc	status,2,c
  7776  000726  D021               	goto	u8290
  7777                           
  7778                           ;newmain.c: 932: clr_led(circle[i][j]);
  7779  000728  C047  F02D         	movff	animation3@i,___wmul@multiplier
  7780  00072C  C048  F02E         	movff	animation3@i+1,___wmul@multiplier+1
  7781  000730  0E00               	movlw	0
  7782  000732  6E30               	movwf	___wmul@multiplicand+1,c
  7783  000734  0E1A               	movlw	26
  7784  000736  6E2F               	movwf	___wmul@multiplicand,c
  7785  000738  EC83  F018         	call	___wmul	;wreg free
  7786  00073C  0E41               	movlw	low _circle
  7787  00073E  6E42               	movwf	??_animation3& (0+255),c
  7788  000740  0E7C               	movlw	high _circle
  7789  000742  6E43               	movwf	(??_animation3+1)& (0+255),c
  7790  000744  502D               	movf	?___wmul,w,c
  7791  000746  2642               	addwf	??_animation3,f,c
  7792  000748  502E               	movf	?___wmul+1,w,c
  7793  00074A  2243               	addwfc	??_animation3+1,f,c
  7794  00074C  5049               	movf	animation3@j,w,c
  7795  00074E  2642               	addwf	??_animation3,f,c
  7796  000750  504A               	movf	animation3@j+1,w,c
  7797  000752  2243               	addwfc	??_animation3+1,f,c
  7798  000754  C042  FFF6         	movff	??_animation3,tblptrl
  7799  000758  C043  FFF7         	movff	??_animation3+1,tblptrh
  7800  00075C                     	if	0	;tblptru may be non-zero
  7801  00075C                     	endif
  7802  00075C                     	if	0	;tblptru may be non-zero
  7803  00075C                     	endif
  7804  00075C  0008               	tblrd		*
  7805  00075E  50F5               	movf	tablat,w,c
  7806  000760  ECC8  F016         	call	_clr_led
  7807                           
  7808                           ;newmain.c: 933: else
  7809                           ;newmain.c: 934: break;
  7810  000764  4A49               	infsnz	animation3@j,f,c
  7811  000766  2A4A               	incf	animation3@j+1,f,c
  7812  000768  D7B8               	goto	l5905
  7813  00076A                     u8290:
  7814  00076A                     l5917:
  7815                           
  7816                           ;newmain.c: 935: }
  7817                           ;newmain.c: 936: write_display();
  7818  00076A  EC2E  F016         	call	_write_display	;wreg free
  7819  00076E  4A47               	infsnz	animation3@i,f,c
  7820  000770  2A48               	incf	animation3@i+1,f,c
  7821  000772  BE48               	btfsc	animation3@i+1,7,c
  7822  000774  D759               	goto	l420
  7823  000776  5048               	movf	animation3@i+1,w,c
  7824  000778  E101               	bnz	l430
  7825  00077A  D750               	goto	L14
  7826  00077C                     l430:
  7827  00077C  0012               	return		;funcret
  7828  00077E                     __end_of_animation3:
  7829                           	opt stack 0
  7830                           tblptru	equ	0xFF8
  7831                           tblptrh	equ	0xFF7
  7832                           tblptrl	equ	0xFF6
  7833                           tablat	equ	0xFF5
  7834                           prodh	equ	0xFF4
  7835                           prodl	equ	0xFF3
  7836                           intcon	equ	0xFF2
  7837                           intcon2	equ	0xFF1
  7838                           postinc0	equ	0xFEE
  7839                           wreg	equ	0xFE8
  7840                           indf2	equ	0xFDF
  7841                           postinc2	equ	0xFDE
  7842                           postdec2	equ	0xFDD
  7843                           fsr2h	equ	0xFDA
  7844                           fsr2l	equ	0xFD9
  7845                           status	equ	0xFD8
  7846                           
  7847 ;; *************** function _animation2 *****************
  7848 ;; Defined at:
  7849 ;;		line 750 in file "newmain.c"
  7850 ;; Parameters:    Size  Location     Type
  7851 ;;  m               1    wreg     unsigned char 
  7852 ;;  n               1   65[COMRAM] unsigned char 
  7853 ;;  h               1   66[COMRAM] unsigned char 
  7854 ;; Auto vars:     Size  Location     Type
  7855 ;;  m               1    0[BANK0 ] unsigned char 
  7856 ;;  j               2    9[BANK0 ] int 
  7857 ;;  i               2    7[BANK0 ] int 
  7858 ;;  x               2    5[BANK0 ] int 
  7859 ;;  row             2    3[BANK0 ] int 
  7860 ;;  col             2    1[BANK0 ] int 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  1    wreg      void 
  7863 ;; Registers used:
  7864 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7870 ;;      Params:         2       0       0       0       0       0       0
  7871 ;;      Locals:         0      11       0       0       0       0       0
  7872 ;;      Temps:          4       0       0       0       0       0       0
  7873 ;;      Totals:         6      11       0       0       0       0       0
  7874 ;;Total ram usage:       17 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:    7
  7877 ;; This function calls:
  7878 ;;		___wmul
  7879 ;;		_clr_led
  7880 ;;		_set_led
  7881 ;;		_write_display
  7882 ;; This function is called by:
  7883 ;;		_main
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           	psect	text8
  7888  000ECC                     __ptext8:
  7889                           	opt stack 0
  7890  000ECC                     _animation2:
  7891                           	opt stack 23
  7892                           
  7893                           ;incstack = 0
  7894                           ;animation2@m stored from wreg
  7895  000ECC  0100               	movlb	0	; () banked
  7896  000ECE  6FC4               	movwf	animation2@m& (0+255),b
  7897                           
  7898                           ;newmain.c: 751: int i = 0, j = 0, x = 0;
  7899  000ED0  0E00               	movlw	0
  7900  000ED2  0100               	movlb	0	; () banked
  7901  000ED4  6FCC               	movwf	(animation2@i+1)& (0+255),b
  7902  000ED6  0E00               	movlw	0
  7903  000ED8  6FCB               	movwf	animation2@i& (0+255),b
  7904  000EDA  0E00               	movlw	0
  7905  000EDC  6FCE               	movwf	(animation2@j+1)& (0+255),b
  7906  000EDE  0E00               	movlw	0
  7907  000EE0  6FCD               	movwf	animation2@j& (0+255),b
  7908  000EE2  0E00               	movlw	0
  7909  000EE4  6FCA               	movwf	(animation2@x+1)& (0+255),b
  7910  000EE6  0E00               	movlw	0
  7911  000EE8  6FC9               	movwf	animation2@x& (0+255),b
  7912                           
  7913                           ;newmain.c: 752: int row = 0, col = n % 4;
  7914  000EEA  0E00               	movlw	0
  7915  000EEC  6FC8               	movwf	(animation2@row+1)& (0+255),b
  7916  000EEE  0E00               	movlw	0
  7917  000EF0  6FC7               	movwf	animation2@row& (0+255),b
  7918                           
  7919                           ; BSR set to: 0
  7920  000EF2  C042  F044         	movff	animation2@n,??_animation2
  7921  000EF6  0E03               	movlw	3
  7922  000EF8  1644               	andwf	??_animation2,f,c
  7923  000EFA  5044               	movf	??_animation2,w,c
  7924  000EFC  6FC5               	movwf	animation2@col& (0+255),b
  7925  000EFE  6BC6               	clrf	(animation2@col+1)& (0+255),b
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;newmain.c: 753: for (i = 0; i < 8; i++) {
  7929  000F00  0E00               	movlw	0
  7930  000F02  6FCC               	movwf	(animation2@i+1)& (0+255),b
  7931  000F04  0E00               	movlw	0
  7932  000F06  6FCB               	movwf	animation2@i& (0+255),b
  7933  000F08                     l5475:
  7934                           
  7935                           ; BSR set to: 0
  7936  000F08  BFCC               	btfsc	(animation2@i+1)& (0+255),7,b
  7937  000F0A  D006               	goto	l318
  7938  000F0C  51CC               	movf	(animation2@i+1)& (0+255),w,b
  7939  000F0E  E150               	bnz	l5497
  7940  000F10  0E08               	movlw	8
  7941  000F12  5DCB               	subwf	animation2@i& (0+255),w,b
  7942  000F14  B0D8               	btfsc	status,0,c
  7943  000F16  D04C               	goto	u7500
  7944  000F18                     l318:
  7945                           
  7946                           ; BSR set to: 0
  7947                           ;newmain.c: 754: for (j = 0; j < 8; j++) {
  7948                           
  7949                           ; BSR set to: 0
  7950  000F18  0E00               	movlw	0
  7951  000F1A  6FCE               	movwf	(animation2@j+1)& (0+255),b
  7952  000F1C  0E00               	movlw	0
  7953  000F1E  6FCD               	movwf	animation2@j& (0+255),b
  7954  000F20                     l5481:
  7955                           
  7956                           ; BSR set to: 0
  7957  000F20  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  7958  000F22  D006               	goto	l320
  7959  000F24  51CE               	movf	(animation2@j+1)& (0+255),w,b
  7960  000F26  E141               	bnz	l5493
  7961  000F28  0E08               	movlw	8
  7962  000F2A  5DCD               	subwf	animation2@j& (0+255),w,b
  7963  000F2C  B0D8               	btfsc	status,0,c
  7964  000F2E  D03D               	goto	u7490
  7965  000F30                     l320:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;newmain.c: 755: if (h == Buttons[i][j]) {
  7969                           
  7970                           ; BSR set to: 0
  7971  000F30  C0CB  F044         	movff	animation2@i,??_animation2
  7972  000F34  C0CC  F045         	movff	animation2@i+1,??_animation2+1
  7973  000F38  90D8               	bcf	status,0,c
  7974  000F3A  3644               	rlcf	??_animation2,f,c
  7975  000F3C  3645               	rlcf	??_animation2+1,f,c
  7976  000F3E  90D8               	bcf	status,0,c
  7977  000F40  3644               	rlcf	??_animation2,f,c
  7978  000F42  3645               	rlcf	??_animation2+1,f,c
  7979  000F44  90D8               	bcf	status,0,c
  7980  000F46  3644               	rlcf	??_animation2,f,c
  7981  000F48  3645               	rlcf	??_animation2+1,f,c
  7982  000F4A  0EF9               	movlw	low _Buttons
  7983  000F4C  6E46               	movwf	(??_animation2+2)& (0+255),c
  7984  000F4E  0E7E               	movlw	high _Buttons
  7985  000F50  6E47               	movwf	(??_animation2+3)& (0+255),c
  7986  000F52  5044               	movf	??_animation2,w,c
  7987  000F54  2646               	addwf	??_animation2+2,f,c
  7988  000F56  5045               	movf	??_animation2+1,w,c
  7989  000F58  2247               	addwfc	??_animation2+3,f,c
  7990  000F5A  51CD               	movf	animation2@j& (0+255),w,b
  7991  000F5C  2646               	addwf	??_animation2+2,f,c
  7992  000F5E  51CE               	movf	(animation2@j+1)& (0+255),w,b
  7993  000F60  2247               	addwfc	??_animation2+3,f,c
  7994  000F62  C046  FFF6         	movff	??_animation2+2,tblptrl
  7995  000F66  C047  FFF7         	movff	??_animation2+3,tblptrh
  7996  000F6A                     	if	0	;tblptru may be non-zero
  7997  000F6A                     	endif
  7998  000F6A                     	if	0	;tblptru may be non-zero
  7999  000F6A                     	endif
  8000  000F6A  0008               	tblrd		*
  8001  000F6C  50F5               	movf	tablat,w,c
  8002  000F6E  1843               	xorwf	animation2@h,w,c
  8003  000F70  A4D8               	btfss	status,2,c
  8004  000F72  D018               	goto	l322
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;newmain.c: 756: row = Buttons[i][0];
  8008  000F74  C0CB  F044         	movff	animation2@i,??_animation2
  8009  000F78  C0CC  F045         	movff	animation2@i+1,??_animation2+1
  8010  000F7C  90D8               	bcf	status,0,c
  8011  000F7E  3644               	rlcf	??_animation2,f,c
  8012  000F80  3645               	rlcf	??_animation2+1,f,c
  8013  000F82  90D8               	bcf	status,0,c
  8014  000F84  3644               	rlcf	??_animation2,f,c
  8015  000F86  3645               	rlcf	??_animation2+1,f,c
  8016  000F88  90D8               	bcf	status,0,c
  8017  000F8A  3644               	rlcf	??_animation2,f,c
  8018  000F8C  3645               	rlcf	??_animation2+1,f,c
  8019  000F8E  0EF9               	movlw	low _Buttons
  8020  000F90  2444               	addwf	??_animation2,w,c
  8021  000F92  6EF6               	movwf	tblptrl,c
  8022  000F94  0E7E               	movlw	high _Buttons
  8023  000F96  2045               	addwfc	??_animation2+1,w,c
  8024  000F98  6EF7               	movwf	tblptrh,c
  8025  000F9A                     	if	0	;There are less than 3 active tblptr bytes
  8026  000F9A                     	endif
  8027  000F9A  0008               	tblrd		*
  8028  000F9C  50F5               	movf	tablat,w,c
  8029  000F9E  6FC7               	movwf	animation2@row& (0+255),b
  8030  000FA0  6BC8               	clrf	(animation2@row+1)& (0+255),b
  8031                           
  8032                           ;newmain.c: 757: break;
  8033  000FA2  D003               	goto	u7490
  8034  000FA4                     l322:
  8035                           
  8036                           ; BSR set to: 0
  8037                           
  8038                           ; BSR set to: 0
  8039  000FA4  4BCD               	infsnz	animation2@j& (0+255),f,b
  8040  000FA6  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8041  000FA8  D7BB               	goto	l5481
  8042  000FAA                     u7490:
  8043  000FAA                     l5493:
  8044                           
  8045                           ; BSR set to: 0
  8046  000FAA  4BCB               	infsnz	animation2@i& (0+255),f,b
  8047  000FAC  2BCC               	incf	(animation2@i+1)& (0+255),f,b
  8048  000FAE  D7AC               	goto	l5475
  8049  000FB0                     u7500:
  8050  000FB0                     l5497:
  8051                           
  8052                           ; BSR set to: 0
  8053                           ;newmain.c: 758: }
  8054                           ;newmain.c: 759: }
  8055                           ;newmain.c: 760: }
  8056                           ;newmain.c: 762: if (m == 0) {
  8057  000FB0  51C4               	movf	animation2@m& (0+255),w,b
  8058  000FB2  A4D8               	btfss	status,2,c
  8059  000FB4  D0CD               	goto	l323
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;newmain.c: 763: for (i = col; i < 8; i++) {
  8063  000FB6  C0C5  F0CB         	movff	animation2@col,animation2@i
  8064  000FBA  C0C6  F0CC         	movff	animation2@col+1,animation2@i+1
  8065                           
  8066                           ; BSR set to: 0
  8067  000FBE  BFCC               	btfsc	(animation2@i+1)& (0+255),7,b
  8068  000FC0  D008               	goto	l324
  8069  000FC2  51CC               	movf	(animation2@i+1)& (0+255),w,b
  8070  000FC4  E105               	bnz	u7520
  8071  000FC6  0E08               	movlw	8
  8072  000FC8  5DCB               	subwf	animation2@i& (0+255),w,b
  8073  000FCA  B0D8               	btfsc	status,0,c
  8074  000FCC  0012               	return	
  8075  000FCE  D001               	goto	l324
  8076  000FD0                     u7520:
  8077                           
  8078                           ; BSR set to: 0
  8079  000FD0  0012               	return	
  8080  000FD2                     l324:
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;newmain.c: 764: for (j = 0; j < 3; j++) {
  8084                           
  8085                           ; BSR set to: 0
  8086  000FD2  0E00               	movlw	0
  8087  000FD4  6FCE               	movwf	(animation2@j+1)& (0+255),b
  8088  000FD6  0E00               	movlw	0
  8089  000FD8  6FCD               	movwf	animation2@j& (0+255),b
  8090  000FDA                     l5507:
  8091                           
  8092                           ; BSR set to: 0
  8093  000FDA  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  8094  000FDC  D006               	goto	l326
  8095  000FDE  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8096  000FE0  E14D               	bnz	l5521
  8097  000FE2  0E03               	movlw	3
  8098  000FE4  5DCD               	subwf	animation2@j& (0+255),w,b
  8099  000FE6  B0D8               	btfsc	status,0,c
  8100  000FE8  D049               	goto	u7550
  8101  000FEA                     l326:
  8102                           
  8103                           ; BSR set to: 0
  8104                           ;newmain.c: 765: if (horizental_flash[i][j] != 100) {
  8105                           
  8106                           ; BSR set to: 0
  8107  000FEA  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8108  000FEE  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8109  000FF2  0E00               	movlw	0
  8110  000FF4  6E30               	movwf	___wmul@multiplicand+1,c
  8111  000FF6  0E03               	movlw	3
  8112  000FF8  6E2F               	movwf	___wmul@multiplicand,c
  8113  000FFA  EC83  F018         	call	___wmul	;wreg free
  8114  000FFE  0EB3               	movlw	low _horizental_flash
  8115  001000  6E44               	movwf	??_animation2& (0+255),c
  8116  001002  0E7F               	movlw	high _horizental_flash
  8117  001004  6E45               	movwf	(??_animation2+1)& (0+255),c
  8118  001006  502D               	movf	?___wmul,w,c
  8119  001008  2644               	addwf	??_animation2,f,c
  8120  00100A  502E               	movf	?___wmul+1,w,c
  8121  00100C  2245               	addwfc	??_animation2+1,f,c
  8122  00100E  0100               	movlb	0	; () banked
  8123  001010  51CD               	movf	animation2@j& (0+255),w,b
  8124  001012  2644               	addwf	??_animation2,f,c
  8125  001014  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8126  001016  2245               	addwfc	??_animation2+1,f,c
  8127  001018  C044  FFF6         	movff	??_animation2,tblptrl
  8128  00101C  C045  FFF7         	movff	??_animation2+1,tblptrh
  8129  001020                     	if	0	;tblptru may be non-zero
  8130  001020                     	endif
  8131  001020                     	if	0	;tblptru may be non-zero
  8132  001020                     	endif
  8133  001020  0008               	tblrd		*
  8134  001022  50F5               	movf	tablat,w,c
  8135  001024  0A64               	xorlw	100
  8136  001026  B4D8               	btfsc	status,2,c
  8137  001028  D029               	goto	u7550
  8138                           
  8139                           ; BSR set to: 0
  8140                           ;newmain.c: 766: x = horizental_flash[i][j] + row;
  8141  00102A  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8142  00102E  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8143  001032  0E00               	movlw	0
  8144  001034  6E30               	movwf	___wmul@multiplicand+1,c
  8145  001036  0E03               	movlw	3
  8146  001038  6E2F               	movwf	___wmul@multiplicand,c
  8147  00103A  EC83  F018         	call	___wmul	;wreg free
  8148  00103E  0EB3               	movlw	low _horizental_flash
  8149  001040  6E44               	movwf	??_animation2& (0+255),c
  8150  001042  0E7F               	movlw	high _horizental_flash
  8151  001044  6E45               	movwf	(??_animation2+1)& (0+255),c
  8152  001046  502D               	movf	?___wmul,w,c
  8153  001048  2644               	addwf	??_animation2,f,c
  8154  00104A  502E               	movf	?___wmul+1,w,c
  8155  00104C  2245               	addwfc	??_animation2+1,f,c
  8156  00104E  0100               	movlb	0	; () banked
  8157  001050  51CD               	movf	animation2@j& (0+255),w,b
  8158  001052  2644               	addwf	??_animation2,f,c
  8159  001054  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8160  001056  2245               	addwfc	??_animation2+1,f,c
  8161  001058  C044  FFF6         	movff	??_animation2,tblptrl
  8162  00105C  C045  FFF7         	movff	??_animation2+1,tblptrh
  8163  001060                     	if	0	;tblptru may be non-zero
  8164  001060                     	endif
  8165  001060                     	if	0	;tblptru may be non-zero
  8166  001060                     	endif
  8167  001060  0008               	tblrd		*
  8168  001062  50F5               	movf	tablat,w,c
  8169  001064  25C7               	addwf	animation2@row& (0+255),w,b
  8170  001066  6FC9               	movwf	animation2@x& (0+255),b
  8171  001068  0E00               	movlw	0
  8172  00106A  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  8173  00106C  6FCA               	movwf	(animation2@x+1)& (0+255),b
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;newmain.c: 767: set_led(x);
  8177  00106E  51C9               	movf	animation2@x& (0+255),w,b
  8178  001070  EC23  F017         	call	_set_led
  8179                           
  8180                           ;newmain.c: 769: break;
  8181                           
  8182                           ;newmain.c: 768: } else
  8183  001074  0100               	movlb	0	; () banked
  8184  001076  4BCD               	infsnz	animation2@j& (0+255),f,b
  8185  001078  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8186  00107A  D7AF               	goto	l5507
  8187  00107C                     u7550:
  8188  00107C                     l5521:
  8189                           
  8190                           ;newmain.c: 770: }
  8191                           ;newmain.c: 771: write_display();
  8192  00107C  EC2E  F016         	call	_write_display	;wreg free
  8193                           
  8194                           ;newmain.c: 772: _delay((unsigned long)((10)*(4000000/4000.0)));
  8195  001080  0E0D               	movlw	13
  8196  001082  6E44               	movwf	??_animation2& (0+255),c
  8197  001084  0EFC               	movlw	252
  8198  001086                     u10277:
  8199  001086  2EE8               	decfsz	wreg,f,c
  8200  001088  D7FE               	bra	u10277
  8201  00108A  2E44               	decfsz	??_animation2& (0+255),f,c
  8202  00108C  D7FC               	bra	u10277
  8203                           
  8204                           ;newmain.c: 773: for (j = 0; j < 3; j++) {
  8205  00108E  0E00               	movlw	0
  8206  001090  0100               	movlb	0	; () banked
  8207  001092  6FCE               	movwf	(animation2@j+1)& (0+255),b
  8208  001094  0E00               	movlw	0
  8209  001096  6FCD               	movwf	animation2@j& (0+255),b
  8210  001098                     l5527:
  8211                           
  8212                           ; BSR set to: 0
  8213  001098  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  8214  00109A  D006               	goto	l330
  8215  00109C  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8216  00109E  E14D               	bnz	l5541
  8217  0010A0  0E03               	movlw	3
  8218  0010A2  5DCD               	subwf	animation2@j& (0+255),w,b
  8219  0010A4  B0D8               	btfsc	status,0,c
  8220  0010A6  D049               	goto	u7580
  8221  0010A8                     l330:
  8222                           
  8223                           ; BSR set to: 0
  8224                           ;newmain.c: 774: if (horizental_flash[i][j] != 100) {
  8225                           
  8226                           ; BSR set to: 0
  8227  0010A8  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8228  0010AC  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8229  0010B0  0E00               	movlw	0
  8230  0010B2  6E30               	movwf	___wmul@multiplicand+1,c
  8231  0010B4  0E03               	movlw	3
  8232  0010B6  6E2F               	movwf	___wmul@multiplicand,c
  8233  0010B8  EC83  F018         	call	___wmul	;wreg free
  8234  0010BC  0EB3               	movlw	low _horizental_flash
  8235  0010BE  6E44               	movwf	??_animation2& (0+255),c
  8236  0010C0  0E7F               	movlw	high _horizental_flash
  8237  0010C2  6E45               	movwf	(??_animation2+1)& (0+255),c
  8238  0010C4  502D               	movf	?___wmul,w,c
  8239  0010C6  2644               	addwf	??_animation2,f,c
  8240  0010C8  502E               	movf	?___wmul+1,w,c
  8241  0010CA  2245               	addwfc	??_animation2+1,f,c
  8242  0010CC  0100               	movlb	0	; () banked
  8243  0010CE  51CD               	movf	animation2@j& (0+255),w,b
  8244  0010D0  2644               	addwf	??_animation2,f,c
  8245  0010D2  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8246  0010D4  2245               	addwfc	??_animation2+1,f,c
  8247  0010D6  C044  FFF6         	movff	??_animation2,tblptrl
  8248  0010DA  C045  FFF7         	movff	??_animation2+1,tblptrh
  8249  0010DE                     	if	0	;tblptru may be non-zero
  8250  0010DE                     	endif
  8251  0010DE                     	if	0	;tblptru may be non-zero
  8252  0010DE                     	endif
  8253  0010DE  0008               	tblrd		*
  8254  0010E0  50F5               	movf	tablat,w,c
  8255  0010E2  0A64               	xorlw	100
  8256  0010E4  B4D8               	btfsc	status,2,c
  8257  0010E6  D029               	goto	u7580
  8258                           
  8259                           ; BSR set to: 0
  8260                           ;newmain.c: 775: x = horizental_flash[i][j] + row;
  8261  0010E8  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8262  0010EC  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8263  0010F0  0E00               	movlw	0
  8264  0010F2  6E30               	movwf	___wmul@multiplicand+1,c
  8265  0010F4  0E03               	movlw	3
  8266  0010F6  6E2F               	movwf	___wmul@multiplicand,c
  8267  0010F8  EC83  F018         	call	___wmul	;wreg free
  8268  0010FC  0EB3               	movlw	low _horizental_flash
  8269  0010FE  6E44               	movwf	??_animation2& (0+255),c
  8270  001100  0E7F               	movlw	high _horizental_flash
  8271  001102  6E45               	movwf	(??_animation2+1)& (0+255),c
  8272  001104  502D               	movf	?___wmul,w,c
  8273  001106  2644               	addwf	??_animation2,f,c
  8274  001108  502E               	movf	?___wmul+1,w,c
  8275  00110A  2245               	addwfc	??_animation2+1,f,c
  8276  00110C  0100               	movlb	0	; () banked
  8277  00110E  51CD               	movf	animation2@j& (0+255),w,b
  8278  001110  2644               	addwf	??_animation2,f,c
  8279  001112  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8280  001114  2245               	addwfc	??_animation2+1,f,c
  8281  001116  C044  FFF6         	movff	??_animation2,tblptrl
  8282  00111A  C045  FFF7         	movff	??_animation2+1,tblptrh
  8283  00111E                     	if	0	;tblptru may be non-zero
  8284  00111E                     	endif
  8285  00111E                     	if	0	;tblptru may be non-zero
  8286  00111E                     	endif
  8287  00111E  0008               	tblrd		*
  8288  001120  50F5               	movf	tablat,w,c
  8289  001122  25C7               	addwf	animation2@row& (0+255),w,b
  8290  001124  6FC9               	movwf	animation2@x& (0+255),b
  8291  001126  0E00               	movlw	0
  8292  001128  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  8293  00112A  6FCA               	movwf	(animation2@x+1)& (0+255),b
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;newmain.c: 776: clr_led(x);
  8297  00112C  51C9               	movf	animation2@x& (0+255),w,b
  8298  00112E  ECC8  F016         	call	_clr_led
  8299                           
  8300                           ;newmain.c: 778: break;
  8301                           
  8302                           ;newmain.c: 777: } else
  8303  001132  0100               	movlb	0	; () banked
  8304  001134  4BCD               	infsnz	animation2@j& (0+255),f,b
  8305  001136  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8306  001138  D7AF               	goto	l5527
  8307  00113A                     u7580:
  8308  00113A                     l5541:
  8309                           
  8310                           ;newmain.c: 779: }
  8311                           ;newmain.c: 780: write_display();
  8312  00113A  EC2E  F016         	call	_write_display	;wreg free
  8313  00113E  0100               	movlb	0	; () banked
  8314  001140  4BCB               	infsnz	animation2@i& (0+255),f,b
  8315  001142  2BCC               	incf	(animation2@i+1)& (0+255),f,b
  8316                           
  8317                           ; BSR set to: 0
  8318  001144  BFCC               	btfsc	(animation2@i+1)& (0+255),7,b
  8319  001146  D745               	goto	l324
  8320  001148  51CC               	movf	(animation2@i+1)& (0+255),w,b
  8321  00114A  E101               	bnz	u7590
  8322  00114C  D73C               	goto	L15
  8323  00114E                     u7590:
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;newmain.c: 781: }
  8327                           ;newmain.c: 782: } else if (m == 1) {
  8328  00114E  0012               	return	
  8329  001150                     l323:
  8330                           
  8331                           ; BSR set to: 0
  8332                           
  8333                           ; BSR set to: 0
  8334  001150  05C4               	decf	animation2@m& (0+255),w,b
  8335  001152  A4D8               	btfss	status,2,c
  8336  001154  D0C3               	goto	l335
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;newmain.c: 783: for (i = col + 2; i >= 0; i--) {
  8340  001156  0E02               	movlw	2
  8341  001158  25C5               	addwf	animation2@col& (0+255),w,b
  8342  00115A  6FCB               	movwf	animation2@i& (0+255),b
  8343  00115C  0E00               	movlw	0
  8344  00115E  21C6               	addwfc	(animation2@col+1)& (0+255),w,b
  8345  001160  6FCC               	movwf	(animation2@i+1)& (0+255),b
  8346  001162  BFCC               	btfsc	(animation2@i+1)& (0+255),7,b
  8347  001164  0012               	return	
  8348                           
  8349                           ; BSR set to: 0
  8350                           ;newmain.c: 784: for (j = 0; j < 3; j++) {
  8351                           
  8352                           ; BSR set to: 0
  8353                           
  8354                           ; BSR set to: 0
  8355  001166  0E00               	movlw	0
  8356  001168  6FCE               	movwf	(animation2@j+1)& (0+255),b
  8357  00116A  0E00               	movlw	0
  8358  00116C  6FCD               	movwf	animation2@j& (0+255),b
  8359  00116E                     l5555:
  8360                           
  8361                           ; BSR set to: 0
  8362  00116E  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  8363  001170  D006               	goto	l338
  8364  001172  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8365  001174  E14D               	bnz	l5569
  8366  001176  0E03               	movlw	3
  8367  001178  5DCD               	subwf	animation2@j& (0+255),w,b
  8368  00117A  B0D8               	btfsc	status,0,c
  8369  00117C  D049               	goto	u7640
  8370  00117E                     l338:
  8371                           
  8372                           ; BSR set to: 0
  8373                           ;newmain.c: 785: if (horizental_flash[i][j] != 100) {
  8374                           
  8375                           ; BSR set to: 0
  8376  00117E  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8377  001182  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8378  001186  0E00               	movlw	0
  8379  001188  6E30               	movwf	___wmul@multiplicand+1,c
  8380  00118A  0E03               	movlw	3
  8381  00118C  6E2F               	movwf	___wmul@multiplicand,c
  8382  00118E  EC83  F018         	call	___wmul	;wreg free
  8383  001192  0EB3               	movlw	low _horizental_flash
  8384  001194  6E44               	movwf	??_animation2& (0+255),c
  8385  001196  0E7F               	movlw	high _horizental_flash
  8386  001198  6E45               	movwf	(??_animation2+1)& (0+255),c
  8387  00119A  502D               	movf	?___wmul,w,c
  8388  00119C  2644               	addwf	??_animation2,f,c
  8389  00119E  502E               	movf	?___wmul+1,w,c
  8390  0011A0  2245               	addwfc	??_animation2+1,f,c
  8391  0011A2  0100               	movlb	0	; () banked
  8392  0011A4  51CD               	movf	animation2@j& (0+255),w,b
  8393  0011A6  2644               	addwf	??_animation2,f,c
  8394  0011A8  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8395  0011AA  2245               	addwfc	??_animation2+1,f,c
  8396  0011AC  C044  FFF6         	movff	??_animation2,tblptrl
  8397  0011B0  C045  FFF7         	movff	??_animation2+1,tblptrh
  8398  0011B4                     	if	0	;tblptru may be non-zero
  8399  0011B4                     	endif
  8400  0011B4                     	if	0	;tblptru may be non-zero
  8401  0011B4                     	endif
  8402  0011B4  0008               	tblrd		*
  8403  0011B6  50F5               	movf	tablat,w,c
  8404  0011B8  0A64               	xorlw	100
  8405  0011BA  B4D8               	btfsc	status,2,c
  8406  0011BC  D029               	goto	u7640
  8407                           
  8408                           ; BSR set to: 0
  8409                           ;newmain.c: 786: x = horizental_flash[i][j] + row;
  8410  0011BE  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8411  0011C2  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8412  0011C6  0E00               	movlw	0
  8413  0011C8  6E30               	movwf	___wmul@multiplicand+1,c
  8414  0011CA  0E03               	movlw	3
  8415  0011CC  6E2F               	movwf	___wmul@multiplicand,c
  8416  0011CE  EC83  F018         	call	___wmul	;wreg free
  8417  0011D2  0EB3               	movlw	low _horizental_flash
  8418  0011D4  6E44               	movwf	??_animation2& (0+255),c
  8419  0011D6  0E7F               	movlw	high _horizental_flash
  8420  0011D8  6E45               	movwf	(??_animation2+1)& (0+255),c
  8421  0011DA  502D               	movf	?___wmul,w,c
  8422  0011DC  2644               	addwf	??_animation2,f,c
  8423  0011DE  502E               	movf	?___wmul+1,w,c
  8424  0011E0  2245               	addwfc	??_animation2+1,f,c
  8425  0011E2  0100               	movlb	0	; () banked
  8426  0011E4  51CD               	movf	animation2@j& (0+255),w,b
  8427  0011E6  2644               	addwf	??_animation2,f,c
  8428  0011E8  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8429  0011EA  2245               	addwfc	??_animation2+1,f,c
  8430  0011EC  C044  FFF6         	movff	??_animation2,tblptrl
  8431  0011F0  C045  FFF7         	movff	??_animation2+1,tblptrh
  8432  0011F4                     	if	0	;tblptru may be non-zero
  8433  0011F4                     	endif
  8434  0011F4                     	if	0	;tblptru may be non-zero
  8435  0011F4                     	endif
  8436  0011F4  0008               	tblrd		*
  8437  0011F6  50F5               	movf	tablat,w,c
  8438  0011F8  25C7               	addwf	animation2@row& (0+255),w,b
  8439  0011FA  6FC9               	movwf	animation2@x& (0+255),b
  8440  0011FC  0E00               	movlw	0
  8441  0011FE  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  8442  001200  6FCA               	movwf	(animation2@x+1)& (0+255),b
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;newmain.c: 787: set_led(x);
  8446  001202  51C9               	movf	animation2@x& (0+255),w,b
  8447  001204  EC23  F017         	call	_set_led
  8448                           
  8449                           ;newmain.c: 789: break;
  8450                           
  8451                           ;newmain.c: 788: } else
  8452  001208  0100               	movlb	0	; () banked
  8453  00120A  4BCD               	infsnz	animation2@j& (0+255),f,b
  8454  00120C  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8455  00120E  D7AF               	goto	l5555
  8456  001210                     u7640:
  8457  001210                     l5569:
  8458                           
  8459                           ;newmain.c: 790: }
  8460                           ;newmain.c: 791: write_display();
  8461  001210  EC2E  F016         	call	_write_display	;wreg free
  8462                           
  8463                           ;newmain.c: 792: _delay((unsigned long)((10)*(4000000/4000.0)));
  8464  001214  0E0D               	movlw	13
  8465  001216  6E44               	movwf	??_animation2& (0+255),c
  8466  001218  0EFC               	movlw	252
  8467  00121A                     u10287:
  8468  00121A  2EE8               	decfsz	wreg,f,c
  8469  00121C  D7FE               	bra	u10287
  8470  00121E  2E44               	decfsz	??_animation2& (0+255),f,c
  8471  001220  D7FC               	bra	u10287
  8472                           
  8473                           ;newmain.c: 793: for (j = 0; j < 3; j++) {
  8474  001222  0E00               	movlw	0
  8475  001224  0100               	movlb	0	; () banked
  8476  001226  6FCE               	movwf	(animation2@j+1)& (0+255),b
  8477  001228  0E00               	movlw	0
  8478  00122A  6FCD               	movwf	animation2@j& (0+255),b
  8479  00122C                     l5575:
  8480                           
  8481                           ; BSR set to: 0
  8482  00122C  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  8483  00122E  D006               	goto	l342
  8484  001230  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8485  001232  E14D               	bnz	l5589
  8486  001234  0E03               	movlw	3
  8487  001236  5DCD               	subwf	animation2@j& (0+255),w,b
  8488  001238  B0D8               	btfsc	status,0,c
  8489  00123A  D049               	goto	u7670
  8490  00123C                     l342:
  8491                           
  8492                           ; BSR set to: 0
  8493                           ;newmain.c: 794: if (horizental_flash[i][j] != 100) {
  8494                           
  8495                           ; BSR set to: 0
  8496  00123C  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8497  001240  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8498  001244  0E00               	movlw	0
  8499  001246  6E30               	movwf	___wmul@multiplicand+1,c
  8500  001248  0E03               	movlw	3
  8501  00124A  6E2F               	movwf	___wmul@multiplicand,c
  8502  00124C  EC83  F018         	call	___wmul	;wreg free
  8503  001250  0EB3               	movlw	low _horizental_flash
  8504  001252  6E44               	movwf	??_animation2& (0+255),c
  8505  001254  0E7F               	movlw	high _horizental_flash
  8506  001256  6E45               	movwf	(??_animation2+1)& (0+255),c
  8507  001258  502D               	movf	?___wmul,w,c
  8508  00125A  2644               	addwf	??_animation2,f,c
  8509  00125C  502E               	movf	?___wmul+1,w,c
  8510  00125E  2245               	addwfc	??_animation2+1,f,c
  8511  001260  0100               	movlb	0	; () banked
  8512  001262  51CD               	movf	animation2@j& (0+255),w,b
  8513  001264  2644               	addwf	??_animation2,f,c
  8514  001266  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8515  001268  2245               	addwfc	??_animation2+1,f,c
  8516  00126A  C044  FFF6         	movff	??_animation2,tblptrl
  8517  00126E  C045  FFF7         	movff	??_animation2+1,tblptrh
  8518  001272                     	if	0	;tblptru may be non-zero
  8519  001272                     	endif
  8520  001272                     	if	0	;tblptru may be non-zero
  8521  001272                     	endif
  8522  001272  0008               	tblrd		*
  8523  001274  50F5               	movf	tablat,w,c
  8524  001276  0A64               	xorlw	100
  8525  001278  B4D8               	btfsc	status,2,c
  8526  00127A  D029               	goto	u7670
  8527                           
  8528                           ; BSR set to: 0
  8529                           ;newmain.c: 795: x = horizental_flash[i][j] + row;
  8530  00127C  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8531  001280  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8532  001284  0E00               	movlw	0
  8533  001286  6E30               	movwf	___wmul@multiplicand+1,c
  8534  001288  0E03               	movlw	3
  8535  00128A  6E2F               	movwf	___wmul@multiplicand,c
  8536  00128C  EC83  F018         	call	___wmul	;wreg free
  8537  001290  0EB3               	movlw	low _horizental_flash
  8538  001292  6E44               	movwf	??_animation2& (0+255),c
  8539  001294  0E7F               	movlw	high _horizental_flash
  8540  001296  6E45               	movwf	(??_animation2+1)& (0+255),c
  8541  001298  502D               	movf	?___wmul,w,c
  8542  00129A  2644               	addwf	??_animation2,f,c
  8543  00129C  502E               	movf	?___wmul+1,w,c
  8544  00129E  2245               	addwfc	??_animation2+1,f,c
  8545  0012A0  0100               	movlb	0	; () banked
  8546  0012A2  51CD               	movf	animation2@j& (0+255),w,b
  8547  0012A4  2644               	addwf	??_animation2,f,c
  8548  0012A6  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8549  0012A8  2245               	addwfc	??_animation2+1,f,c
  8550  0012AA  C044  FFF6         	movff	??_animation2,tblptrl
  8551  0012AE  C045  FFF7         	movff	??_animation2+1,tblptrh
  8552  0012B2                     	if	0	;tblptru may be non-zero
  8553  0012B2                     	endif
  8554  0012B2                     	if	0	;tblptru may be non-zero
  8555  0012B2                     	endif
  8556  0012B2  0008               	tblrd		*
  8557  0012B4  50F5               	movf	tablat,w,c
  8558  0012B6  25C7               	addwf	animation2@row& (0+255),w,b
  8559  0012B8  6FC9               	movwf	animation2@x& (0+255),b
  8560  0012BA  0E00               	movlw	0
  8561  0012BC  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  8562  0012BE  6FCA               	movwf	(animation2@x+1)& (0+255),b
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;newmain.c: 796: clr_led(x);
  8566  0012C0  51C9               	movf	animation2@x& (0+255),w,b
  8567  0012C2  ECC8  F016         	call	_clr_led
  8568                           
  8569                           ;newmain.c: 798: break;
  8570                           
  8571                           ;newmain.c: 797: } else
  8572  0012C6  0100               	movlb	0	; () banked
  8573  0012C8  4BCD               	infsnz	animation2@j& (0+255),f,b
  8574  0012CA  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8575  0012CC  D7AF               	goto	l5575
  8576  0012CE                     u7670:
  8577  0012CE                     l5589:
  8578                           
  8579                           ;newmain.c: 799: }
  8580                           ;newmain.c: 800: write_display();
  8581  0012CE  EC2E  F016         	call	_write_display	;wreg free
  8582  0012D2  0100               	movlb	0	; () banked
  8583  0012D4  07CB               	decf	animation2@i& (0+255),f,b
  8584  0012D6  A0D8               	btfss	status,0,c
  8585  0012D8  07CC               	decf	(animation2@i+1)& (0+255),f,b
  8586  0012DA  D743               	goto	L16
  8587  0012DC                     l335:
  8588                           
  8589                           ; BSR set to: 0
  8590                           
  8591                           ; BSR set to: 0
  8592  0012DC  0E02               	movlw	2
  8593  0012DE  19C4               	xorwf	animation2@m& (0+255),w,b
  8594  0012E0  A4D8               	btfss	status,2,c
  8595  0012E2  D0CD               	goto	l347
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;newmain.c: 803: for (i = col; i < 7; i++) {
  8599  0012E4  C0C5  F0CB         	movff	animation2@col,animation2@i
  8600  0012E8  C0C6  F0CC         	movff	animation2@col+1,animation2@i+1
  8601                           
  8602                           ; BSR set to: 0
  8603  0012EC  BFCC               	btfsc	(animation2@i+1)& (0+255),7,b
  8604  0012EE  D008               	goto	l348
  8605  0012F0  51CC               	movf	(animation2@i+1)& (0+255),w,b
  8606  0012F2  E105               	bnz	u7700
  8607  0012F4  0E07               	movlw	7
  8608  0012F6  5DCB               	subwf	animation2@i& (0+255),w,b
  8609  0012F8  B0D8               	btfsc	status,0,c
  8610  0012FA  0012               	return	
  8611  0012FC  D001               	goto	l348
  8612  0012FE                     u7700:
  8613                           
  8614                           ; BSR set to: 0
  8615  0012FE  0012               	return	
  8616  001300                     l348:
  8617                           
  8618                           ; BSR set to: 0
  8619                           ;newmain.c: 804: for (j = 0; j < 3; j++) {
  8620                           
  8621                           ; BSR set to: 0
  8622  001300  0E00               	movlw	0
  8623  001302  6FCE               	movwf	(animation2@j+1)& (0+255),b
  8624  001304  0E00               	movlw	0
  8625  001306  6FCD               	movwf	animation2@j& (0+255),b
  8626  001308                     l5605:
  8627                           
  8628                           ; BSR set to: 0
  8629  001308  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  8630  00130A  D006               	goto	l350
  8631  00130C  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8632  00130E  E14D               	bnz	l5619
  8633  001310  0E03               	movlw	3
  8634  001312  5DCD               	subwf	animation2@j& (0+255),w,b
  8635  001314  B0D8               	btfsc	status,0,c
  8636  001316  D049               	goto	u7730
  8637  001318                     l350:
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;newmain.c: 805: if (horizental_flash[i][j] != 100) {
  8641                           
  8642                           ; BSR set to: 0
  8643  001318  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8644  00131C  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8645  001320  0E00               	movlw	0
  8646  001322  6E30               	movwf	___wmul@multiplicand+1,c
  8647  001324  0E03               	movlw	3
  8648  001326  6E2F               	movwf	___wmul@multiplicand,c
  8649  001328  EC83  F018         	call	___wmul	;wreg free
  8650  00132C  0EB3               	movlw	low _horizental_flash
  8651  00132E  6E44               	movwf	??_animation2& (0+255),c
  8652  001330  0E7F               	movlw	high _horizental_flash
  8653  001332  6E45               	movwf	(??_animation2+1)& (0+255),c
  8654  001334  502D               	movf	?___wmul,w,c
  8655  001336  2644               	addwf	??_animation2,f,c
  8656  001338  502E               	movf	?___wmul+1,w,c
  8657  00133A  2245               	addwfc	??_animation2+1,f,c
  8658  00133C  0100               	movlb	0	; () banked
  8659  00133E  51CD               	movf	animation2@j& (0+255),w,b
  8660  001340  2644               	addwf	??_animation2,f,c
  8661  001342  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8662  001344  2245               	addwfc	??_animation2+1,f,c
  8663  001346  C044  FFF6         	movff	??_animation2,tblptrl
  8664  00134A  C045  FFF7         	movff	??_animation2+1,tblptrh
  8665  00134E                     	if	0	;tblptru may be non-zero
  8666  00134E                     	endif
  8667  00134E                     	if	0	;tblptru may be non-zero
  8668  00134E                     	endif
  8669  00134E  0008               	tblrd		*
  8670  001350  50F5               	movf	tablat,w,c
  8671  001352  0A64               	xorlw	100
  8672  001354  B4D8               	btfsc	status,2,c
  8673  001356  D029               	goto	u7730
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;newmain.c: 806: x = horizental_flash[i][j] + row;
  8677  001358  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8678  00135C  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8679  001360  0E00               	movlw	0
  8680  001362  6E30               	movwf	___wmul@multiplicand+1,c
  8681  001364  0E03               	movlw	3
  8682  001366  6E2F               	movwf	___wmul@multiplicand,c
  8683  001368  EC83  F018         	call	___wmul	;wreg free
  8684  00136C  0EB3               	movlw	low _horizental_flash
  8685  00136E  6E44               	movwf	??_animation2& (0+255),c
  8686  001370  0E7F               	movlw	high _horizental_flash
  8687  001372  6E45               	movwf	(??_animation2+1)& (0+255),c
  8688  001374  502D               	movf	?___wmul,w,c
  8689  001376  2644               	addwf	??_animation2,f,c
  8690  001378  502E               	movf	?___wmul+1,w,c
  8691  00137A  2245               	addwfc	??_animation2+1,f,c
  8692  00137C  0100               	movlb	0	; () banked
  8693  00137E  51CD               	movf	animation2@j& (0+255),w,b
  8694  001380  2644               	addwf	??_animation2,f,c
  8695  001382  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8696  001384  2245               	addwfc	??_animation2+1,f,c
  8697  001386  C044  FFF6         	movff	??_animation2,tblptrl
  8698  00138A  C045  FFF7         	movff	??_animation2+1,tblptrh
  8699  00138E                     	if	0	;tblptru may be non-zero
  8700  00138E                     	endif
  8701  00138E                     	if	0	;tblptru may be non-zero
  8702  00138E                     	endif
  8703  00138E  0008               	tblrd		*
  8704  001390  50F5               	movf	tablat,w,c
  8705  001392  25C7               	addwf	animation2@row& (0+255),w,b
  8706  001394  6FC9               	movwf	animation2@x& (0+255),b
  8707  001396  0E00               	movlw	0
  8708  001398  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  8709  00139A  6FCA               	movwf	(animation2@x+1)& (0+255),b
  8710                           
  8711                           ; BSR set to: 0
  8712                           ;newmain.c: 807: set_led(x);
  8713  00139C  51C9               	movf	animation2@x& (0+255),w,b
  8714  00139E  EC23  F017         	call	_set_led
  8715                           
  8716                           ;newmain.c: 809: break;
  8717                           
  8718                           ;newmain.c: 808: } else
  8719  0013A2  0100               	movlb	0	; () banked
  8720  0013A4  4BCD               	infsnz	animation2@j& (0+255),f,b
  8721  0013A6  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8722  0013A8  D7AF               	goto	l5605
  8723  0013AA                     u7730:
  8724  0013AA                     l5619:
  8725                           
  8726                           ;newmain.c: 810: }
  8727                           ;newmain.c: 811: write_display();
  8728  0013AA  EC2E  F016         	call	_write_display	;wreg free
  8729                           
  8730                           ;newmain.c: 812: _delay((unsigned long)((10)*(4000000/4000.0)));
  8731  0013AE  0E0D               	movlw	13
  8732  0013B0  6E44               	movwf	??_animation2& (0+255),c
  8733  0013B2  0EFC               	movlw	252
  8734  0013B4                     u10297:
  8735  0013B4  2EE8               	decfsz	wreg,f,c
  8736  0013B6  D7FE               	bra	u10297
  8737  0013B8  2E44               	decfsz	??_animation2& (0+255),f,c
  8738  0013BA  D7FC               	bra	u10297
  8739                           
  8740                           ;newmain.c: 813: for (j = 0; j < 3; j++) {
  8741  0013BC  0E00               	movlw	0
  8742  0013BE  0100               	movlb	0	; () banked
  8743  0013C0  6FCE               	movwf	(animation2@j+1)& (0+255),b
  8744  0013C2  0E00               	movlw	0
  8745  0013C4  6FCD               	movwf	animation2@j& (0+255),b
  8746  0013C6                     l5625:
  8747                           
  8748                           ; BSR set to: 0
  8749  0013C6  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  8750  0013C8  D006               	goto	l354
  8751  0013CA  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8752  0013CC  E14D               	bnz	l5639
  8753  0013CE  0E03               	movlw	3
  8754  0013D0  5DCD               	subwf	animation2@j& (0+255),w,b
  8755  0013D2  B0D8               	btfsc	status,0,c
  8756  0013D4  D049               	goto	u7760
  8757  0013D6                     l354:
  8758                           
  8759                           ; BSR set to: 0
  8760                           ;newmain.c: 814: if (horizental_flash[i][j] != 100) {
  8761                           
  8762                           ; BSR set to: 0
  8763  0013D6  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8764  0013DA  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8765  0013DE  0E00               	movlw	0
  8766  0013E0  6E30               	movwf	___wmul@multiplicand+1,c
  8767  0013E2  0E03               	movlw	3
  8768  0013E4  6E2F               	movwf	___wmul@multiplicand,c
  8769  0013E6  EC83  F018         	call	___wmul	;wreg free
  8770  0013EA  0EB3               	movlw	low _horizental_flash
  8771  0013EC  6E44               	movwf	??_animation2& (0+255),c
  8772  0013EE  0E7F               	movlw	high _horizental_flash
  8773  0013F0  6E45               	movwf	(??_animation2+1)& (0+255),c
  8774  0013F2  502D               	movf	?___wmul,w,c
  8775  0013F4  2644               	addwf	??_animation2,f,c
  8776  0013F6  502E               	movf	?___wmul+1,w,c
  8777  0013F8  2245               	addwfc	??_animation2+1,f,c
  8778  0013FA  0100               	movlb	0	; () banked
  8779  0013FC  51CD               	movf	animation2@j& (0+255),w,b
  8780  0013FE  2644               	addwf	??_animation2,f,c
  8781  001400  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8782  001402  2245               	addwfc	??_animation2+1,f,c
  8783  001404  C044  FFF6         	movff	??_animation2,tblptrl
  8784  001408  C045  FFF7         	movff	??_animation2+1,tblptrh
  8785  00140C                     	if	0	;tblptru may be non-zero
  8786  00140C                     	endif
  8787  00140C                     	if	0	;tblptru may be non-zero
  8788  00140C                     	endif
  8789  00140C  0008               	tblrd		*
  8790  00140E  50F5               	movf	tablat,w,c
  8791  001410  0A64               	xorlw	100
  8792  001412  B4D8               	btfsc	status,2,c
  8793  001414  D029               	goto	u7760
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;newmain.c: 815: x = horizental_flash[i][j] + row;
  8797  001416  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8798  00141A  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8799  00141E  0E00               	movlw	0
  8800  001420  6E30               	movwf	___wmul@multiplicand+1,c
  8801  001422  0E03               	movlw	3
  8802  001424  6E2F               	movwf	___wmul@multiplicand,c
  8803  001426  EC83  F018         	call	___wmul	;wreg free
  8804  00142A  0EB3               	movlw	low _horizental_flash
  8805  00142C  6E44               	movwf	??_animation2& (0+255),c
  8806  00142E  0E7F               	movlw	high _horizental_flash
  8807  001430  6E45               	movwf	(??_animation2+1)& (0+255),c
  8808  001432  502D               	movf	?___wmul,w,c
  8809  001434  2644               	addwf	??_animation2,f,c
  8810  001436  502E               	movf	?___wmul+1,w,c
  8811  001438  2245               	addwfc	??_animation2+1,f,c
  8812  00143A  0100               	movlb	0	; () banked
  8813  00143C  51CD               	movf	animation2@j& (0+255),w,b
  8814  00143E  2644               	addwf	??_animation2,f,c
  8815  001440  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8816  001442  2245               	addwfc	??_animation2+1,f,c
  8817  001444  C044  FFF6         	movff	??_animation2,tblptrl
  8818  001448  C045  FFF7         	movff	??_animation2+1,tblptrh
  8819  00144C                     	if	0	;tblptru may be non-zero
  8820  00144C                     	endif
  8821  00144C                     	if	0	;tblptru may be non-zero
  8822  00144C                     	endif
  8823  00144C  0008               	tblrd		*
  8824  00144E  50F5               	movf	tablat,w,c
  8825  001450  25C7               	addwf	animation2@row& (0+255),w,b
  8826  001452  6FC9               	movwf	animation2@x& (0+255),b
  8827  001454  0E00               	movlw	0
  8828  001456  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  8829  001458  6FCA               	movwf	(animation2@x+1)& (0+255),b
  8830                           
  8831                           ; BSR set to: 0
  8832                           ;newmain.c: 816: clr_led(x);
  8833  00145A  51C9               	movf	animation2@x& (0+255),w,b
  8834  00145C  ECC8  F016         	call	_clr_led
  8835                           
  8836                           ;newmain.c: 818: break;
  8837                           
  8838                           ;newmain.c: 817: } else
  8839  001460  0100               	movlb	0	; () banked
  8840  001462  4BCD               	infsnz	animation2@j& (0+255),f,b
  8841  001464  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8842  001466  D7AF               	goto	l5625
  8843  001468                     u7760:
  8844  001468                     l5639:
  8845                           
  8846                           ;newmain.c: 819: }
  8847                           ;newmain.c: 820: write_display();
  8848  001468  EC2E  F016         	call	_write_display	;wreg free
  8849  00146C  0100               	movlb	0	; () banked
  8850  00146E  4BCB               	infsnz	animation2@i& (0+255),f,b
  8851  001470  2BCC               	incf	(animation2@i+1)& (0+255),f,b
  8852                           
  8853                           ; BSR set to: 0
  8854  001472  BFCC               	btfsc	(animation2@i+1)& (0+255),7,b
  8855  001474  D745               	goto	l348
  8856  001476  51CC               	movf	(animation2@i+1)& (0+255),w,b
  8857  001478  E101               	bnz	u7770
  8858  00147A  D73C               	goto	L17
  8859  00147C                     u7770:
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;newmain.c: 821: }
  8863                           ;newmain.c: 822: } else if (m == 3) {
  8864  00147C  0012               	return	
  8865  00147E                     l347:
  8866                           
  8867                           ; BSR set to: 0
  8868                           
  8869                           ; BSR set to: 0
  8870  00147E  0E03               	movlw	3
  8871  001480  19C4               	xorwf	animation2@m& (0+255),w,b
  8872  001482  A4D8               	btfss	status,2,c
  8873  001484  0012               	return	
  8874                           
  8875                           ; BSR set to: 0
  8876                           ;newmain.c: 823: for (i = col + 2; i >= 0; i--) {
  8877  001486  0E02               	movlw	2
  8878  001488  25C5               	addwf	animation2@col& (0+255),w,b
  8879  00148A  6FCB               	movwf	animation2@i& (0+255),b
  8880  00148C  0E00               	movlw	0
  8881  00148E  21C6               	addwfc	(animation2@col+1)& (0+255),w,b
  8882  001490  6FCC               	movwf	(animation2@i+1)& (0+255),b
  8883  001492  BFCC               	btfsc	(animation2@i+1)& (0+255),7,b
  8884  001494  0012               	return	
  8885                           
  8886                           ; BSR set to: 0
  8887                           ;newmain.c: 824: for (j = 0; j < 3; j++) {
  8888                           
  8889                           ; BSR set to: 0
  8890                           
  8891                           ; BSR set to: 0
  8892  001496  0E00               	movlw	0
  8893  001498  6FCE               	movwf	(animation2@j+1)& (0+255),b
  8894  00149A  0E00               	movlw	0
  8895  00149C  6FCD               	movwf	animation2@j& (0+255),b
  8896  00149E                     l5653:
  8897                           
  8898                           ; BSR set to: 0
  8899  00149E  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  8900  0014A0  D006               	goto	l362
  8901  0014A2  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8902  0014A4  E14D               	bnz	l5667
  8903  0014A6  0E03               	movlw	3
  8904  0014A8  5DCD               	subwf	animation2@j& (0+255),w,b
  8905  0014AA  B0D8               	btfsc	status,0,c
  8906  0014AC  D049               	goto	u7820
  8907  0014AE                     l362:
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;newmain.c: 825: if (horizental_flash[i][j] != 100) {
  8911                           
  8912                           ; BSR set to: 0
  8913  0014AE  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8914  0014B2  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8915  0014B6  0E00               	movlw	0
  8916  0014B8  6E30               	movwf	___wmul@multiplicand+1,c
  8917  0014BA  0E03               	movlw	3
  8918  0014BC  6E2F               	movwf	___wmul@multiplicand,c
  8919  0014BE  EC83  F018         	call	___wmul	;wreg free
  8920  0014C2  0EB3               	movlw	low _horizental_flash
  8921  0014C4  6E44               	movwf	??_animation2& (0+255),c
  8922  0014C6  0E7F               	movlw	high _horizental_flash
  8923  0014C8  6E45               	movwf	(??_animation2+1)& (0+255),c
  8924  0014CA  502D               	movf	?___wmul,w,c
  8925  0014CC  2644               	addwf	??_animation2,f,c
  8926  0014CE  502E               	movf	?___wmul+1,w,c
  8927  0014D0  2245               	addwfc	??_animation2+1,f,c
  8928  0014D2  0100               	movlb	0	; () banked
  8929  0014D4  51CD               	movf	animation2@j& (0+255),w,b
  8930  0014D6  2644               	addwf	??_animation2,f,c
  8931  0014D8  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8932  0014DA  2245               	addwfc	??_animation2+1,f,c
  8933  0014DC  C044  FFF6         	movff	??_animation2,tblptrl
  8934  0014E0  C045  FFF7         	movff	??_animation2+1,tblptrh
  8935  0014E4                     	if	0	;tblptru may be non-zero
  8936  0014E4                     	endif
  8937  0014E4                     	if	0	;tblptru may be non-zero
  8938  0014E4                     	endif
  8939  0014E4  0008               	tblrd		*
  8940  0014E6  50F5               	movf	tablat,w,c
  8941  0014E8  0A64               	xorlw	100
  8942  0014EA  B4D8               	btfsc	status,2,c
  8943  0014EC  D029               	goto	u7820
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;newmain.c: 826: x = horizental_flash[i][j] + row;
  8947  0014EE  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  8948  0014F2  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  8949  0014F6  0E00               	movlw	0
  8950  0014F8  6E30               	movwf	___wmul@multiplicand+1,c
  8951  0014FA  0E03               	movlw	3
  8952  0014FC  6E2F               	movwf	___wmul@multiplicand,c
  8953  0014FE  EC83  F018         	call	___wmul	;wreg free
  8954  001502  0EB3               	movlw	low _horizental_flash
  8955  001504  6E44               	movwf	??_animation2& (0+255),c
  8956  001506  0E7F               	movlw	high _horizental_flash
  8957  001508  6E45               	movwf	(??_animation2+1)& (0+255),c
  8958  00150A  502D               	movf	?___wmul,w,c
  8959  00150C  2644               	addwf	??_animation2,f,c
  8960  00150E  502E               	movf	?___wmul+1,w,c
  8961  001510  2245               	addwfc	??_animation2+1,f,c
  8962  001512  0100               	movlb	0	; () banked
  8963  001514  51CD               	movf	animation2@j& (0+255),w,b
  8964  001516  2644               	addwf	??_animation2,f,c
  8965  001518  51CE               	movf	(animation2@j+1)& (0+255),w,b
  8966  00151A  2245               	addwfc	??_animation2+1,f,c
  8967  00151C  C044  FFF6         	movff	??_animation2,tblptrl
  8968  001520  C045  FFF7         	movff	??_animation2+1,tblptrh
  8969  001524                     	if	0	;tblptru may be non-zero
  8970  001524                     	endif
  8971  001524                     	if	0	;tblptru may be non-zero
  8972  001524                     	endif
  8973  001524  0008               	tblrd		*
  8974  001526  50F5               	movf	tablat,w,c
  8975  001528  25C7               	addwf	animation2@row& (0+255),w,b
  8976  00152A  6FC9               	movwf	animation2@x& (0+255),b
  8977  00152C  0E00               	movlw	0
  8978  00152E  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  8979  001530  6FCA               	movwf	(animation2@x+1)& (0+255),b
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;newmain.c: 827: set_led(x);
  8983  001532  51C9               	movf	animation2@x& (0+255),w,b
  8984  001534  EC23  F017         	call	_set_led
  8985                           
  8986                           ;newmain.c: 829: break;
  8987                           
  8988                           ;newmain.c: 828: } else
  8989  001538  0100               	movlb	0	; () banked
  8990  00153A  4BCD               	infsnz	animation2@j& (0+255),f,b
  8991  00153C  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  8992  00153E  D7AF               	goto	l5653
  8993  001540                     u7820:
  8994  001540                     l5667:
  8995                           
  8996                           ;newmain.c: 830: }
  8997                           ;newmain.c: 831: write_display();
  8998  001540  EC2E  F016         	call	_write_display	;wreg free
  8999                           
  9000                           ;newmain.c: 832: _delay((unsigned long)((10)*(4000000/4000.0)));
  9001  001544  0E0D               	movlw	13
  9002  001546  6E44               	movwf	??_animation2& (0+255),c
  9003  001548  0EFC               	movlw	252
  9004  00154A                     u10307:
  9005  00154A  2EE8               	decfsz	wreg,f,c
  9006  00154C  D7FE               	bra	u10307
  9007  00154E  2E44               	decfsz	??_animation2& (0+255),f,c
  9008  001550  D7FC               	bra	u10307
  9009                           
  9010                           ;newmain.c: 833: for (j = 0; j < 3; j++) {
  9011  001552  0E00               	movlw	0
  9012  001554  0100               	movlb	0	; () banked
  9013  001556  6FCE               	movwf	(animation2@j+1)& (0+255),b
  9014  001558  0E00               	movlw	0
  9015  00155A  6FCD               	movwf	animation2@j& (0+255),b
  9016  00155C                     l5673:
  9017                           
  9018                           ; BSR set to: 0
  9019  00155C  BFCE               	btfsc	(animation2@j+1)& (0+255),7,b
  9020  00155E  D006               	goto	l366
  9021  001560  51CE               	movf	(animation2@j+1)& (0+255),w,b
  9022  001562  E14D               	bnz	l5687
  9023  001564  0E03               	movlw	3
  9024  001566  5DCD               	subwf	animation2@j& (0+255),w,b
  9025  001568  B0D8               	btfsc	status,0,c
  9026  00156A  D049               	goto	u7850
  9027  00156C                     l366:
  9028                           
  9029                           ; BSR set to: 0
  9030                           ;newmain.c: 834: if (horizental_flash[i][j] != 100) {
  9031                           
  9032                           ; BSR set to: 0
  9033  00156C  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  9034  001570  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  9035  001574  0E00               	movlw	0
  9036  001576  6E30               	movwf	___wmul@multiplicand+1,c
  9037  001578  0E03               	movlw	3
  9038  00157A  6E2F               	movwf	___wmul@multiplicand,c
  9039  00157C  EC83  F018         	call	___wmul	;wreg free
  9040  001580  0EB3               	movlw	low _horizental_flash
  9041  001582  6E44               	movwf	??_animation2& (0+255),c
  9042  001584  0E7F               	movlw	high _horizental_flash
  9043  001586  6E45               	movwf	(??_animation2+1)& (0+255),c
  9044  001588  502D               	movf	?___wmul,w,c
  9045  00158A  2644               	addwf	??_animation2,f,c
  9046  00158C  502E               	movf	?___wmul+1,w,c
  9047  00158E  2245               	addwfc	??_animation2+1,f,c
  9048  001590  0100               	movlb	0	; () banked
  9049  001592  51CD               	movf	animation2@j& (0+255),w,b
  9050  001594  2644               	addwf	??_animation2,f,c
  9051  001596  51CE               	movf	(animation2@j+1)& (0+255),w,b
  9052  001598  2245               	addwfc	??_animation2+1,f,c
  9053  00159A  C044  FFF6         	movff	??_animation2,tblptrl
  9054  00159E  C045  FFF7         	movff	??_animation2+1,tblptrh
  9055  0015A2                     	if	0	;tblptru may be non-zero
  9056  0015A2                     	endif
  9057  0015A2                     	if	0	;tblptru may be non-zero
  9058  0015A2                     	endif
  9059  0015A2  0008               	tblrd		*
  9060  0015A4  50F5               	movf	tablat,w,c
  9061  0015A6  0A64               	xorlw	100
  9062  0015A8  B4D8               	btfsc	status,2,c
  9063  0015AA  D029               	goto	u7850
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;newmain.c: 835: x = horizental_flash[i][j] + row;
  9067  0015AC  C0CB  F02D         	movff	animation2@i,___wmul@multiplier
  9068  0015B0  C0CC  F02E         	movff	animation2@i+1,___wmul@multiplier+1
  9069  0015B4  0E00               	movlw	0
  9070  0015B6  6E30               	movwf	___wmul@multiplicand+1,c
  9071  0015B8  0E03               	movlw	3
  9072  0015BA  6E2F               	movwf	___wmul@multiplicand,c
  9073  0015BC  EC83  F018         	call	___wmul	;wreg free
  9074  0015C0  0EB3               	movlw	low _horizental_flash
  9075  0015C2  6E44               	movwf	??_animation2& (0+255),c
  9076  0015C4  0E7F               	movlw	high _horizental_flash
  9077  0015C6  6E45               	movwf	(??_animation2+1)& (0+255),c
  9078  0015C8  502D               	movf	?___wmul,w,c
  9079  0015CA  2644               	addwf	??_animation2,f,c
  9080  0015CC  502E               	movf	?___wmul+1,w,c
  9081  0015CE  2245               	addwfc	??_animation2+1,f,c
  9082  0015D0  0100               	movlb	0	; () banked
  9083  0015D2  51CD               	movf	animation2@j& (0+255),w,b
  9084  0015D4  2644               	addwf	??_animation2,f,c
  9085  0015D6  51CE               	movf	(animation2@j+1)& (0+255),w,b
  9086  0015D8  2245               	addwfc	??_animation2+1,f,c
  9087  0015DA  C044  FFF6         	movff	??_animation2,tblptrl
  9088  0015DE  C045  FFF7         	movff	??_animation2+1,tblptrh
  9089  0015E2                     	if	0	;tblptru may be non-zero
  9090  0015E2                     	endif
  9091  0015E2                     	if	0	;tblptru may be non-zero
  9092  0015E2                     	endif
  9093  0015E2  0008               	tblrd		*
  9094  0015E4  50F5               	movf	tablat,w,c
  9095  0015E6  25C7               	addwf	animation2@row& (0+255),w,b
  9096  0015E8  6FC9               	movwf	animation2@x& (0+255),b
  9097  0015EA  0E00               	movlw	0
  9098  0015EC  21C8               	addwfc	(animation2@row+1)& (0+255),w,b
  9099  0015EE  6FCA               	movwf	(animation2@x+1)& (0+255),b
  9100                           
  9101                           ; BSR set to: 0
  9102                           ;newmain.c: 836: clr_led(x);
  9103  0015F0  51C9               	movf	animation2@x& (0+255),w,b
  9104  0015F2  ECC8  F016         	call	_clr_led
  9105                           
  9106                           ;newmain.c: 838: break;
  9107                           
  9108                           ;newmain.c: 837: } else
  9109  0015F6  0100               	movlb	0	; () banked
  9110  0015F8  4BCD               	infsnz	animation2@j& (0+255),f,b
  9111  0015FA  2BCE               	incf	(animation2@j+1)& (0+255),f,b
  9112  0015FC  D7AF               	goto	l5673
  9113  0015FE                     u7850:
  9114  0015FE                     l5687:
  9115                           
  9116                           ;newmain.c: 839: }
  9117                           ;newmain.c: 840: write_display();
  9118  0015FE  EC2E  F016         	call	_write_display	;wreg free
  9119  001602  0100               	movlb	0	; () banked
  9120  001604  07CB               	decf	animation2@i& (0+255),f,b
  9121  001606  A0D8               	btfss	status,0,c
  9122  001608  07CC               	decf	(animation2@i+1)& (0+255),f,b
  9123  00160A  D743               	goto	L18
  9124  00160C                     __end_of_animation2:
  9125                           	opt stack 0
  9126                           tblptru	equ	0xFF8
  9127                           tblptrh	equ	0xFF7
  9128                           tblptrl	equ	0xFF6
  9129                           tablat	equ	0xFF5
  9130                           prodh	equ	0xFF4
  9131                           prodl	equ	0xFF3
  9132                           intcon	equ	0xFF2
  9133                           intcon2	equ	0xFF1
  9134                           postinc0	equ	0xFEE
  9135                           wreg	equ	0xFE8
  9136                           indf2	equ	0xFDF
  9137                           postinc2	equ	0xFDE
  9138                           postdec2	equ	0xFDD
  9139                           fsr2h	equ	0xFDA
  9140                           fsr2l	equ	0xFD9
  9141                           status	equ	0xFD8
  9142                           
  9143 ;; *************** function _animation1 *****************
  9144 ;; Defined at:
  9145 ;;		line 727 in file "newmain.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;  m               1    wreg     unsigned char 
  9148 ;;  n               1   65[COMRAM] unsigned char 
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;  m               1   69[COMRAM] unsigned char 
  9151 ;;  j               1   72[COMRAM] unsigned char 
  9152 ;;  i               1   71[COMRAM] unsigned char 
  9153 ;;  x               1   70[COMRAM] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9163 ;;      Params:         1       0       0       0       0       0       0
  9164 ;;      Locals:         4       0       0       0       0       0       0
  9165 ;;      Temps:          3       0       0       0       0       0       0
  9166 ;;      Totals:         8       0       0       0       0       0       0
  9167 ;;Total ram usage:        8 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    7
  9170 ;; This function calls:
  9171 ;;		_clr_led
  9172 ;;		_set_led
  9173 ;;		_write_display
  9174 ;; This function is called by:
  9175 ;;		_main
  9176 ;; This function uses a non-reentrant model
  9177 ;;
  9178                           
  9179                           	psect	text9
  9180  002AF8                     __ptext9:
  9181                           	opt stack 0
  9182  002AF8                     _animation1:
  9183                           	opt stack 23
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;incstack = 0
  9187                           ;animation1@m stored from wreg
  9188  002AF8  6E46               	movwf	animation1@m,c
  9189                           
  9190                           ;newmain.c: 728: uint8_t i = 0, j = 0, x = 0;
  9191  002AFA  0E00               	movlw	0
  9192  002AFC  6E48               	movwf	animation1@i,c
  9193  002AFE  0E00               	movlw	0
  9194  002B00  6E49               	movwf	animation1@j,c
  9195  002B02  0E00               	movlw	0
  9196  002B04  6E47               	movwf	animation1@x,c
  9197                           
  9198                           ;newmain.c: 729: for (i = 0; i < 4; i++) {
  9199  002B06  0E00               	movlw	0
  9200  002B08  6E48               	movwf	animation1@i,c
  9201  002B0A                     l5423:
  9202  002B0A  0E03               	movlw	3
  9203  002B0C  6448               	cpfsgt	animation1@i,c
  9204  002B0E  D001               	goto	l305
  9205  002B10  0012               	return	
  9206  002B12                     l305:
  9207                           
  9208                           ;newmain.c: 730: for (j = 0; j < 4; j++) {
  9209  002B12  0E00               	movlw	0
  9210  002B14  6E49               	movwf	animation1@j,c
  9211  002B16                     l5429:
  9212  002B16  0E03               	movlw	3
  9213  002B18  6449               	cpfsgt	animation1@j,c
  9214  002B1A  D001               	goto	l307
  9215  002B1C  D046               	goto	u7410
  9216  002B1E                     l307:
  9217                           
  9218                           ;newmain.c: 731: if (arrow[n][i][j] != 100) {
  9219  002B1E  5042               	movf	animation1@n,w,c
  9220  002B20  0D10               	mullw	16
  9221  002B22  0EAD               	movlw	low _arrow
  9222  002B24  6E43               	movwf	??_animation1& (0+255),c
  9223  002B26  0E79               	movlw	high _arrow
  9224  002B28  6E44               	movwf	(??_animation1+1)& (0+255),c
  9225  002B2A  50F3               	movf	prodl,w,c
  9226  002B2C  2643               	addwf	??_animation1,f,c
  9227  002B2E  50F4               	movf	prodh,w,c
  9228  002B30  2244               	addwfc	??_animation1+1,f,c
  9229  002B32  5048               	movf	animation1@i,w,c
  9230  002B34  0D04               	mullw	4
  9231  002B36  50F3               	movf	prodl,w,c
  9232  002B38  2643               	addwf	??_animation1,f,c
  9233  002B3A  50F4               	movf	prodh,w,c
  9234  002B3C  2244               	addwfc	??_animation1+1,f,c
  9235  002B3E  5049               	movf	animation1@j,w,c
  9236  002B40  0D01               	mullw	1
  9237  002B42  50F3               	movf	prodl,w,c
  9238  002B44  2643               	addwf	??_animation1,f,c
  9239  002B46  50F4               	movf	prodh,w,c
  9240  002B48  2244               	addwfc	??_animation1+1,f,c
  9241  002B4A  C043  FFF6         	movff	??_animation1,tblptrl
  9242  002B4E  C044  FFF7         	movff	??_animation1+1,tblptrh
  9243  002B52                     	if	0	;tblptru may be non-zero
  9244  002B52                     	endif
  9245  002B52                     	if	0	;tblptru may be non-zero
  9246  002B52                     	endif
  9247  002B52  0008               	tblrd		*
  9248  002B54  50F5               	movf	tablat,w,c
  9249  002B56  0A64               	xorlw	100
  9250  002B58  B4D8               	btfsc	status,2,c
  9251  002B5A  D027               	goto	u7410
  9252                           
  9253                           ;newmain.c: 732: x = arrow[n][i][j] + 16 * m;
  9254  002B5C  5042               	movf	animation1@n,w,c
  9255  002B5E  0D10               	mullw	16
  9256  002B60  0EAD               	movlw	low _arrow
  9257  002B62  6E43               	movwf	??_animation1& (0+255),c
  9258  002B64  0E79               	movlw	high _arrow
  9259  002B66  6E44               	movwf	(??_animation1+1)& (0+255),c
  9260  002B68  50F3               	movf	prodl,w,c
  9261  002B6A  2643               	addwf	??_animation1,f,c
  9262  002B6C  50F4               	movf	prodh,w,c
  9263  002B6E  2244               	addwfc	??_animation1+1,f,c
  9264  002B70  5048               	movf	animation1@i,w,c
  9265  002B72  0D04               	mullw	4
  9266  002B74  50F3               	movf	prodl,w,c
  9267  002B76  2643               	addwf	??_animation1,f,c
  9268  002B78  50F4               	movf	prodh,w,c
  9269  002B7A  2244               	addwfc	??_animation1+1,f,c
  9270  002B7C  5049               	movf	animation1@j,w,c
  9271  002B7E  0D01               	mullw	1
  9272  002B80  50F3               	movf	prodl,w,c
  9273  002B82  2643               	addwf	??_animation1,f,c
  9274  002B84  50F4               	movf	prodh,w,c
  9275  002B86  2244               	addwfc	??_animation1+1,f,c
  9276  002B88  C043  FFF6         	movff	??_animation1,tblptrl
  9277  002B8C  C044  FFF7         	movff	??_animation1+1,tblptrh
  9278  002B90                     	if	0	;tblptru may be non-zero
  9279  002B90                     	endif
  9280  002B90                     	if	0	;tblptru may be non-zero
  9281  002B90                     	endif
  9282  002B90  0008               	tblrd		*
  9283  002B92  CFF5 F045          	movff	tablat,??_animation1+2
  9284  002B96  5046               	movf	animation1@m,w,c
  9285  002B98  0D10               	mullw	16
  9286  002B9A  50F3               	movf	prodl,w,c
  9287  002B9C  2445               	addwf	??_animation1+2,w,c
  9288  002B9E  6E47               	movwf	animation1@x,c
  9289                           
  9290                           ;newmain.c: 733: set_led(x);
  9291  002BA0  5047               	movf	animation1@x,w,c
  9292  002BA2  EC23  F017         	call	_set_led
  9293                           
  9294                           ;newmain.c: 735: break;
  9295                           
  9296                           ;newmain.c: 734: } else
  9297  002BA6  2A49               	incf	animation1@j,f,c
  9298  002BA8  D7B6               	goto	l5429
  9299  002BAA                     u7410:
  9300                           
  9301                           ;newmain.c: 736: }
  9302                           ;newmain.c: 737: write_display();
  9303  002BAA  EC2E  F016         	call	_write_display	;wreg free
  9304                           
  9305                           ;newmain.c: 738: _delay((unsigned long)((10)*(4000000/4000.0)));
  9306  002BAE  0E0D               	movlw	13
  9307  002BB0  6E43               	movwf	??_animation1& (0+255),c
  9308  002BB2  0EFC               	movlw	252
  9309  002BB4                     u10317:
  9310  002BB4  2EE8               	decfsz	wreg,f,c
  9311  002BB6  D7FE               	bra	u10317
  9312  002BB8  2E43               	decfsz	??_animation1& (0+255),f,c
  9313  002BBA  D7FC               	bra	u10317
  9314                           
  9315                           ;newmain.c: 739: for (j = 0; j < 4; j++) {
  9316  002BBC  0E00               	movlw	0
  9317  002BBE  6E49               	movwf	animation1@j,c
  9318  002BC0                     l5449:
  9319  002BC0  0E03               	movlw	3
  9320  002BC2  6449               	cpfsgt	animation1@j,c
  9321  002BC4  D001               	goto	l311
  9322  002BC6  D046               	goto	u7440
  9323  002BC8                     l311:
  9324                           
  9325                           ;newmain.c: 740: if (arrow[n][i][j] != 100) {
  9326  002BC8  5042               	movf	animation1@n,w,c
  9327  002BCA  0D10               	mullw	16
  9328  002BCC  0EAD               	movlw	low _arrow
  9329  002BCE  6E43               	movwf	??_animation1& (0+255),c
  9330  002BD0  0E79               	movlw	high _arrow
  9331  002BD2  6E44               	movwf	(??_animation1+1)& (0+255),c
  9332  002BD4  50F3               	movf	prodl,w,c
  9333  002BD6  2643               	addwf	??_animation1,f,c
  9334  002BD8  50F4               	movf	prodh,w,c
  9335  002BDA  2244               	addwfc	??_animation1+1,f,c
  9336  002BDC  5048               	movf	animation1@i,w,c
  9337  002BDE  0D04               	mullw	4
  9338  002BE0  50F3               	movf	prodl,w,c
  9339  002BE2  2643               	addwf	??_animation1,f,c
  9340  002BE4  50F4               	movf	prodh,w,c
  9341  002BE6  2244               	addwfc	??_animation1+1,f,c
  9342  002BE8  5049               	movf	animation1@j,w,c
  9343  002BEA  0D01               	mullw	1
  9344  002BEC  50F3               	movf	prodl,w,c
  9345  002BEE  2643               	addwf	??_animation1,f,c
  9346  002BF0  50F4               	movf	prodh,w,c
  9347  002BF2  2244               	addwfc	??_animation1+1,f,c
  9348  002BF4  C043  FFF6         	movff	??_animation1,tblptrl
  9349  002BF8  C044  FFF7         	movff	??_animation1+1,tblptrh
  9350  002BFC                     	if	0	;tblptru may be non-zero
  9351  002BFC                     	endif
  9352  002BFC                     	if	0	;tblptru may be non-zero
  9353  002BFC                     	endif
  9354  002BFC  0008               	tblrd		*
  9355  002BFE  50F5               	movf	tablat,w,c
  9356  002C00  0A64               	xorlw	100
  9357  002C02  B4D8               	btfsc	status,2,c
  9358  002C04  D027               	goto	u7440
  9359                           
  9360                           ;newmain.c: 741: x = arrow[n][i][j] + 16 * m;
  9361  002C06  5042               	movf	animation1@n,w,c
  9362  002C08  0D10               	mullw	16
  9363  002C0A  0EAD               	movlw	low _arrow
  9364  002C0C  6E43               	movwf	??_animation1& (0+255),c
  9365  002C0E  0E79               	movlw	high _arrow
  9366  002C10  6E44               	movwf	(??_animation1+1)& (0+255),c
  9367  002C12  50F3               	movf	prodl,w,c
  9368  002C14  2643               	addwf	??_animation1,f,c
  9369  002C16  50F4               	movf	prodh,w,c
  9370  002C18  2244               	addwfc	??_animation1+1,f,c
  9371  002C1A  5048               	movf	animation1@i,w,c
  9372  002C1C  0D04               	mullw	4
  9373  002C1E  50F3               	movf	prodl,w,c
  9374  002C20  2643               	addwf	??_animation1,f,c
  9375  002C22  50F4               	movf	prodh,w,c
  9376  002C24  2244               	addwfc	??_animation1+1,f,c
  9377  002C26  5049               	movf	animation1@j,w,c
  9378  002C28  0D01               	mullw	1
  9379  002C2A  50F3               	movf	prodl,w,c
  9380  002C2C  2643               	addwf	??_animation1,f,c
  9381  002C2E  50F4               	movf	prodh,w,c
  9382  002C30  2244               	addwfc	??_animation1+1,f,c
  9383  002C32  C043  FFF6         	movff	??_animation1,tblptrl
  9384  002C36  C044  FFF7         	movff	??_animation1+1,tblptrh
  9385  002C3A                     	if	0	;tblptru may be non-zero
  9386  002C3A                     	endif
  9387  002C3A                     	if	0	;tblptru may be non-zero
  9388  002C3A                     	endif
  9389  002C3A  0008               	tblrd		*
  9390  002C3C  CFF5 F045          	movff	tablat,??_animation1+2
  9391  002C40  5046               	movf	animation1@m,w,c
  9392  002C42  0D10               	mullw	16
  9393  002C44  50F3               	movf	prodl,w,c
  9394  002C46  2445               	addwf	??_animation1+2,w,c
  9395  002C48  6E47               	movwf	animation1@x,c
  9396                           
  9397                           ;newmain.c: 742: clr_led(x);
  9398  002C4A  5047               	movf	animation1@x,w,c
  9399  002C4C  ECC8  F016         	call	_clr_led
  9400                           
  9401                           ;newmain.c: 744: break;
  9402                           
  9403                           ;newmain.c: 743: } else
  9404  002C50  2A49               	incf	animation1@j,f,c
  9405  002C52  D7B6               	goto	l5449
  9406  002C54                     u7440:
  9407                           
  9408                           ;newmain.c: 745: }
  9409                           ;newmain.c: 746: write_display();
  9410  002C54  EC2E  F016         	call	_write_display	;wreg free
  9411  002C58  2A48               	incf	animation1@i,f,c
  9412  002C5A  D757               	goto	l5423
  9413  002C5C                     __end_of_animation1:
  9414                           	opt stack 0
  9415                           tblptru	equ	0xFF8
  9416                           tblptrh	equ	0xFF7
  9417                           tblptrl	equ	0xFF6
  9418                           tablat	equ	0xFF5
  9419                           prodh	equ	0xFF4
  9420                           prodl	equ	0xFF3
  9421                           intcon	equ	0xFF2
  9422                           intcon2	equ	0xFF1
  9423                           postinc0	equ	0xFEE
  9424                           wreg	equ	0xFE8
  9425                           indf2	equ	0xFDF
  9426                           postinc2	equ	0xFDE
  9427                           postdec2	equ	0xFDD
  9428                           fsr2h	equ	0xFDA
  9429                           fsr2l	equ	0xFD9
  9430                           status	equ	0xFD8
  9431                           
  9432 ;; *************** function _animation0 *****************
  9433 ;; Defined at:
  9434 ;;		line 660 in file "newmain.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;  m               1    wreg     unsigned char 
  9437 ;;  n               1   65[COMRAM] unsigned char 
  9438 ;; Auto vars:     Size  Location     Type
  9439 ;;  m               1   70[COMRAM] unsigned char 
  9440 ;;  x               2   68[COMRAM] int 
  9441 ;;  i               1   72[COMRAM] unsigned char 
  9442 ;;  j               1   71[COMRAM] unsigned char 
  9443 ;; Return value:  Size  Location     Type
  9444 ;;                  1    wreg      void 
  9445 ;; Registers used:
  9446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9447 ;; Tracked objects:
  9448 ;;		On entry : 0/0
  9449 ;;		On exit  : 0/0
  9450 ;;		Unchanged: 0/0
  9451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9452 ;;      Params:         1       0       0       0       0       0       0
  9453 ;;      Locals:         5       0       0       0       0       0       0
  9454 ;;      Temps:          2       0       0       0       0       0       0
  9455 ;;      Totals:         8       0       0       0       0       0       0
  9456 ;;Total ram usage:        8 bytes
  9457 ;; Hardware stack levels used:    1
  9458 ;; Hardware stack levels required when called:    7
  9459 ;; This function calls:
  9460 ;;		_clr_led
  9461 ;;		_set_led
  9462 ;;		_write_display
  9463 ;; This function is called by:
  9464 ;;		_main
  9465 ;; This function uses a non-reentrant model
  9466 ;;
  9467                           
  9468                           	psect	text10
  9469  001F6A                     __ptext10:
  9470                           	opt stack 0
  9471  001F6A                     _animation0:
  9472                           	opt stack 23
  9473                           
  9474                           ;incstack = 0
  9475                           ;animation0@m stored from wreg
  9476  001F6A  6E47               	movwf	animation0@m,c
  9477                           
  9478                           ;newmain.c: 661: uint8_t i = 0, j = 0;
  9479  001F6C  0E00               	movlw	0
  9480  001F6E  6E49               	movwf	animation0@i,c
  9481  001F70  0E00               	movlw	0
  9482  001F72  6E48               	movwf	animation0@j,c
  9483                           
  9484                           ;newmain.c: 662: if (m == 1) {
  9485  001F74  0447               	decf	animation0@m,w,c
  9486  001F76  A4D8               	btfss	status,2,c
  9487  001F78  D04E               	goto	l274
  9488                           
  9489                           ;newmain.c: 663: for (i = 0; i < 19; i += 2) {
  9490  001F7A  0E00               	movlw	0
  9491  001F7C  6E49               	movwf	animation0@i,c
  9492  001F7E                     l5275:
  9493  001F7E  0E12               	movlw	18
  9494  001F80  6449               	cpfsgt	animation0@i,c
  9495  001F82  D001               	goto	l275
  9496  001F84  0012               	return	
  9497  001F86                     l275:
  9498                           
  9499                           ;newmain.c: 664: set_led(show0_1[i]);
  9500  001F86  5049               	movf	animation0@i,w,c
  9501  001F88  0D01               	mullw	1
  9502  001F8A  0E8B               	movlw	low _show0_1
  9503  001F8C  24F3               	addwf	prodl,w,c
  9504  001F8E  6EF6               	movwf	tblptrl,c
  9505  001F90  0E7F               	movlw	high _show0_1
  9506  001F92  20F4               	addwfc	prodh,w,c
  9507  001F94  6EF7               	movwf	tblptrh,c
  9508  001F96                     	if	0	;There are less than 3 active tblptr bytes
  9509  001F96                     	endif
  9510  001F96  0008               	tblrd		*
  9511  001F98  50F5               	movf	tablat,w,c
  9512  001F9A  EC23  F017         	call	_set_led
  9513                           
  9514                           ;newmain.c: 665: set_led(show0_1[i + 1]);
  9515  001F9E  5049               	movf	animation0@i,w,c
  9516  001FA0  6E43               	movwf	??_animation0& (0+255),c
  9517  001FA2  6A44               	clrf	(??_animation0+1)& (0+255),c
  9518  001FA4  0E01               	movlw	1
  9519  001FA6  2643               	addwf	??_animation0,f,c
  9520  001FA8  0E00               	movlw	0
  9521  001FAA  2244               	addwfc	??_animation0+1,f,c
  9522  001FAC  0E8B               	movlw	low _show0_1
  9523  001FAE  2443               	addwf	??_animation0,w,c
  9524  001FB0  6EF6               	movwf	tblptrl,c
  9525  001FB2  0E7F               	movlw	high _show0_1
  9526  001FB4  2044               	addwfc	??_animation0+1,w,c
  9527  001FB6  6EF7               	movwf	tblptrh,c
  9528  001FB8                     	if	0	;There are less than 3 active tblptr bytes
  9529  001FB8                     	endif
  9530  001FB8  0008               	tblrd		*
  9531  001FBA  50F5               	movf	tablat,w,c
  9532  001FBC  EC23  F017         	call	_set_led
  9533                           
  9534                           ;newmain.c: 666: write_display();
  9535  001FC0  EC2E  F016         	call	_write_display	;wreg free
  9536                           
  9537                           ;newmain.c: 667: _delay((unsigned long)((10)*(4000000/4000.0)));
  9538  001FC4  0E0D               	movlw	13
  9539  001FC6  6E43               	movwf	??_animation0& (0+255),c
  9540  001FC8  0EFC               	movlw	252
  9541  001FCA                     u10327:
  9542  001FCA  2EE8               	decfsz	wreg,f,c
  9543  001FCC  D7FE               	bra	u10327
  9544  001FCE  2E43               	decfsz	??_animation0& (0+255),f,c
  9545  001FD0  D7FC               	bra	u10327
  9546                           
  9547                           ;newmain.c: 668: clr_led(show0_1[i]);
  9548  001FD2  5049               	movf	animation0@i,w,c
  9549  001FD4  0D01               	mullw	1
  9550  001FD6  0E8B               	movlw	low _show0_1
  9551  001FD8  24F3               	addwf	prodl,w,c
  9552  001FDA  6EF6               	movwf	tblptrl,c
  9553  001FDC  0E7F               	movlw	high _show0_1
  9554  001FDE  20F4               	addwfc	prodh,w,c
  9555  001FE0  6EF7               	movwf	tblptrh,c
  9556  001FE2                     	if	0	;There are less than 3 active tblptr bytes
  9557  001FE2                     	endif
  9558  001FE2  0008               	tblrd		*
  9559  001FE4  50F5               	movf	tablat,w,c
  9560  001FE6  ECC8  F016         	call	_clr_led
  9561                           
  9562                           ;newmain.c: 669: clr_led(show0_1[i + 1]);
  9563  001FEA  5049               	movf	animation0@i,w,c
  9564  001FEC  6E43               	movwf	??_animation0& (0+255),c
  9565  001FEE  6A44               	clrf	(??_animation0+1)& (0+255),c
  9566  001FF0  0E01               	movlw	1
  9567  001FF2  2643               	addwf	??_animation0,f,c
  9568  001FF4  0E00               	movlw	0
  9569  001FF6  2244               	addwfc	??_animation0+1,f,c
  9570  001FF8  0E8B               	movlw	low _show0_1
  9571  001FFA  2443               	addwf	??_animation0,w,c
  9572  001FFC  6EF6               	movwf	tblptrl,c
  9573  001FFE  0E7F               	movlw	high _show0_1
  9574  002000  2044               	addwfc	??_animation0+1,w,c
  9575  002002  6EF7               	movwf	tblptrh,c
  9576  002004                     	if	0	;There are less than 3 active tblptr bytes
  9577  002004                     	endif
  9578  002004  0008               	tblrd		*
  9579  002006  50F5               	movf	tablat,w,c
  9580  002008  ECC8  F016         	call	_clr_led
  9581                           
  9582                           ;newmain.c: 670: write_display();
  9583  00200C  EC2E  F016         	call	_write_display	;wreg free
  9584  002010  0E02               	movlw	2
  9585  002012  2649               	addwf	animation0@i,f,c
  9586  002014  D7B4               	goto	l5275
  9587  002016                     l274:
  9588  002016  0E02               	movlw	2
  9589  002018  1847               	xorwf	animation0@m,w,c
  9590  00201A  A4D8               	btfss	status,2,c
  9591  00201C  D04E               	goto	l278
  9592                           
  9593                           ;newmain.c: 673: for (i = 39; i > 20; i -= 2) {
  9594  00201E  0E27               	movlw	39
  9595  002020  6E49               	movwf	animation0@i,c
  9596  002022                     l5299:
  9597  002022  0E15               	movlw	21
  9598  002024  6049               	cpfslt	animation0@i,c
  9599  002026  D001               	goto	l279
  9600  002028  0012               	return	
  9601  00202A                     l279:
  9602                           
  9603                           ;newmain.c: 674: set_led(show0_1[i]);
  9604  00202A  5049               	movf	animation0@i,w,c
  9605  00202C  0D01               	mullw	1
  9606  00202E  0E8B               	movlw	low _show0_1
  9607  002030  24F3               	addwf	prodl,w,c
  9608  002032  6EF6               	movwf	tblptrl,c
  9609  002034  0E7F               	movlw	high _show0_1
  9610  002036  20F4               	addwfc	prodh,w,c
  9611  002038  6EF7               	movwf	tblptrh,c
  9612  00203A                     	if	0	;There are less than 3 active tblptr bytes
  9613  00203A                     	endif
  9614  00203A  0008               	tblrd		*
  9615  00203C  50F5               	movf	tablat,w,c
  9616  00203E  EC23  F017         	call	_set_led
  9617                           
  9618                           ;newmain.c: 675: set_led(show0_1[i + 1]);
  9619  002042  5049               	movf	animation0@i,w,c
  9620  002044  6E43               	movwf	??_animation0& (0+255),c
  9621  002046  6A44               	clrf	(??_animation0+1)& (0+255),c
  9622  002048  0E01               	movlw	1
  9623  00204A  2643               	addwf	??_animation0,f,c
  9624  00204C  0E00               	movlw	0
  9625  00204E  2244               	addwfc	??_animation0+1,f,c
  9626  002050  0E8B               	movlw	low _show0_1
  9627  002052  2443               	addwf	??_animation0,w,c
  9628  002054  6EF6               	movwf	tblptrl,c
  9629  002056  0E7F               	movlw	high _show0_1
  9630  002058  2044               	addwfc	??_animation0+1,w,c
  9631  00205A  6EF7               	movwf	tblptrh,c
  9632  00205C                     	if	0	;There are less than 3 active tblptr bytes
  9633  00205C                     	endif
  9634  00205C  0008               	tblrd		*
  9635  00205E  50F5               	movf	tablat,w,c
  9636  002060  EC23  F017         	call	_set_led
  9637                           
  9638                           ;newmain.c: 676: write_display();
  9639  002064  EC2E  F016         	call	_write_display	;wreg free
  9640                           
  9641                           ;newmain.c: 677: _delay((unsigned long)((10)*(4000000/4000.0)));
  9642  002068  0E0D               	movlw	13
  9643  00206A  6E43               	movwf	??_animation0& (0+255),c
  9644  00206C  0EFC               	movlw	252
  9645  00206E                     u10337:
  9646  00206E  2EE8               	decfsz	wreg,f,c
  9647  002070  D7FE               	bra	u10337
  9648  002072  2E43               	decfsz	??_animation0& (0+255),f,c
  9649  002074  D7FC               	bra	u10337
  9650                           
  9651                           ;newmain.c: 678: clr_led(show0_1[i]);
  9652  002076  5049               	movf	animation0@i,w,c
  9653  002078  0D01               	mullw	1
  9654  00207A  0E8B               	movlw	low _show0_1
  9655  00207C  24F3               	addwf	prodl,w,c
  9656  00207E  6EF6               	movwf	tblptrl,c
  9657  002080  0E7F               	movlw	high _show0_1
  9658  002082  20F4               	addwfc	prodh,w,c
  9659  002084  6EF7               	movwf	tblptrh,c
  9660  002086                     	if	0	;There are less than 3 active tblptr bytes
  9661  002086                     	endif
  9662  002086  0008               	tblrd		*
  9663  002088  50F5               	movf	tablat,w,c
  9664  00208A  ECC8  F016         	call	_clr_led
  9665                           
  9666                           ;newmain.c: 679: clr_led(show0_1[i + 1]);
  9667  00208E  5049               	movf	animation0@i,w,c
  9668  002090  6E43               	movwf	??_animation0& (0+255),c
  9669  002092  6A44               	clrf	(??_animation0+1)& (0+255),c
  9670  002094  0E01               	movlw	1
  9671  002096  2643               	addwf	??_animation0,f,c
  9672  002098  0E00               	movlw	0
  9673  00209A  2244               	addwfc	??_animation0+1,f,c
  9674  00209C  0E8B               	movlw	low _show0_1
  9675  00209E  2443               	addwf	??_animation0,w,c
  9676  0020A0  6EF6               	movwf	tblptrl,c
  9677  0020A2  0E7F               	movlw	high _show0_1
  9678  0020A4  2044               	addwfc	??_animation0+1,w,c
  9679  0020A6  6EF7               	movwf	tblptrh,c
  9680  0020A8                     	if	0	;There are less than 3 active tblptr bytes
  9681  0020A8                     	endif
  9682  0020A8  0008               	tblrd		*
  9683  0020AA  50F5               	movf	tablat,w,c
  9684  0020AC  ECC8  F016         	call	_clr_led
  9685                           
  9686                           ;newmain.c: 680: write_display();
  9687  0020B0  EC2E  F016         	call	_write_display	;wreg free
  9688  0020B4  0E02               	movlw	2
  9689  0020B6  5E49               	subwf	animation0@i,f,c
  9690  0020B8  D7B4               	goto	l5299
  9691  0020BA                     l278:
  9692  0020BA  0E03               	movlw	3
  9693  0020BC  1847               	xorwf	animation0@m,w,c
  9694  0020BE  A4D8               	btfss	status,2,c
  9695  0020C0  D04E               	goto	l282
  9696                           
  9697                           ;newmain.c: 683: for (i = 0; i < 19; i += 2) {
  9698  0020C2  0E00               	movlw	0
  9699  0020C4  6E49               	movwf	animation0@i,c
  9700  0020C6                     l5323:
  9701  0020C6  0E12               	movlw	18
  9702  0020C8  6449               	cpfsgt	animation0@i,c
  9703  0020CA  D001               	goto	l283
  9704  0020CC  0012               	return	
  9705  0020CE                     l283:
  9706                           
  9707                           ;newmain.c: 684: set_led(show0_2[i]);
  9708  0020CE  5049               	movf	animation0@i,w,c
  9709  0020D0  0D01               	mullw	1
  9710  0020D2  0E63               	movlw	low _show0_2
  9711  0020D4  24F3               	addwf	prodl,w,c
  9712  0020D6  6EF6               	movwf	tblptrl,c
  9713  0020D8  0E7F               	movlw	high _show0_2
  9714  0020DA  20F4               	addwfc	prodh,w,c
  9715  0020DC  6EF7               	movwf	tblptrh,c
  9716  0020DE                     	if	0	;There are less than 3 active tblptr bytes
  9717  0020DE                     	endif
  9718  0020DE  0008               	tblrd		*
  9719  0020E0  50F5               	movf	tablat,w,c
  9720  0020E2  EC23  F017         	call	_set_led
  9721                           
  9722                           ;newmain.c: 685: set_led(show0_2[i + 1]);
  9723  0020E6  5049               	movf	animation0@i,w,c
  9724  0020E8  6E43               	movwf	??_animation0& (0+255),c
  9725  0020EA  6A44               	clrf	(??_animation0+1)& (0+255),c
  9726  0020EC  0E01               	movlw	1
  9727  0020EE  2643               	addwf	??_animation0,f,c
  9728  0020F0  0E00               	movlw	0
  9729  0020F2  2244               	addwfc	??_animation0+1,f,c
  9730  0020F4  0E63               	movlw	low _show0_2
  9731  0020F6  2443               	addwf	??_animation0,w,c
  9732  0020F8  6EF6               	movwf	tblptrl,c
  9733  0020FA  0E7F               	movlw	high _show0_2
  9734  0020FC  2044               	addwfc	??_animation0+1,w,c
  9735  0020FE  6EF7               	movwf	tblptrh,c
  9736  002100                     	if	0	;There are less than 3 active tblptr bytes
  9737  002100                     	endif
  9738  002100  0008               	tblrd		*
  9739  002102  50F5               	movf	tablat,w,c
  9740  002104  EC23  F017         	call	_set_led
  9741                           
  9742                           ;newmain.c: 686: write_display();
  9743  002108  EC2E  F016         	call	_write_display	;wreg free
  9744                           
  9745                           ;newmain.c: 687: _delay((unsigned long)((10)*(4000000/4000.0)));
  9746  00210C  0E0D               	movlw	13
  9747  00210E  6E43               	movwf	??_animation0& (0+255),c
  9748  002110  0EFC               	movlw	252
  9749  002112                     u10347:
  9750  002112  2EE8               	decfsz	wreg,f,c
  9751  002114  D7FE               	bra	u10347
  9752  002116  2E43               	decfsz	??_animation0& (0+255),f,c
  9753  002118  D7FC               	bra	u10347
  9754                           
  9755                           ;newmain.c: 688: clr_led(show0_2[i]);
  9756  00211A  5049               	movf	animation0@i,w,c
  9757  00211C  0D01               	mullw	1
  9758  00211E  0E63               	movlw	low _show0_2
  9759  002120  24F3               	addwf	prodl,w,c
  9760  002122  6EF6               	movwf	tblptrl,c
  9761  002124  0E7F               	movlw	high _show0_2
  9762  002126  20F4               	addwfc	prodh,w,c
  9763  002128  6EF7               	movwf	tblptrh,c
  9764  00212A                     	if	0	;There are less than 3 active tblptr bytes
  9765  00212A                     	endif
  9766  00212A  0008               	tblrd		*
  9767  00212C  50F5               	movf	tablat,w,c
  9768  00212E  ECC8  F016         	call	_clr_led
  9769                           
  9770                           ;newmain.c: 689: clr_led(show0_2[i + 1]);
  9771  002132  5049               	movf	animation0@i,w,c
  9772  002134  6E43               	movwf	??_animation0& (0+255),c
  9773  002136  6A44               	clrf	(??_animation0+1)& (0+255),c
  9774  002138  0E01               	movlw	1
  9775  00213A  2643               	addwf	??_animation0,f,c
  9776  00213C  0E00               	movlw	0
  9777  00213E  2244               	addwfc	??_animation0+1,f,c
  9778  002140  0E63               	movlw	low _show0_2
  9779  002142  2443               	addwf	??_animation0,w,c
  9780  002144  6EF6               	movwf	tblptrl,c
  9781  002146  0E7F               	movlw	high _show0_2
  9782  002148  2044               	addwfc	??_animation0+1,w,c
  9783  00214A  6EF7               	movwf	tblptrh,c
  9784  00214C                     	if	0	;There are less than 3 active tblptr bytes
  9785  00214C                     	endif
  9786  00214C  0008               	tblrd		*
  9787  00214E  50F5               	movf	tablat,w,c
  9788  002150  ECC8  F016         	call	_clr_led
  9789                           
  9790                           ;newmain.c: 690: write_display();
  9791  002154  EC2E  F016         	call	_write_display	;wreg free
  9792  002158  0E02               	movlw	2
  9793  00215A  2649               	addwf	animation0@i,f,c
  9794  00215C  D7B4               	goto	l5323
  9795  00215E                     l282:
  9796  00215E  0E04               	movlw	4
  9797  002160  1847               	xorwf	animation0@m,w,c
  9798  002162  A4D8               	btfss	status,2,c
  9799  002164  D04E               	goto	l286
  9800                           
  9801                           ;newmain.c: 693: for (i = 39; i > 20; i -= 2) {
  9802  002166  0E27               	movlw	39
  9803  002168  6E49               	movwf	animation0@i,c
  9804  00216A                     l5347:
  9805  00216A  0E15               	movlw	21
  9806  00216C  6049               	cpfslt	animation0@i,c
  9807  00216E  D001               	goto	l287
  9808  002170  0012               	return	
  9809  002172                     l287:
  9810                           
  9811                           ;newmain.c: 694: set_led(show0_2[i]);
  9812  002172  5049               	movf	animation0@i,w,c
  9813  002174  0D01               	mullw	1
  9814  002176  0E63               	movlw	low _show0_2
  9815  002178  24F3               	addwf	prodl,w,c
  9816  00217A  6EF6               	movwf	tblptrl,c
  9817  00217C  0E7F               	movlw	high _show0_2
  9818  00217E  20F4               	addwfc	prodh,w,c
  9819  002180  6EF7               	movwf	tblptrh,c
  9820  002182                     	if	0	;There are less than 3 active tblptr bytes
  9821  002182                     	endif
  9822  002182  0008               	tblrd		*
  9823  002184  50F5               	movf	tablat,w,c
  9824  002186  EC23  F017         	call	_set_led
  9825                           
  9826                           ;newmain.c: 695: set_led(show0_2[i + 1]);
  9827  00218A  5049               	movf	animation0@i,w,c
  9828  00218C  6E43               	movwf	??_animation0& (0+255),c
  9829  00218E  6A44               	clrf	(??_animation0+1)& (0+255),c
  9830  002190  0E01               	movlw	1
  9831  002192  2643               	addwf	??_animation0,f,c
  9832  002194  0E00               	movlw	0
  9833  002196  2244               	addwfc	??_animation0+1,f,c
  9834  002198  0E63               	movlw	low _show0_2
  9835  00219A  2443               	addwf	??_animation0,w,c
  9836  00219C  6EF6               	movwf	tblptrl,c
  9837  00219E  0E7F               	movlw	high _show0_2
  9838  0021A0  2044               	addwfc	??_animation0+1,w,c
  9839  0021A2  6EF7               	movwf	tblptrh,c
  9840  0021A4                     	if	0	;There are less than 3 active tblptr bytes
  9841  0021A4                     	endif
  9842  0021A4  0008               	tblrd		*
  9843  0021A6  50F5               	movf	tablat,w,c
  9844  0021A8  EC23  F017         	call	_set_led
  9845                           
  9846                           ;newmain.c: 696: write_display();
  9847  0021AC  EC2E  F016         	call	_write_display	;wreg free
  9848                           
  9849                           ;newmain.c: 697: _delay((unsigned long)((10)*(4000000/4000.0)));
  9850  0021B0  0E0D               	movlw	13
  9851  0021B2  6E43               	movwf	??_animation0& (0+255),c
  9852  0021B4  0EFC               	movlw	252
  9853  0021B6                     u10357:
  9854  0021B6  2EE8               	decfsz	wreg,f,c
  9855  0021B8  D7FE               	bra	u10357
  9856  0021BA  2E43               	decfsz	??_animation0& (0+255),f,c
  9857  0021BC  D7FC               	bra	u10357
  9858                           
  9859                           ;newmain.c: 698: clr_led(show0_2[i]);
  9860  0021BE  5049               	movf	animation0@i,w,c
  9861  0021C0  0D01               	mullw	1
  9862  0021C2  0E63               	movlw	low _show0_2
  9863  0021C4  24F3               	addwf	prodl,w,c
  9864  0021C6  6EF6               	movwf	tblptrl,c
  9865  0021C8  0E7F               	movlw	high _show0_2
  9866  0021CA  20F4               	addwfc	prodh,w,c
  9867  0021CC  6EF7               	movwf	tblptrh,c
  9868  0021CE                     	if	0	;There are less than 3 active tblptr bytes
  9869  0021CE                     	endif
  9870  0021CE  0008               	tblrd		*
  9871  0021D0  50F5               	movf	tablat,w,c
  9872  0021D2  ECC8  F016         	call	_clr_led
  9873                           
  9874                           ;newmain.c: 699: clr_led(show0_2[i + 1]);
  9875  0021D6  5049               	movf	animation0@i,w,c
  9876  0021D8  6E43               	movwf	??_animation0& (0+255),c
  9877  0021DA  6A44               	clrf	(??_animation0+1)& (0+255),c
  9878  0021DC  0E01               	movlw	1
  9879  0021DE  2643               	addwf	??_animation0,f,c
  9880  0021E0  0E00               	movlw	0
  9881  0021E2  2244               	addwfc	??_animation0+1,f,c
  9882  0021E4  0E63               	movlw	low _show0_2
  9883  0021E6  2443               	addwf	??_animation0,w,c
  9884  0021E8  6EF6               	movwf	tblptrl,c
  9885  0021EA  0E7F               	movlw	high _show0_2
  9886  0021EC  2044               	addwfc	??_animation0+1,w,c
  9887  0021EE  6EF7               	movwf	tblptrh,c
  9888  0021F0                     	if	0	;There are less than 3 active tblptr bytes
  9889  0021F0                     	endif
  9890  0021F0  0008               	tblrd		*
  9891  0021F2  50F5               	movf	tablat,w,c
  9892  0021F4  ECC8  F016         	call	_clr_led
  9893                           
  9894                           ;newmain.c: 700: write_display();
  9895  0021F8  EC2E  F016         	call	_write_display	;wreg free
  9896  0021FC  0E02               	movlw	2
  9897  0021FE  5E49               	subwf	animation0@i,f,c
  9898  002200  D7B4               	goto	l5347
  9899  002202                     l286:
  9900  002202  0E05               	movlw	5
  9901  002204  1847               	xorwf	animation0@m,w,c
  9902  002206  A4D8               	btfss	status,2,c
  9903  002208  0012               	return	
  9904                           
  9905                           ;newmain.c: 703: int x = 0;
  9906  00220A  0E00               	movlw	0
  9907  00220C  6E46               	movwf	animation0@x+1,c
  9908  00220E  0E00               	movlw	0
  9909  002210  6E45               	movwf	animation0@x,c
  9910                           
  9911                           ;newmain.c: 704: for (i = n; i < 6; i++) {
  9912  002212  C042  F049         	movff	animation0@n,animation0@i
  9913  002216                     l5373:
  9914  002216  0E05               	movlw	5
  9915  002218  6449               	cpfsgt	animation0@i,c
  9916  00221A  D001               	goto	l291
  9917  00221C  D081               	goto	u7360
  9918  00221E                     l291:
  9919                           
  9920                           ;newmain.c: 705: for (j = 0; j < 20; j++) {
  9921  00221E  0E00               	movlw	0
  9922  002220  6E48               	movwf	animation0@j,c
  9923  002222                     l5379:
  9924  002222  0E13               	movlw	19
  9925  002224  6448               	cpfsgt	animation0@j,c
  9926  002226  D001               	goto	l293
  9927  002228  D033               	goto	u7320
  9928  00222A                     l293:
  9929                           
  9930                           ;newmain.c: 706: if (show0_3[i][j] != 100)
  9931  00222A  5049               	movf	animation0@i,w,c
  9932  00222C  0D14               	mullw	20
  9933  00222E  0E55               	movlw	low _show0_3
  9934  002230  6E43               	movwf	??_animation0& (0+255),c
  9935  002232  0E7B               	movlw	high _show0_3
  9936  002234  6E44               	movwf	(??_animation0+1)& (0+255),c
  9937  002236  50F3               	movf	prodl,w,c
  9938  002238  2643               	addwf	??_animation0,f,c
  9939  00223A  50F4               	movf	prodh,w,c
  9940  00223C  2244               	addwfc	??_animation0+1,f,c
  9941  00223E  5048               	movf	animation0@j,w,c
  9942  002240  0D01               	mullw	1
  9943  002242  50F3               	movf	prodl,w,c
  9944  002244  2643               	addwf	??_animation0,f,c
  9945  002246  50F4               	movf	prodh,w,c
  9946  002248  2244               	addwfc	??_animation0+1,f,c
  9947  00224A  C043  FFF6         	movff	??_animation0,tblptrl
  9948  00224E  C044  FFF7         	movff	??_animation0+1,tblptrh
  9949  002252                     	if	0	;tblptru may be non-zero
  9950  002252                     	endif
  9951  002252                     	if	0	;tblptru may be non-zero
  9952  002252                     	endif
  9953  002252  0008               	tblrd		*
  9954  002254  50F5               	movf	tablat,w,c
  9955  002256  0A64               	xorlw	100
  9956  002258  B4D8               	btfsc	status,2,c
  9957  00225A  D01A               	goto	u7320
  9958                           
  9959                           ;newmain.c: 707: set_led(show0_3[i][j]);
  9960  00225C  5049               	movf	animation0@i,w,c
  9961  00225E  0D14               	mullw	20
  9962  002260  0E55               	movlw	low _show0_3
  9963  002262  6E43               	movwf	??_animation0& (0+255),c
  9964  002264  0E7B               	movlw	high _show0_3
  9965  002266  6E44               	movwf	(??_animation0+1)& (0+255),c
  9966  002268  50F3               	movf	prodl,w,c
  9967  00226A  2643               	addwf	??_animation0,f,c
  9968  00226C  50F4               	movf	prodh,w,c
  9969  00226E  2244               	addwfc	??_animation0+1,f,c
  9970  002270  5048               	movf	animation0@j,w,c
  9971  002272  0D01               	mullw	1
  9972  002274  50F3               	movf	prodl,w,c
  9973  002276  2643               	addwf	??_animation0,f,c
  9974  002278  50F4               	movf	prodh,w,c
  9975  00227A  2244               	addwfc	??_animation0+1,f,c
  9976  00227C  C043  FFF6         	movff	??_animation0,tblptrl
  9977  002280  C044  FFF7         	movff	??_animation0+1,tblptrh
  9978  002284                     	if	0	;tblptru may be non-zero
  9979  002284                     	endif
  9980  002284                     	if	0	;tblptru may be non-zero
  9981  002284                     	endif
  9982  002284  0008               	tblrd		*
  9983  002286  50F5               	movf	tablat,w,c
  9984  002288  EC23  F017         	call	_set_led
  9985                           
  9986                           ;newmain.c: 708: else
  9987                           ;newmain.c: 709: break;
  9988  00228C  2A48               	incf	animation0@j,f,c
  9989  00228E  D7C9               	goto	l5379
  9990  002290                     u7320:
  9991                           
  9992                           ;newmain.c: 710: }
  9993                           ;newmain.c: 711: write_display();
  9994  002290  EC2E  F016         	call	_write_display	;wreg free
  9995                           
  9996                           ;newmain.c: 712: _delay((unsigned long)((10)*(4000000/4000.0)));
  9997  002294  0E0D               	movlw	13
  9998  002296  6E43               	movwf	??_animation0& (0+255),c
  9999  002298  0EFC               	movlw	252
 10000  00229A                     u10367:
 10001  00229A  2EE8               	decfsz	wreg,f,c
 10002  00229C  D7FE               	bra	u10367
 10003  00229E  2E43               	decfsz	??_animation0& (0+255),f,c
 10004  0022A0  D7FC               	bra	u10367
 10005                           
 10006                           ;newmain.c: 713: x++;
 10007  0022A2  4A45               	infsnz	animation0@x,f,c
 10008  0022A4  2A46               	incf	animation0@x+1,f,c
 10009                           
 10010                           ;newmain.c: 714: for (j = 0; j < 20; j++) {
 10011  0022A6  0E00               	movlw	0
 10012  0022A8  6E48               	movwf	animation0@j,c
 10013  0022AA                     l5399:
 10014  0022AA  0E13               	movlw	19
 10015  0022AC  6448               	cpfsgt	animation0@j,c
 10016  0022AE  D001               	goto	l297
 10017  0022B0  D033               	goto	u7350
 10018  0022B2                     l297:
 10019                           
 10020                           ;newmain.c: 715: if (show0_3[i][j] != 100)
 10021  0022B2  5049               	movf	animation0@i,w,c
 10022  0022B4  0D14               	mullw	20
 10023  0022B6  0E55               	movlw	low _show0_3
 10024  0022B8  6E43               	movwf	??_animation0& (0+255),c
 10025  0022BA  0E7B               	movlw	high _show0_3
 10026  0022BC  6E44               	movwf	(??_animation0+1)& (0+255),c
 10027  0022BE  50F3               	movf	prodl,w,c
 10028  0022C0  2643               	addwf	??_animation0,f,c
 10029  0022C2  50F4               	movf	prodh,w,c
 10030  0022C4  2244               	addwfc	??_animation0+1,f,c
 10031  0022C6  5048               	movf	animation0@j,w,c
 10032  0022C8  0D01               	mullw	1
 10033  0022CA  50F3               	movf	prodl,w,c
 10034  0022CC  2643               	addwf	??_animation0,f,c
 10035  0022CE  50F4               	movf	prodh,w,c
 10036  0022D0  2244               	addwfc	??_animation0+1,f,c
 10037  0022D2  C043  FFF6         	movff	??_animation0,tblptrl
 10038  0022D6  C044  FFF7         	movff	??_animation0+1,tblptrh
 10039  0022DA                     	if	0	;tblptru may be non-zero
 10040  0022DA                     	endif
 10041  0022DA                     	if	0	;tblptru may be non-zero
 10042  0022DA                     	endif
 10043  0022DA  0008               	tblrd		*
 10044  0022DC  50F5               	movf	tablat,w,c
 10045  0022DE  0A64               	xorlw	100
 10046  0022E0  B4D8               	btfsc	status,2,c
 10047  0022E2  D01A               	goto	u7350
 10048                           
 10049                           ;newmain.c: 716: clr_led(show0_3[i][j]);
 10050  0022E4  5049               	movf	animation0@i,w,c
 10051  0022E6  0D14               	mullw	20
 10052  0022E8  0E55               	movlw	low _show0_3
 10053  0022EA  6E43               	movwf	??_animation0& (0+255),c
 10054  0022EC  0E7B               	movlw	high _show0_3
 10055  0022EE  6E44               	movwf	(??_animation0+1)& (0+255),c
 10056  0022F0  50F3               	movf	prodl,w,c
 10057  0022F2  2643               	addwf	??_animation0,f,c
 10058  0022F4  50F4               	movf	prodh,w,c
 10059  0022F6  2244               	addwfc	??_animation0+1,f,c
 10060  0022F8  5048               	movf	animation0@j,w,c
 10061  0022FA  0D01               	mullw	1
 10062  0022FC  50F3               	movf	prodl,w,c
 10063  0022FE  2643               	addwf	??_animation0,f,c
 10064  002300  50F4               	movf	prodh,w,c
 10065  002302  2244               	addwfc	??_animation0+1,f,c
 10066  002304  C043  FFF6         	movff	??_animation0,tblptrl
 10067  002308  C044  FFF7         	movff	??_animation0+1,tblptrh
 10068  00230C                     	if	0	;tblptru may be non-zero
 10069  00230C                     	endif
 10070  00230C                     	if	0	;tblptru may be non-zero
 10071  00230C                     	endif
 10072  00230C  0008               	tblrd		*
 10073  00230E  50F5               	movf	tablat,w,c
 10074  002310  ECC8  F016         	call	_clr_led
 10075                           
 10076                           ;newmain.c: 717: else
 10077                           ;newmain.c: 718: break;
 10078  002314  2A48               	incf	animation0@j,f,c
 10079  002316  D7C9               	goto	l5399
 10080  002318                     u7350:
 10081                           
 10082                           ;newmain.c: 719: }
 10083                           ;newmain.c: 720: write_display();
 10084  002318  EC2E  F016         	call	_write_display	;wreg free
 10085  00231C  2A49               	incf	animation0@i,f,c
 10086  00231E  D77B               	goto	l5373
 10087  002320                     u7360:
 10088                           
 10089                           ;newmain.c: 721: }
 10090                           ;newmain.c: 722: if (x < 3)
 10091  002320  BE46               	btfsc	animation0@x+1,7,c
 10092  002322  D006               	goto	u7370
 10093  002324  5046               	movf	animation0@x+1,w,c
 10094  002326  E10D               	bnz	l302
 10095  002328  0E03               	movlw	3
 10096  00232A  5C45               	subwf	animation0@x,w,c
 10097  00232C  B0D8               	btfsc	status,0,c
 10098  00232E  0012               	return	
 10099  002330                     u7370:
 10100                           
 10101                           ;newmain.c: 723: _delay((unsigned long)((20)*(4000000/4000.0)));
 10102  002330  0E1A               	movlw	26
 10103  002332  6E43               	movwf	??_animation0& (0+255),c
 10104  002334  0EF8               	movlw	248
 10105  002336                     u10377:
 10106  002336  2EE8               	decfsz	wreg,f,c
 10107  002338  D7FE               	bra	u10377
 10108  00233A  2E43               	decfsz	??_animation0& (0+255),f,c
 10109  00233C  D7FC               	bra	u10377
 10110  00233E  D000               	nop2	
 10111  002340  0012               	return	
 10112  002342                     l302:
 10113  002342  0012               	return		;funcret
 10114  002344                     __end_of_animation0:
 10115                           	opt stack 0
 10116                           tblptru	equ	0xFF8
 10117                           tblptrh	equ	0xFF7
 10118                           tblptrl	equ	0xFF6
 10119                           tablat	equ	0xFF5
 10120                           prodh	equ	0xFF4
 10121                           prodl	equ	0xFF3
 10122                           intcon	equ	0xFF2
 10123                           intcon2	equ	0xFF1
 10124                           postinc0	equ	0xFEE
 10125                           wreg	equ	0xFE8
 10126                           indf2	equ	0xFDF
 10127                           postinc2	equ	0xFDE
 10128                           postdec2	equ	0xFDD
 10129                           fsr2h	equ	0xFDA
 10130                           fsr2l	equ	0xFD9
 10131                           status	equ	0xFD8
 10132                           
 10133 ;; *************** function _write_display *****************
 10134 ;; Defined at:
 10135 ;;		line 1202 in file "newmain.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;		None
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;  i               2   58[COMRAM] int 
 10140 ;;  j               2   56[COMRAM] int 
 10141 ;; Return value:  Size  Location     Type
 10142 ;;                  1    wreg      void 
 10143 ;; Registers used:
 10144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10145 ;; Tracked objects:
 10146 ;;		On entry : 0/0
 10147 ;;		On exit  : 0/0
 10148 ;;		Unchanged: 0/0
 10149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10150 ;;      Params:         0       0       0       0       0       0       0
 10151 ;;      Locals:         4       0       0       0       0       0       0
 10152 ;;      Temps:          6       0       0       0       0       0       0
 10153 ;;      Totals:        10       0       0       0       0       0       0
 10154 ;;Total ram usage:       10 bytes
 10155 ;; Hardware stack levels used:    1
 10156 ;; Hardware stack levels required when called:    6
 10157 ;; This function calls:
 10158 ;;		_MyIdleI2C
 10159 ;;		_MyStartI2C
 10160 ;;		_MyStopI2C
 10161 ;;		___wmul
 10162 ;;		_write
 10163 ;; This function is called by:
 10164 ;;		_main
 10165 ;;		_animation0
 10166 ;;		_animation1
 10167 ;;		_animation2
 10168 ;;		_animation3
 10169 ;;		_animation4
 10170 ;;		_animation5
 10171 ;;		_animation6
 10172 ;;		_animation7
 10173 ;; This function uses a non-reentrant model
 10174 ;;
 10175                           
 10176                           	psect	text11
 10177  002C5C                     __ptext11:
 10178                           	opt stack 0
 10179  002C5C                     _write_display:
 10180                           	opt stack 24
 10181                           
 10182                           ;newmain.c: 1203: int i, j;
 10183                           ;newmain.c: 1204: for (i = 0; i < 4; i++) {
 10184                           
 10185                           ;incstack = 0
 10186  002C5C  0E00               	movlw	0
 10187  002C5E  6E3C               	movwf	write_display@i+1,c
 10188  002C60  0E00               	movlw	0
 10189  002C62  6E3B               	movwf	write_display@i,c
 10190  002C64  BE3C               	btfsc	write_display@i+1,7,c
 10191  002C66  D008               	goto	l574
 10192  002C68  503C               	movf	write_display@i+1,w,c
 10193  002C6A  E105               	bnz	u7110
 10194  002C6C  0E04               	movlw	4
 10195  002C6E  5C3B               	subwf	write_display@i,w,c
 10196  002C70  B0D8               	btfsc	status,0,c
 10197  002C72  0012               	return	
 10198  002C74  D001               	goto	l574
 10199  002C76                     u7110:
 10200  002C76  0012               	return	
 10201  002C78                     l574:
 10202                           
 10203                           ;newmain.c: 1205: MyIdleI2C();
 10204  002C78  ECD3  F018         	call	_MyIdleI2C	;wreg free
 10205                           
 10206                           ;newmain.c: 1206: MyStartI2C();
 10207  002C7C  ECE5  F018         	call	_MyStartI2C	;wreg free
 10208                           
 10209                           ;newmain.c: 1207: MyIdleI2C();
 10210  002C80  ECD3  F018         	call	_MyIdleI2C	;wreg free
 10211                           
 10212                           ;newmain.c: 1208: write(matrices[i].address | 0x00);
 10213  002C84  C03B  F02D         	movff	write_display@i,___wmul@multiplier
 10214  002C88  C03C  F02E         	movff	write_display@i+1,___wmul@multiplier+1
 10215  002C8C  0E00               	movlw	0
 10216  002C8E  6E30               	movwf	___wmul@multiplicand+1,c
 10217  002C90  0E1D               	movlw	29
 10218  002C92  6E2F               	movwf	___wmul@multiplicand,c
 10219  002C94  EC83  F018         	call	___wmul	;wreg free
 10220  002C98  0E80               	movlw	low _matrices
 10221  002C9A  242D               	addwf	?___wmul,w,c
 10222  002C9C  6ED9               	movwf	fsr2l,c
 10223  002C9E  0E01               	movlw	high _matrices
 10224  002CA0  202E               	addwfc	?___wmul+1,w,c
 10225  002CA2  6EDA               	movwf	fsr2h,c
 10226  002CA4  50DF               	movf	indf2,w,c
 10227  002CA6  EC6C  F018         	call	_write
 10228                           
 10229                           ;newmain.c: 1209: MyIdleI2C();
 10230  002CAA  ECD3  F018         	call	_MyIdleI2C	;wreg free
 10231                           
 10232                           ;newmain.c: 1210: write(0x00);
 10233  002CAE  0E00               	movlw	0
 10234  002CB0  EC6C  F018         	call	_write
 10235                           
 10236                           ;newmain.c: 1211: MyIdleI2C();
 10237  002CB4  ECD3  F018         	call	_MyIdleI2C	;wreg free
 10238                           
 10239                           ;newmain.c: 1213: for (j = 0; j < 8; j++) {
 10240  002CB8  0E00               	movlw	0
 10241  002CBA  6E3A               	movwf	write_display@j+1,c
 10242  002CBC  0E00               	movlw	0
 10243  002CBE  6E39               	movwf	write_display@j,c
 10244  002CC0                     l5249:
 10245  002CC0  BE3A               	btfsc	write_display@j+1,7,c
 10246  002CC2  D006               	goto	l576
 10247  002CC4  503A               	movf	write_display@j+1,w,c
 10248  002CC6  E15A               	bnz	l5259
 10249  002CC8  0E08               	movlw	8
 10250  002CCA  5C39               	subwf	write_display@j,w,c
 10251  002CCC  B0D8               	btfsc	status,0,c
 10252  002CCE  D056               	goto	u7130
 10253  002CD0                     l576:
 10254                           
 10255                           ;newmain.c: 1214: write(matrices[i].display_buffer[j]&0xff);
 10256  002CD0  C03B  F02D         	movff	write_display@i,___wmul@multiplier
 10257  002CD4  C03C  F02E         	movff	write_display@i+1,___wmul@multiplier+1
 10258  002CD8  0E00               	movlw	0
 10259  002CDA  6E30               	movwf	___wmul@multiplicand+1,c
 10260  002CDC  0E1D               	movlw	29
 10261  002CDE  6E2F               	movwf	___wmul@multiplicand,c
 10262  002CE0  EC83  F018         	call	___wmul	;wreg free
 10263  002CE4  C039  F033         	movff	write_display@j,??_write_display
 10264  002CE8  C03A  F034         	movff	write_display@j+1,??_write_display+1
 10265  002CEC  90D8               	bcf	status,0,c
 10266  002CEE  3633               	rlcf	??_write_display,f,c
 10267  002CF0  3634               	rlcf	??_write_display+1,f,c
 10268  002CF2  0E0D               	movlw	13
 10269  002CF4  2633               	addwf	??_write_display,f,c
 10270  002CF6  0E00               	movlw	0
 10271  002CF8  2234               	addwfc	??_write_display+1,f,c
 10272  002CFA  0E80               	movlw	low _matrices
 10273  002CFC  6E35               	movwf	(??_write_display+2)& (0+255),c
 10274  002CFE  0E01               	movlw	high _matrices
 10275  002D00  6E36               	movwf	(??_write_display+3)& (0+255),c
 10276  002D02  5033               	movf	??_write_display,w,c
 10277  002D04  2635               	addwf	??_write_display+2,f,c
 10278  002D06  5034               	movf	??_write_display+1,w,c
 10279  002D08  2236               	addwfc	??_write_display+3,f,c
 10280  002D0A  502D               	movf	?___wmul,w,c
 10281  002D0C  2435               	addwf	??_write_display+2,w,c
 10282  002D0E  6ED9               	movwf	fsr2l,c
 10283  002D10  502E               	movf	?___wmul+1,w,c
 10284  002D12  2036               	addwfc	??_write_display+3,w,c
 10285  002D14  6EDA               	movwf	fsr2h,c
 10286  002D16  50DF               	movf	indf2,w,c
 10287  002D18  EC6C  F018         	call	_write
 10288                           
 10289                           ;newmain.c: 1215: write(matrices[i].display_buffer[j] >> 8);
 10290  002D1C  C03B  F02D         	movff	write_display@i,___wmul@multiplier
 10291  002D20  C03C  F02E         	movff	write_display@i+1,___wmul@multiplier+1
 10292  002D24  0E00               	movlw	0
 10293  002D26  6E30               	movwf	___wmul@multiplicand+1,c
 10294  002D28  0E1D               	movlw	29
 10295  002D2A  6E2F               	movwf	___wmul@multiplicand,c
 10296  002D2C  EC83  F018         	call	___wmul	;wreg free
 10297  002D30  C039  F033         	movff	write_display@j,??_write_display
 10298  002D34  C03A  F034         	movff	write_display@j+1,??_write_display+1
 10299  002D38  90D8               	bcf	status,0,c
 10300  002D3A  3633               	rlcf	??_write_display,f,c
 10301  002D3C  3634               	rlcf	??_write_display+1,f,c
 10302  002D3E  0E0D               	movlw	13
 10303  002D40  2633               	addwf	??_write_display,f,c
 10304  002D42  0E00               	movlw	0
 10305  002D44  2234               	addwfc	??_write_display+1,f,c
 10306  002D46  0E80               	movlw	low _matrices
 10307  002D48  6E35               	movwf	(??_write_display+2)& (0+255),c
 10308  002D4A  0E01               	movlw	high _matrices
 10309  002D4C  6E36               	movwf	(??_write_display+3)& (0+255),c
 10310  002D4E  5033               	movf	??_write_display,w,c
 10311  002D50  2635               	addwf	??_write_display+2,f,c
 10312  002D52  5034               	movf	??_write_display+1,w,c
 10313  002D54  2236               	addwfc	??_write_display+3,f,c
 10314  002D56  502D               	movf	?___wmul,w,c
 10315  002D58  2435               	addwf	??_write_display+2,w,c
 10316  002D5A  6ED9               	movwf	fsr2l,c
 10317  002D5C  502E               	movf	?___wmul+1,w,c
 10318  002D5E  2036               	addwfc	??_write_display+3,w,c
 10319  002D60  6EDA               	movwf	fsr2h,c
 10320  002D62  CFDE F037          	movff	postinc2,??_write_display+4
 10321  002D66  CFDD F038          	movff	postdec2,??_write_display+5
 10322  002D6A  C038  F037         	movff	??_write_display+5,??_write_display+4
 10323  002D6E  6A38               	clrf	??_write_display+5,c
 10324  002D70  5037               	movf	??_write_display+4,w,c
 10325  002D72  EC6C  F018         	call	_write
 10326  002D76  4A39               	infsnz	write_display@j,f,c
 10327  002D78  2A3A               	incf	write_display@j+1,f,c
 10328  002D7A  D7A2               	goto	l5249
 10329  002D7C                     u7130:
 10330  002D7C                     l5259:
 10331                           
 10332                           ;newmain.c: 1216: }
 10333                           ;newmain.c: 1217: MyStopI2C();
 10334  002D7C  ECE3  F018         	call	_MyStopI2C	;wreg free
 10335  002D80  4A3B               	infsnz	write_display@i,f,c
 10336  002D82  2A3C               	incf	write_display@i+1,f,c
 10337  002D84  BE3C               	btfsc	write_display@i+1,7,c
 10338  002D86  D778               	goto	l574
 10339  002D88  503C               	movf	write_display@i+1,w,c
 10340  002D8A  E101               	bnz	l578
 10341  002D8C  D76F               	goto	L19
 10342  002D8E                     l578:
 10343  002D8E  0012               	return		;funcret
 10344  002D90                     __end_of_write_display:
 10345                           	opt stack 0
 10346                           tblptru	equ	0xFF8
 10347                           tblptrh	equ	0xFF7
 10348                           tblptrl	equ	0xFF6
 10349                           tablat	equ	0xFF5
 10350                           prodh	equ	0xFF4
 10351                           prodl	equ	0xFF3
 10352                           intcon	equ	0xFF2
 10353                           intcon2	equ	0xFF1
 10354                           postinc0	equ	0xFEE
 10355                           wreg	equ	0xFE8
 10356                           indf2	equ	0xFDF
 10357                           postinc2	equ	0xFDE
 10358                           postdec2	equ	0xFDD
 10359                           fsr2h	equ	0xFDA
 10360                           fsr2l	equ	0xFD9
 10361                           status	equ	0xFD8
 10362                           
 10363 ;; *************** function _write *****************
 10364 ;; Defined at:
 10365 ;;		line 1330 in file "newmain.c"
 10366 ;; Parameters:    Size  Location     Type
 10367 ;;  data_out        1    wreg     unsigned char 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;  data_out        1   47[COMRAM] unsigned char 
 10370 ;;  status          2   48[COMRAM] int 
 10371 ;;  data            1   46[COMRAM] char 
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1    wreg      void 
 10374 ;; Registers used:
 10375 ;;		wreg, status,2, status,0, cstack
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10381 ;;      Params:         0       0       0       0       0       0       0
 10382 ;;      Locals:         4       0       0       0       0       0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0
 10384 ;;      Totals:         4       0       0       0       0       0       0
 10385 ;;Total ram usage:        4 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:    5
 10388 ;; This function calls:
 10389 ;;		_MyWriteI2C
 10390 ;; This function is called by:
 10391 ;;		_main
 10392 ;;		_write_display
 10393 ;;		_read_switch
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           	psect	text12
 10398  0030D8                     __ptext12:
 10399                           	opt stack 0
 10400  0030D8                     _write:
 10401                           	opt stack 24
 10402                           
 10403                           ;incstack = 0
 10404                           ;write@data_out stored from wreg
 10405  0030D8  6E30               	movwf	write@data_out,c
 10406                           
 10407                           ;newmain.c: 1331: signed char data;
 10408                           ;newmain.c: 1332: int status;
 10409                           ;newmain.c: 1333: data = SSPBUF;
 10410  0030DA  CFC9 F02F          	movff	4041,write@data	;volatile
 10411  0030DE                     
 10412                           ;newmain.c: 1335: status = MyWriteI2C(data_out);
 10413  0030DE  5030               	movf	write@data_out,w,c
 10414  0030E0  EC1C  F018         	call	_MyWriteI2C
 10415  0030E4  6E31               	movwf	write@status,c
 10416  0030E6  6A32               	clrf	write@status+1,c
 10417  0030E8  BE31               	btfsc	write@status,7,c
 10418  0030EA  0632               	decf	write@status+1,f,c
 10419                           
 10420                           ;newmain.c: 1336: if (status == -1) {
 10421  0030EC  2831               	incf	write@status,w,c
 10422  0030EE  E106               	bnz	l5213
 10423  0030F0  2832               	incf	write@status+1,w,c
 10424  0030F2  A4D8               	btfss	status,2,c
 10425  0030F4  D003               	goto	l643
 10426                           
 10427                           ;newmain.c: 1337: data = SSPBUF;
 10428  0030F6  CFC9 F02F          	movff	4041,write@data	;volatile
 10429                           
 10430                           ;newmain.c: 1338: SSPCON1bits.WCOL = 0;
 10431  0030FA  9EC6               	bcf	4038,7,c	;volatile
 10432  0030FC                     l643:
 10433  0030FC                     l5213:
 10434                           
 10435                           ;newmain.c: 1339: }
 10436                           ;newmain.c: 1340: } while (status != 0);
 10437  0030FC  5031               	movf	write@status,w,c
 10438  0030FE  1032               	iorwf	write@status+1,w,c
 10439  003100  B4D8               	btfsc	status,2,c
 10440  003102  0012               	return	
 10441  003104  D7EC               	goto	l642
 10442  003106                     __end_of_write:
 10443                           	opt stack 0
 10444                           tblptru	equ	0xFF8
 10445                           tblptrh	equ	0xFF7
 10446                           tblptrl	equ	0xFF6
 10447                           tablat	equ	0xFF5
 10448                           prodh	equ	0xFF4
 10449                           prodl	equ	0xFF3
 10450                           intcon	equ	0xFF2
 10451                           intcon2	equ	0xFF1
 10452                           postinc0	equ	0xFEE
 10453                           wreg	equ	0xFE8
 10454                           indf2	equ	0xFDF
 10455                           postinc2	equ	0xFDE
 10456                           postdec2	equ	0xFDD
 10457                           fsr2h	equ	0xFDA
 10458                           fsr2l	equ	0xFD9
 10459                           status	equ	0xFD8
 10460                           
 10461 ;; *************** function _MyWriteI2C *****************
 10462 ;; Defined at:
 10463 ;;		line 1302 in file "newmain.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;  data_out        1    wreg     unsigned char 
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;  data_out        1   45[COMRAM] unsigned char 
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      char 
 10470 ;; Registers used:
 10471 ;;		wreg, status,2, status,0, cstack
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10477 ;;      Params:         0       0       0       0       0       0       0
 10478 ;;      Locals:         1       0       0       0       0       0       0
 10479 ;;      Temps:          0       0       0       0       0       0       0
 10480 ;;      Totals:         1       0       0       0       0       0       0
 10481 ;;Total ram usage:        1 bytes
 10482 ;; Hardware stack levels used:    1
 10483 ;; Hardware stack levels required when called:    4
 10484 ;; This function calls:
 10485 ;;		_MyIdleI2C
 10486 ;; This function is called by:
 10487 ;;		_write
 10488 ;; This function uses a non-reentrant model
 10489 ;;
 10490                           
 10491                           	psect	text13
 10492  003038                     __ptext13:
 10493                           	opt stack 0
 10494  003038                     _MyWriteI2C:
 10495                           	opt stack 24
 10496                           
 10497                           ;incstack = 0
 10498                           ;MyWriteI2C@data_out stored from wreg
 10499  003038  6E2E               	movwf	MyWriteI2C@data_out,c
 10500                           
 10501                           ;newmain.c: 1303: SSPBUF = data_out;
 10502  00303A  C02E  FFC9         	movff	MyWriteI2C@data_out,4041	;volatile
 10503                           
 10504                           ;newmain.c: 1304: if (SSPCON1bits.WCOL)
 10505  00303E  AEC6               	btfss	4038,7,c	;volatile
 10506  003040  D002               	goto	l622
 10507                           
 10508                           ;newmain.c: 1305: return ( -1);
 10509  003042  0EFF               	movlw	255
 10510  003044  0012               	return	
 10511  003046                     l622:
 10512                           
 10513                           ;newmain.c: 1306: else {
 10514                           ;newmain.c: 1307: if (((SSPCON1 & 0x0F) != 0x08) && ((SSPCON1 & 0x0F) != 0x0B))
 10515  003046  50C6               	movf	4038,w,c	;volatile
 10516  003048  0B0F               	andlw	15
 10517  00304A  0A08               	xorlw	8
 10518  00304C  B4D8               	btfsc	status,2,c
 10519  00304E  D00F               	goto	l625
 10520  003050  50C6               	movf	4038,w,c	;volatile
 10521  003052  0B0F               	andlw	15
 10522  003054  0A0B               	xorlw	11
 10523  003056  B4D8               	btfsc	status,2,c
 10524  003058  D00A               	goto	l625
 10525                           
 10526                           ;newmain.c: 1308: {
 10527                           ;newmain.c: 1309: SSPCON1bits.CKP = 1;
 10528  00305A  88C6               	bsf	4038,4,c	;volatile
 10529  00305C  A69E               	btfss	3998,3,c	;volatile
 10530  00305E  D7FE               	goto	l627
 10531                           
 10532                           ;newmain.c: 1312: if ((!SSPSTATbits.R_W) && (!SSPSTATbits.BF))
 10533  003060  A4C7               	btfss	4039,2,c	;volatile
 10534  003062  B0C7               	btfsc	4039,0,c	;volatile
 10535  003064  D002               	goto	l629
 10536                           
 10537                           ;newmain.c: 1313: {
 10538                           ;newmain.c: 1314: return ( -2);
 10539  003066  0EFE               	movlw	254
 10540                           
 10541                           ;newmain.c: 1315: } else {
 10542  003068  0012               	return	
 10543  00306A                     l629:
 10544                           
 10545                           ;newmain.c: 1316: return ( 0);
 10546  00306A  0E00               	movlw	0
 10547                           
 10548                           ;newmain.c: 1317: }
 10549                           ;newmain.c: 1318: } else if (((SSPCON1 & 0x0F) == 0x08) || ((SSPCON1 & 0x0F) == 0x0B))
 10550  00306C  0012               	return	
 10551  00306E                     l625:
 10552  00306E  50C6               	movf	4038,w,c	;volatile
 10553  003070  0B0F               	andlw	15
 10554  003072  0A08               	xorlw	8
 10555  003074  B4D8               	btfsc	status,2,c
 10556  003076  D005               	goto	u7050
 10557  003078  50C6               	movf	4038,w,c	;volatile
 10558  00307A  0B0F               	andlw	15
 10559  00307C  0A0B               	xorlw	11
 10560  00307E  A4D8               	btfss	status,2,c
 10561  003080  0012               	return	
 10562  003082                     u7050:
 10563                           
 10564                           ;newmain.c: 1319: {
 10565                           ;newmain.c: 1320: while (SSPSTATbits.BF);
 10566  003082  B0C7               	btfsc	4039,0,c	;volatile
 10567  003084  D7FE               	goto	u7050
 10568                           
 10569                           ;newmain.c: 1321: MyIdleI2C();
 10570  003086  ECD3  F018         	call	_MyIdleI2C	;wreg free
 10571                           
 10572                           ;newmain.c: 1322: if (SSPCON2bits.ACKSTAT)
 10573  00308A  ACC5               	btfss	4037,6,c	;volatile
 10574  00308C  D002               	goto	l638
 10575                           
 10576                           ;newmain.c: 1323: return ( -2);
 10577  00308E  0EFE               	movlw	254
 10578  003090  0012               	return	
 10579  003092                     l638:
 10580                           
 10581                           ;newmain.c: 1324: else return ( 0);
 10582  003092  0E00               	movlw	0
 10583  003094  0012               	return	
 10584  003096                     __end_of_MyWriteI2C:
 10585                           	opt stack 0
 10586                           tblptru	equ	0xFF8
 10587                           tblptrh	equ	0xFF7
 10588                           tblptrl	equ	0xFF6
 10589                           tablat	equ	0xFF5
 10590                           prodh	equ	0xFF4
 10591                           prodl	equ	0xFF3
 10592                           intcon	equ	0xFF2
 10593                           intcon2	equ	0xFF1
 10594                           postinc0	equ	0xFEE
 10595                           wreg	equ	0xFE8
 10596                           indf2	equ	0xFDF
 10597                           postinc2	equ	0xFDE
 10598                           postdec2	equ	0xFDD
 10599                           fsr2h	equ	0xFDA
 10600                           fsr2l	equ	0xFD9
 10601                           status	equ	0xFD8
 10602                           
 10603 ;; *************** function _MyIdleI2C *****************
 10604 ;; Defined at:
 10605 ;;		line 1297 in file "newmain.c"
 10606 ;; Parameters:    Size  Location     Type
 10607 ;;		None
 10608 ;; Auto vars:     Size  Location     Type
 10609 ;;		None
 10610 ;; Return value:  Size  Location     Type
 10611 ;;                  1    wreg      void 
 10612 ;; Registers used:
 10613 ;;		wreg, status,2, status,0
 10614 ;; Tracked objects:
 10615 ;;		On entry : 0/0
 10616 ;;		On exit  : 0/0
 10617 ;;		Unchanged: 0/0
 10618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10619 ;;      Params:         0       0       0       0       0       0       0
 10620 ;;      Locals:         0       0       0       0       0       0       0
 10621 ;;      Temps:          1       0       0       0       0       0       0
 10622 ;;      Totals:         1       0       0       0       0       0       0
 10623 ;;Total ram usage:        1 bytes
 10624 ;; Hardware stack levels used:    1
 10625 ;; Hardware stack levels required when called:    3
 10626 ;; This function calls:
 10627 ;;		Nothing
 10628 ;; This function is called by:
 10629 ;;		_main
 10630 ;;		_write_display
 10631 ;;		_MyWriteI2C
 10632 ;;		_read_switch
 10633 ;; This function uses a non-reentrant model
 10634 ;;
 10635                           
 10636                           	psect	text14
 10637  0031A6                     __ptext14:
 10638                           	opt stack 0
 10639  0031A6                     _MyIdleI2C:
 10640                           	opt stack 24
 10641                           
 10642                           ;newmain.c: 1299: continue;
 10643                           
 10644                           ;newmain.c: 1298: while ((SSPCON2 & 0x1F) || (SSPSTATbits.R_W))
 10645                           
 10646                           ;incstack = 0
 10647  0031A6  CFC5 F02D          	movff	4037,??_MyIdleI2C	;volatile
 10648  0031AA  0E1F               	movlw	31
 10649  0031AC  162D               	andwf	??_MyIdleI2C,f,c
 10650  0031AE  A4D8               	btfss	status,2,c
 10651  0031B0  D7FA               	goto	_MyIdleI2C
 10652  0031B2  A4C7               	btfss	4039,2,c	;volatile
 10653  0031B4  0012               	return	
 10654  0031B6  D7F7               	goto	_MyIdleI2C
 10655  0031B8                     __end_of_MyIdleI2C:
 10656                           	opt stack 0
 10657                           tblptru	equ	0xFF8
 10658                           tblptrh	equ	0xFF7
 10659                           tblptrl	equ	0xFF6
 10660                           tablat	equ	0xFF5
 10661                           prodh	equ	0xFF4
 10662                           prodl	equ	0xFF3
 10663                           intcon	equ	0xFF2
 10664                           intcon2	equ	0xFF1
 10665                           postinc0	equ	0xFEE
 10666                           wreg	equ	0xFE8
 10667                           indf2	equ	0xFDF
 10668                           postinc2	equ	0xFDE
 10669                           postdec2	equ	0xFDD
 10670                           fsr2h	equ	0xFDA
 10671                           fsr2l	equ	0xFD9
 10672                           status	equ	0xFD8
 10673                           
 10674 ;; *************** function _MyStopI2C *****************
 10675 ;; Defined at:
 10676 ;;		line 1289 in file "newmain.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;		None
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;		None
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1    wreg      void 
 10683 ;; Registers used:
 10684 ;;		None
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10690 ;;      Params:         0       0       0       0       0       0       0
 10691 ;;      Locals:         0       0       0       0       0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0
 10693 ;;      Totals:         0       0       0       0       0       0       0
 10694 ;;Total ram usage:        0 bytes
 10695 ;; Hardware stack levels used:    1
 10696 ;; Hardware stack levels required when called:    3
 10697 ;; This function calls:
 10698 ;;		Nothing
 10699 ;; This function is called by:
 10700 ;;		_main
 10701 ;;		_write_display
 10702 ;;		_read_switch
 10703 ;; This function uses a non-reentrant model
 10704 ;;
 10705                           
 10706                           	psect	text15
 10707  0031C6                     __ptext15:
 10708                           	opt stack 0
 10709  0031C6                     _MyStopI2C:
 10710                           	opt stack 26
 10711                           
 10712                           ;newmain.c: 1290: SSPCON2bits.PEN = 1;
 10713                           
 10714                           ;incstack = 0
 10715  0031C6  84C5               	bsf	4037,2,c	;volatile
 10716  0031C8  0012               	return		;funcret
 10717  0031CA                     __end_of_MyStopI2C:
 10718                           	opt stack 0
 10719                           tblptru	equ	0xFF8
 10720                           tblptrh	equ	0xFF7
 10721                           tblptrl	equ	0xFF6
 10722                           tablat	equ	0xFF5
 10723                           prodh	equ	0xFF4
 10724                           prodl	equ	0xFF3
 10725                           intcon	equ	0xFF2
 10726                           intcon2	equ	0xFF1
 10727                           postinc0	equ	0xFEE
 10728                           wreg	equ	0xFE8
 10729                           indf2	equ	0xFDF
 10730                           postinc2	equ	0xFDE
 10731                           postdec2	equ	0xFDD
 10732                           fsr2h	equ	0xFDA
 10733                           fsr2l	equ	0xFD9
 10734                           status	equ	0xFD8
 10735                           
 10736 ;; *************** function _MyStartI2C *****************
 10737 ;; Defined at:
 10738 ;;		line 1285 in file "newmain.c"
 10739 ;; Parameters:    Size  Location     Type
 10740 ;;		None
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;		None
 10743 ;; Return value:  Size  Location     Type
 10744 ;;                  1    wreg      void 
 10745 ;; Registers used:
 10746 ;;		None
 10747 ;; Tracked objects:
 10748 ;;		On entry : 0/0
 10749 ;;		On exit  : 0/0
 10750 ;;		Unchanged: 0/0
 10751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10752 ;;      Params:         0       0       0       0       0       0       0
 10753 ;;      Locals:         0       0       0       0       0       0       0
 10754 ;;      Temps:          0       0       0       0       0       0       0
 10755 ;;      Totals:         0       0       0       0       0       0       0
 10756 ;;Total ram usage:        0 bytes
 10757 ;; Hardware stack levels used:    1
 10758 ;; Hardware stack levels required when called:    3
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		_main
 10763 ;;		_write_display
 10764 ;;		_read_switch
 10765 ;; This function uses a non-reentrant model
 10766 ;;
 10767                           
 10768                           	psect	text16
 10769  0031CA                     __ptext16:
 10770                           	opt stack 0
 10771  0031CA                     _MyStartI2C:
 10772                           	opt stack 26
 10773                           
 10774                           ;newmain.c: 1286: SSPCON2bits.SEN = 1;
 10775                           
 10776                           ;incstack = 0
 10777  0031CA  80C5               	bsf	4037,0,c	;volatile
 10778  0031CC  0012               	return		;funcret
 10779  0031CE                     __end_of_MyStartI2C:
 10780                           	opt stack 0
 10781                           tblptru	equ	0xFF8
 10782                           tblptrh	equ	0xFF7
 10783                           tblptrl	equ	0xFF6
 10784                           tablat	equ	0xFF5
 10785                           prodh	equ	0xFF4
 10786                           prodl	equ	0xFF3
 10787                           intcon	equ	0xFF2
 10788                           intcon2	equ	0xFF1
 10789                           postinc0	equ	0xFEE
 10790                           wreg	equ	0xFE8
 10791                           indf2	equ	0xFDF
 10792                           postinc2	equ	0xFDE
 10793                           postdec2	equ	0xFDD
 10794                           fsr2h	equ	0xFDA
 10795                           fsr2l	equ	0xFD9
 10796                           status	equ	0xFD8
 10797                           
 10798 ;; *************** function _set_led *****************
 10799 ;; Defined at:
 10800 ;;		line 1228 in file "newmain.c"
 10801 ;; Parameters:    Size  Location     Type
 10802 ;;  i               1    wreg     unsigned char 
 10803 ;; Auto vars:     Size  Location     Type
 10804 ;;  i               1   60[COMRAM] unsigned char 
 10805 ;;  led             2   61[COMRAM] int 
 10806 ;;  matrix          2   58[COMRAM] int 
 10807 ;; Return value:  Size  Location     Type
 10808 ;;                  1    wreg      void 
 10809 ;; Registers used:
 10810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10811 ;; Tracked objects:
 10812 ;;		On entry : 0/0
 10813 ;;		On exit  : 0/0
 10814 ;;		Unchanged: 0/0
 10815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10816 ;;      Params:         0       0       0       0       0       0       0
 10817 ;;      Locals:         5       0       0       0       0       0       0
 10818 ;;      Temps:          8       0       0       0       0       0       0
 10819 ;;      Totals:        13       0       0       0       0       0       0
 10820 ;;Total ram usage:       13 bytes
 10821 ;; Hardware stack levels used:    1
 10822 ;; Hardware stack levels required when called:    4
 10823 ;; This function calls:
 10824 ;;		___wmul
 10825 ;; This function is called by:
 10826 ;;		_main
 10827 ;;		_animation0
 10828 ;;		_animation1
 10829 ;;		_animation2
 10830 ;;		_animation3
 10831 ;;		_animation4
 10832 ;;		_animation5
 10833 ;;		_animation6
 10834 ;;		_animation7
 10835 ;; This function uses a non-reentrant model
 10836 ;;
 10837                           
 10838                           	psect	text17
 10839  002E46                     __ptext17:
 10840                           	opt stack 0
 10841  002E46                     _set_led:
 10842                           	opt stack 26
 10843                           
 10844                           ;incstack = 0
 10845                           ;set_led@i stored from wreg
 10846  002E46  6E3D               	movwf	set_led@i,c
 10847                           
 10848                           ;newmain.c: 1229: int matrix = i >> 4;
 10849  002E48  C03D  F033         	movff	set_led@i,??_set_led
 10850  002E4C  3A33               	swapf	??_set_led,f,c
 10851  002E4E  0E0F               	movlw	15
 10852  002E50  1633               	andwf	??_set_led,f,c
 10853  002E52  5033               	movf	??_set_led,w,c
 10854  002E54  6E3B               	movwf	set_led@matrix,c
 10855  002E56  6A3C               	clrf	set_led@matrix+1,c
 10856                           
 10857                           ;newmain.c: 1230: int led = i & 0b1111;
 10858  002E58  C03D  F033         	movff	set_led@i,??_set_led
 10859  002E5C  0E0F               	movlw	15
 10860  002E5E  1633               	andwf	??_set_led,f,c
 10861  002E60  5033               	movf	??_set_led,w,c
 10862  002E62  6E3E               	movwf	set_led@led,c
 10863  002E64  6A3F               	clrf	set_led@led+1,c
 10864                           
 10865                           ;newmain.c: 1231: matrices[matrix].display_buffer[ledLUT[led] >> 4] |= (1 << (ledLUT[led
      +                          ]&0x0f));
 10866  002E66  0EEF               	movlw	low _ledLUT
 10867  002E68  243E               	addwf	set_led@led,w,c
 10868  002E6A  6EF6               	movwf	tblptrl,c
 10869  002E6C  0E7F               	movlw	high _ledLUT
 10870  002E6E  203F               	addwfc	set_led@led+1,w,c
 10871  002E70  6EF7               	movwf	tblptrh,c
 10872  002E72                     	if	0	;There are less than 3 active tblptr bytes
 10873  002E72                     	endif
 10874  002E72  0008               	tblrd		*
 10875  002E74  CFF5 F033          	movff	tablat,??_set_led
 10876  002E78  0E0F               	movlw	15
 10877  002E7A  1633               	andwf	??_set_led,f,c
 10878  002E7C  0E01               	movlw	1
 10879  002E7E  6E34               	movwf	(??_set_led+1)& (0+255),c
 10880  002E80  0E00               	movlw	0
 10881  002E82  6E35               	movwf	(??_set_led+2)& (0+255),c
 10882  002E84  2A33               	incf	??_set_led,f,c
 10883  002E86  D003               	goto	u7104
 10884  002E88                     u7105:
 10885  002E88  90D8               	bcf	status,0,c
 10886  002E8A  3634               	rlcf	??_set_led+1,f,c
 10887  002E8C  3635               	rlcf	??_set_led+2,f,c
 10888  002E8E                     u7104:
 10889  002E8E  2E33               	decfsz	??_set_led,f,c
 10890  002E90  D7FB               	goto	u7105
 10891  002E92  C03B  F02D         	movff	set_led@matrix,___wmul@multiplier
 10892  002E96  C03C  F02E         	movff	set_led@matrix+1,___wmul@multiplier+1
 10893  002E9A  0E00               	movlw	0
 10894  002E9C  6E30               	movwf	___wmul@multiplicand+1,c
 10895  002E9E  0E1D               	movlw	29
 10896  002EA0  6E2F               	movwf	___wmul@multiplicand,c
 10897  002EA2  EC83  F018         	call	___wmul	;wreg free
 10898  002EA6  0EEF               	movlw	low _ledLUT
 10899  002EA8  243E               	addwf	set_led@led,w,c
 10900  002EAA  6EF6               	movwf	tblptrl,c
 10901  002EAC  0E7F               	movlw	high _ledLUT
 10902  002EAE  203F               	addwfc	set_led@led+1,w,c
 10903  002EB0  6EF7               	movwf	tblptrh,c
 10904  002EB2                     	if	0	;There are less than 3 active tblptr bytes
 10905  002EB2                     	endif
 10906  002EB2  0008               	tblrd		*
 10907  002EB4  CFF5 F036          	movff	tablat,??_set_led+3
 10908  002EB8  3836               	swapf	??_set_led+3,w,c
 10909  002EBA  0B0F               	andlw	15
 10910  002EBC  6E37               	movwf	(??_set_led+4)& (0+255),c
 10911  002EBE  6A38               	clrf	(??_set_led+5)& (0+255),c
 10912  002EC0  90D8               	bcf	status,0,c
 10913  002EC2  3637               	rlcf	??_set_led+4,f,c
 10914  002EC4  3638               	rlcf	??_set_led+5,f,c
 10915  002EC6  0E0D               	movlw	13
 10916  002EC8  2637               	addwf	??_set_led+4,f,c
 10917  002ECA  0E00               	movlw	0
 10918  002ECC  2238               	addwfc	??_set_led+5,f,c
 10919  002ECE  0E80               	movlw	low _matrices
 10920  002ED0  6E39               	movwf	(??_set_led+6)& (0+255),c
 10921  002ED2  0E01               	movlw	high _matrices
 10922  002ED4  6E3A               	movwf	(??_set_led+7)& (0+255),c
 10923  002ED6  5037               	movf	??_set_led+4,w,c
 10924  002ED8  2639               	addwf	??_set_led+6,f,c
 10925  002EDA  5038               	movf	??_set_led+5,w,c
 10926  002EDC  223A               	addwfc	??_set_led+7,f,c
 10927  002EDE  502D               	movf	?___wmul,w,c
 10928  002EE0  2439               	addwf	??_set_led+6,w,c
 10929  002EE2  6ED9               	movwf	fsr2l,c
 10930  002EE4  502E               	movf	?___wmul+1,w,c
 10931  002EE6  203A               	addwfc	??_set_led+7,w,c
 10932  002EE8  6EDA               	movwf	fsr2h,c
 10933  002EEA  5034               	movf	??_set_led+1,w,c
 10934  002EEC  12DE               	iorwf	postinc2,f,c
 10935  002EEE  5035               	movf	??_set_led+2,w,c
 10936  002EF0  12DD               	iorwf	postdec2,f,c
 10937  002EF2  0012               	return		;funcret
 10938  002EF4                     __end_of_set_led:
 10939                           	opt stack 0
 10940                           tblptru	equ	0xFF8
 10941                           tblptrh	equ	0xFF7
 10942                           tblptrl	equ	0xFF6
 10943                           tablat	equ	0xFF5
 10944                           prodh	equ	0xFF4
 10945                           prodl	equ	0xFF3
 10946                           intcon	equ	0xFF2
 10947                           intcon2	equ	0xFF1
 10948                           postinc0	equ	0xFEE
 10949                           wreg	equ	0xFE8
 10950                           indf2	equ	0xFDF
 10951                           postinc2	equ	0xFDE
 10952                           postdec2	equ	0xFDD
 10953                           fsr2h	equ	0xFDA
 10954                           fsr2l	equ	0xFD9
 10955                           status	equ	0xFD8
 10956                           
 10957 ;; *************** function _clr_led *****************
 10958 ;; Defined at:
 10959 ;;		line 1222 in file "newmain.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;  i               1    wreg     unsigned char 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  i               1   62[COMRAM] unsigned char 
 10964 ;;  led             2   63[COMRAM] int 
 10965 ;;  matrix          2   60[COMRAM] int 
 10966 ;; Return value:  Size  Location     Type
 10967 ;;                  1    wreg      void 
 10968 ;; Registers used:
 10969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10970 ;; Tracked objects:
 10971 ;;		On entry : 0/0
 10972 ;;		On exit  : 0/0
 10973 ;;		Unchanged: 0/0
 10974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10975 ;;      Params:         0       0       0       0       0       0       0
 10976 ;;      Locals:         5       0       0       0       0       0       0
 10977 ;;      Temps:         10       0       0       0       0       0       0
 10978 ;;      Totals:        15       0       0       0       0       0       0
 10979 ;;Total ram usage:       15 bytes
 10980 ;; Hardware stack levels used:    1
 10981 ;; Hardware stack levels required when called:    4
 10982 ;; This function calls:
 10983 ;;		___wmul
 10984 ;; This function is called by:
 10985 ;;		_main
 10986 ;;		_animation0
 10987 ;;		_animation1
 10988 ;;		_animation2
 10989 ;;		_animation3
 10990 ;;		_animation4
 10991 ;;		_animation5
 10992 ;;		_animation6
 10993 ;;		_animation7
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           	psect	text18
 10998  002D90                     __ptext18:
 10999                           	opt stack 0
 11000  002D90                     _clr_led:
 11001                           	opt stack 26
 11002                           
 11003                           ;incstack = 0
 11004                           ;clr_led@i stored from wreg
 11005  002D90  6E3F               	movwf	clr_led@i,c
 11006                           
 11007                           ;newmain.c: 1223: int matrix = i >> 4;
 11008  002D92  C03F  F033         	movff	clr_led@i,??_clr_led
 11009  002D96  3A33               	swapf	??_clr_led,f,c
 11010  002D98  0E0F               	movlw	15
 11011  002D9A  1633               	andwf	??_clr_led,f,c
 11012  002D9C  5033               	movf	??_clr_led,w,c
 11013  002D9E  6E3D               	movwf	clr_led@matrix,c
 11014  002DA0  6A3E               	clrf	clr_led@matrix+1,c
 11015                           
 11016                           ;newmain.c: 1224: int led = i & 0b1111;
 11017  002DA2  C03F  F033         	movff	clr_led@i,??_clr_led
 11018  002DA6  0E0F               	movlw	15
 11019  002DA8  1633               	andwf	??_clr_led,f,c
 11020  002DAA  5033               	movf	??_clr_led,w,c
 11021  002DAC  6E40               	movwf	clr_led@led,c
 11022  002DAE  6A41               	clrf	clr_led@led+1,c
 11023                           
 11024                           ;newmain.c: 1225: matrices[matrix].display_buffer[ledLUT[led] >> 4] &= ~(1 << (ledLUT[le
      +                          d]&0x0f));
 11025  002DB0  0EEF               	movlw	low _ledLUT
 11026  002DB2  2440               	addwf	clr_led@led,w,c
 11027  002DB4  6EF6               	movwf	tblptrl,c
 11028  002DB6  0E7F               	movlw	high _ledLUT
 11029  002DB8  2041               	addwfc	clr_led@led+1,w,c
 11030  002DBA  6EF7               	movwf	tblptrh,c
 11031  002DBC                     	if	0	;There are less than 3 active tblptr bytes
 11032  002DBC                     	endif
 11033  002DBC  0008               	tblrd		*
 11034  002DBE  CFF5 F033          	movff	tablat,??_clr_led
 11035  002DC2  0E0F               	movlw	15
 11036  002DC4  1633               	andwf	??_clr_led,f,c
 11037  002DC6  0E01               	movlw	1
 11038  002DC8  6E34               	movwf	(??_clr_led+1)& (0+255),c
 11039  002DCA  0E00               	movlw	0
 11040  002DCC  6E35               	movwf	(??_clr_led+2)& (0+255),c
 11041  002DCE  2A33               	incf	??_clr_led,f,c
 11042  002DD0  D003               	goto	u7154
 11043  002DD2                     u7155:
 11044  002DD2  90D8               	bcf	status,0,c
 11045  002DD4  3634               	rlcf	??_clr_led+1,f,c
 11046  002DD6  3635               	rlcf	??_clr_led+2,f,c
 11047  002DD8                     u7154:
 11048  002DD8  2E33               	decfsz	??_clr_led,f,c
 11049  002DDA  D7FB               	goto	u7155
 11050  002DDC  1C34               	comf	??_clr_led+1,w,c
 11051  002DDE  6E36               	movwf	(??_clr_led+3)& (0+255),c
 11052  002DE0  1C35               	comf	??_clr_led+2,w,c
 11053  002DE2  6E37               	movwf	(??_clr_led+4)& (0+255),c
 11054  002DE4  C03D  F02D         	movff	clr_led@matrix,___wmul@multiplier
 11055  002DE8  C03E  F02E         	movff	clr_led@matrix+1,___wmul@multiplier+1
 11056  002DEC  0E00               	movlw	0
 11057  002DEE  6E30               	movwf	___wmul@multiplicand+1,c
 11058  002DF0  0E1D               	movlw	29
 11059  002DF2  6E2F               	movwf	___wmul@multiplicand,c
 11060  002DF4  EC83  F018         	call	___wmul	;wreg free
 11061  002DF8  0EEF               	movlw	low _ledLUT
 11062  002DFA  2440               	addwf	clr_led@led,w,c
 11063  002DFC  6EF6               	movwf	tblptrl,c
 11064  002DFE  0E7F               	movlw	high _ledLUT
 11065  002E00  2041               	addwfc	clr_led@led+1,w,c
 11066  002E02  6EF7               	movwf	tblptrh,c
 11067  002E04                     	if	0	;There are less than 3 active tblptr bytes
 11068  002E04                     	endif
 11069  002E04  0008               	tblrd		*
 11070  002E06  CFF5 F038          	movff	tablat,??_clr_led+5
 11071  002E0A  3838               	swapf	??_clr_led+5,w,c
 11072  002E0C  0B0F               	andlw	15
 11073  002E0E  6E39               	movwf	(??_clr_led+6)& (0+255),c
 11074  002E10  6A3A               	clrf	(??_clr_led+7)& (0+255),c
 11075  002E12  90D8               	bcf	status,0,c
 11076  002E14  3639               	rlcf	??_clr_led+6,f,c
 11077  002E16  363A               	rlcf	??_clr_led+7,f,c
 11078  002E18  0E0D               	movlw	13
 11079  002E1A  2639               	addwf	??_clr_led+6,f,c
 11080  002E1C  0E00               	movlw	0
 11081  002E1E  223A               	addwfc	??_clr_led+7,f,c
 11082  002E20  0E80               	movlw	low _matrices
 11083  002E22  6E3B               	movwf	(??_clr_led+8)& (0+255),c
 11084  002E24  0E01               	movlw	high _matrices
 11085  002E26  6E3C               	movwf	(??_clr_led+9)& (0+255),c
 11086  002E28  5039               	movf	??_clr_led+6,w,c
 11087  002E2A  263B               	addwf	??_clr_led+8,f,c
 11088  002E2C  503A               	movf	??_clr_led+7,w,c
 11089  002E2E  223C               	addwfc	??_clr_led+9,f,c
 11090  002E30  502D               	movf	?___wmul,w,c
 11091  002E32  243B               	addwf	??_clr_led+8,w,c
 11092  002E34  6ED9               	movwf	fsr2l,c
 11093  002E36  502E               	movf	?___wmul+1,w,c
 11094  002E38  203C               	addwfc	??_clr_led+9,w,c
 11095  002E3A  6EDA               	movwf	fsr2h,c
 11096  002E3C  5036               	movf	??_clr_led+3,w,c
 11097  002E3E  16DE               	andwf	postinc2,f,c
 11098  002E40  5037               	movf	??_clr_led+4,w,c
 11099  002E42  16DD               	andwf	postdec2,f,c
 11100  002E44  0012               	return		;funcret
 11101  002E46                     __end_of_clr_led:
 11102                           	opt stack 0
 11103                           tblptru	equ	0xFF8
 11104                           tblptrh	equ	0xFF7
 11105                           tblptrl	equ	0xFF6
 11106                           tablat	equ	0xFF5
 11107                           prodh	equ	0xFF4
 11108                           prodl	equ	0xFF3
 11109                           intcon	equ	0xFF2
 11110                           intcon2	equ	0xFF1
 11111                           postinc0	equ	0xFEE
 11112                           wreg	equ	0xFE8
 11113                           indf2	equ	0xFDF
 11114                           postinc2	equ	0xFDE
 11115                           postdec2	equ	0xFDD
 11116                           fsr2h	equ	0xFDA
 11117                           fsr2l	equ	0xFD9
 11118                           status	equ	0xFD8
 11119                           
 11120 ;; *************** function ___wmul *****************
 11121 ;; Defined at:
 11122 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  multiplier      2   44[COMRAM] unsigned int 
 11125 ;;  multiplicand    2   46[COMRAM] unsigned int 
 11126 ;; Auto vars:     Size  Location     Type
 11127 ;;  product         2   48[COMRAM] unsigned int 
 11128 ;; Return value:  Size  Location     Type
 11129 ;;                  2   44[COMRAM] unsigned int 
 11130 ;; Registers used:
 11131 ;;		wreg, status,2, status,0, prodl, prodh
 11132 ;; Tracked objects:
 11133 ;;		On entry : 0/0
 11134 ;;		On exit  : 0/0
 11135 ;;		Unchanged: 0/0
 11136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11137 ;;      Params:         4       0       0       0       0       0       0
 11138 ;;      Locals:         2       0       0       0       0       0       0
 11139 ;;      Temps:          0       0       0       0       0       0       0
 11140 ;;      Totals:         6       0       0       0       0       0       0
 11141 ;;Total ram usage:        6 bytes
 11142 ;; Hardware stack levels used:    1
 11143 ;; Hardware stack levels required when called:    3
 11144 ;; This function calls:
 11145 ;;		Nothing
 11146 ;; This function is called by:
 11147 ;;		_main
 11148 ;;		_animation2
 11149 ;;		_animation3
 11150 ;;		_animation7
 11151 ;;		_write_display
 11152 ;;		_clr_led
 11153 ;;		_set_led
 11154 ;;		_is_led
 11155 ;;		_read_switch
 11156 ;; This function uses a non-reentrant model
 11157 ;;
 11158                           
 11159                           	psect	text19
 11160  003106                     __ptext19:
 11161                           	opt stack 0
 11162  003106                     ___wmul:
 11163                           	opt stack 26
 11164                           
 11165                           ;incstack = 0
 11166  003106  502D               	movf	___wmul@multiplier,w,c
 11167  003108  022F               	mulwf	___wmul@multiplicand,c
 11168  00310A  CFF3 F031          	movff	prodl,___wmul@product
 11169  00310E  CFF4 F032          	movff	prodh,___wmul@product+1
 11170  003112  502D               	movf	___wmul@multiplier,w,c
 11171  003114  0230               	mulwf	___wmul@multiplicand+1,c
 11172  003116  50F3               	movf	prodl,w,c
 11173  003118  2632               	addwf	___wmul@product+1,f,c
 11174  00311A  502E               	movf	___wmul@multiplier+1,w,c
 11175  00311C  022F               	mulwf	___wmul@multiplicand,c
 11176  00311E  50F3               	movf	prodl,w,c
 11177  003120  2632               	addwf	___wmul@product+1,f,c
 11178  003122  C031  F02D         	movff	___wmul@product,?___wmul
 11179  003126  C032  F02E         	movff	___wmul@product+1,?___wmul+1
 11180  00312A  0012               	return	
 11181  00312C                     __end_of___wmul:
 11182                           	opt stack 0
 11183                           tblptru	equ	0xFF8
 11184                           tblptrh	equ	0xFF7
 11185                           tblptrl	equ	0xFF6
 11186                           tablat	equ	0xFF5
 11187                           prodh	equ	0xFF4
 11188                           prodl	equ	0xFF3
 11189                           intcon	equ	0xFF2
 11190                           intcon2	equ	0xFF1
 11191                           postinc0	equ	0xFEE
 11192                           wreg	equ	0xFE8
 11193                           indf2	equ	0xFDF
 11194                           postinc2	equ	0xFDE
 11195                           postdec2	equ	0xFDD
 11196                           fsr2h	equ	0xFDA
 11197                           fsr2l	equ	0xFD9
 11198                           status	equ	0xFD8
 11199                           
 11200 ;; *************** function _Myusartinit *****************
 11201 ;; Defined at:
 11202 ;;		line 632 in file "newmain.c"
 11203 ;; Parameters:    Size  Location     Type
 11204 ;;		None
 11205 ;; Auto vars:     Size  Location     Type
 11206 ;;		None
 11207 ;; Return value:  Size  Location     Type
 11208 ;;                  1    wreg      void 
 11209 ;; Registers used:
 11210 ;;		wreg, status,2
 11211 ;; Tracked objects:
 11212 ;;		On entry : 0/0
 11213 ;;		On exit  : 0/0
 11214 ;;		Unchanged: 0/0
 11215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11216 ;;      Params:         0       0       0       0       0       0       0
 11217 ;;      Locals:         0       0       0       0       0       0       0
 11218 ;;      Temps:          0       0       0       0       0       0       0
 11219 ;;      Totals:         0       0       0       0       0       0       0
 11220 ;;Total ram usage:        0 bytes
 11221 ;; Hardware stack levels used:    1
 11222 ;; Hardware stack levels required when called:    3
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_main
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           	psect	text20
 11231  003192                     __ptext20:
 11232                           	opt stack 0
 11233  003192                     _Myusartinit:
 11234                           	opt stack 27
 11235                           
 11236                           ;newmain.c: 634: TRISCbits.TRISC6 = 1;
 11237                           
 11238                           ;incstack = 0
 11239  003192  8C94               	bsf	3988,6,c	;volatile
 11240                           
 11241                           ;newmain.c: 635: TRISCbits.TRISC7 = 1;
 11242  003194  8E94               	bsf	3988,7,c	;volatile
 11243                           
 11244                           ;newmain.c: 637: BAUDCONbits.BRG16 = 0;
 11245  003196  96B8               	bcf	4024,3,c	;volatile
 11246                           
 11247                           ;newmain.c: 638: TXSTAbits.BRGH = 1;
 11248  003198  84AC               	bsf	4012,2,c	;volatile
 11249                           
 11250                           ;newmain.c: 639: SPBRG = 25;
 11251  00319A  0E19               	movlw	25
 11252  00319C  6EAF               	movwf	4015,c	;volatile
 11253                           
 11254                           ;newmain.c: 642: TXSTAbits.SYNC = 0;
 11255  00319E  98AC               	bcf	4012,4,c	;volatile
 11256                           
 11257                           ;newmain.c: 643: RCSTAbits.SPEN = 1;
 11258  0031A0  8EAB               	bsf	4011,7,c	;volatile
 11259                           
 11260                           ;newmain.c: 646: TXSTAbits.TXEN = 1;
 11261  0031A2  8AAC               	bsf	4012,5,c	;volatile
 11262  0031A4  0012               	return	
 11263  0031A6                     __end_of_Myusartinit:
 11264                           	opt stack 0
 11265                           tblptru	equ	0xFF8
 11266                           tblptrh	equ	0xFF7
 11267                           tblptrl	equ	0xFF6
 11268                           tablat	equ	0xFF5
 11269                           prodh	equ	0xFF4
 11270                           prodl	equ	0xFF3
 11271                           intcon	equ	0xFF2
 11272                           intcon2	equ	0xFF1
 11273                           postinc0	equ	0xFEE
 11274                           wreg	equ	0xFE8
 11275                           indf2	equ	0xFDF
 11276                           postinc2	equ	0xFDE
 11277                           postdec2	equ	0xFDD
 11278                           fsr2h	equ	0xFDA
 11279                           fsr2l	equ	0xFD9
 11280                           status	equ	0xFD8
 11281                           
 11282 ;; *************** function _MyOpenI2C *****************
 11283 ;; Defined at:
 11284 ;;		line 1343 in file "newmain.c"
 11285 ;; Parameters:    Size  Location     Type
 11286 ;;  sync_mode       1    wreg     unsigned char 
 11287 ;;  slew            1   44[COMRAM] unsigned char 
 11288 ;; Auto vars:     Size  Location     Type
 11289 ;;  sync_mode       1   45[COMRAM] unsigned char 
 11290 ;; Return value:  Size  Location     Type
 11291 ;;                  1    wreg      void 
 11292 ;; Registers used:
 11293 ;;		wreg, status,2, status,0
 11294 ;; Tracked objects:
 11295 ;;		On entry : 0/0
 11296 ;;		On exit  : 0/0
 11297 ;;		Unchanged: 0/0
 11298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11299 ;;      Params:         1       0       0       0       0       0       0
 11300 ;;      Locals:         1       0       0       0       0       0       0
 11301 ;;      Temps:          0       0       0       0       0       0       0
 11302 ;;      Totals:         2       0       0       0       0       0       0
 11303 ;;Total ram usage:        2 bytes
 11304 ;; Hardware stack levels used:    1
 11305 ;; Hardware stack levels required when called:    3
 11306 ;; This function calls:
 11307 ;;		Nothing
 11308 ;; This function is called by:
 11309 ;;		_main
 11310 ;; This function uses a non-reentrant model
 11311 ;;
 11312                           
 11313                           	psect	text21
 11314  003174                     __ptext21:
 11315                           	opt stack 0
 11316  003174                     _MyOpenI2C:
 11317                           	opt stack 27
 11318                           
 11319                           ;incstack = 0
 11320                           ;MyOpenI2C@sync_mode stored from wreg
 11321  003174  6E2E               	movwf	MyOpenI2C@sync_mode,c
 11322                           
 11323                           ;newmain.c: 1344: SSPSTAT &= 0x3F;
 11324  003176  0E3F               	movlw	63
 11325  003178  16C7               	andwf	4039,f,c	;volatile
 11326                           
 11327                           ;newmain.c: 1345: SSPCON1 = 0x00;
 11328  00317A  0E00               	movlw	0
 11329  00317C  6EC6               	movwf	4038,c	;volatile
 11330                           
 11331                           ;newmain.c: 1346: SSPCON2 = 0x00;
 11332  00317E  0E00               	movlw	0
 11333  003180  6EC5               	movwf	4037,c	;volatile
 11334                           
 11335                           ;newmain.c: 1347: SSPCON1 |= sync_mode;
 11336  003182  502E               	movf	MyOpenI2C@sync_mode,w,c
 11337  003184  12C6               	iorwf	4038,f,c	;volatile
 11338                           
 11339                           ;newmain.c: 1348: SSPSTAT |= slew;
 11340  003186  502D               	movf	MyOpenI2C@slew,w,c
 11341  003188  12C7               	iorwf	4039,f,c	;volatile
 11342                           
 11343                           ;newmain.c: 1350: TRISCbits.TRISC3 = 1;
 11344  00318A  8694               	bsf	3988,3,c	;volatile
 11345                           
 11346                           ;newmain.c: 1351: TRISCbits.TRISC4 = 1;
 11347  00318C  8894               	bsf	3988,4,c	;volatile
 11348                           
 11349                           ;newmain.c: 1353: SSPCON1 |= 0b00100000;
 11350  00318E  8AC6               	bsf	4038,5,c	;volatile
 11351  003190  0012               	return		;funcret
 11352  003192                     __end_of_MyOpenI2C:
 11353                           	opt stack 0
 11354                           tblptru	equ	0xFF8
 11355                           tblptrh	equ	0xFF7
 11356                           tblptrl	equ	0xFF6
 11357                           tablat	equ	0xFF5
 11358                           prodh	equ	0xFF4
 11359                           prodl	equ	0xFF3
 11360                           intcon	equ	0xFF2
 11361                           intcon2	equ	0xFF1
 11362                           postinc0	equ	0xFEE
 11363                           wreg	equ	0xFE8
 11364                           indf2	equ	0xFDF
 11365                           postinc2	equ	0xFDE
 11366                           postdec2	equ	0xFDD
 11367                           fsr2h	equ	0xFDA
 11368                           fsr2l	equ	0xFD9
 11369                           status	equ	0xFD8
 11370                           
 11371 ;; *************** function _MyCloseI2C *****************
 11372 ;; Defined at:
 11373 ;;		line 1293 in file "newmain.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;		None
 11376 ;; Auto vars:     Size  Location     Type
 11377 ;;		None
 11378 ;; Return value:  Size  Location     Type
 11379 ;;                  1    wreg      void 
 11380 ;; Registers used:
 11381 ;;		status,2, status,0
 11382 ;; Tracked objects:
 11383 ;;		On entry : 0/0
 11384 ;;		On exit  : 0/0
 11385 ;;		Unchanged: 0/0
 11386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11387 ;;      Params:         0       0       0       0       0       0       0
 11388 ;;      Locals:         0       0       0       0       0       0       0
 11389 ;;      Temps:          0       0       0       0       0       0       0
 11390 ;;      Totals:         0       0       0       0       0       0       0
 11391 ;;Total ram usage:        0 bytes
 11392 ;; Hardware stack levels used:    1
 11393 ;; Hardware stack levels required when called:    3
 11394 ;; This function calls:
 11395 ;;		Nothing
 11396 ;; This function is called by:
 11397 ;;		_main
 11398 ;; This function uses a non-reentrant model
 11399 ;;
 11400                           
 11401                           	psect	text22
 11402  0031CE                     __ptext22:
 11403                           	opt stack 0
 11404  0031CE                     _MyCloseI2C:
 11405                           	opt stack 27
 11406                           
 11407                           ;newmain.c: 1294: SSPCON1 &= 0xDF;
 11408                           
 11409                           ;incstack = 0
 11410  0031CE  9AC6               	bcf	4038,5,c	;volatile
 11411  0031D0  0012               	return		;funcret
 11412  0031D2                     __end_of_MyCloseI2C:
 11413                           	opt stack 0
 11414                           tblptru	equ	0xFF8
 11415                           tblptrh	equ	0xFF7
 11416                           tblptrl	equ	0xFF6
 11417                           tablat	equ	0xFF5
 11418                           prodh	equ	0xFF4
 11419                           prodl	equ	0xFF3
 11420                           intcon	equ	0xFF2
 11421                           intcon2	equ	0xFF1
 11422                           postinc0	equ	0xFEE
 11423                           wreg	equ	0xFE8
 11424                           indf2	equ	0xFDF
 11425                           postinc2	equ	0xFDE
 11426                           postdec2	equ	0xFDD
 11427                           fsr2h	equ	0xFDA
 11428                           fsr2l	equ	0xFD9
 11429                           status	equ	0xFD8
 11430                           
 11431 ;; *************** function _tc_int *****************
 11432 ;; Defined at:
 11433 ;;		line 603 in file "newmain.c"
 11434 ;; Parameters:    Size  Location     Type
 11435 ;;		None
 11436 ;; Auto vars:     Size  Location     Type
 11437 ;;  h               1   43[COMRAM] unsigned char 
 11438 ;;  i               1   42[COMRAM] unsigned char 
 11439 ;;  j               1   41[COMRAM] unsigned char 
 11440 ;; Return value:  Size  Location     Type
 11441 ;;                  1    wreg      void 
 11442 ;; Registers used:
 11443 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11444 ;; Tracked objects:
 11445 ;;		On entry : 0/0
 11446 ;;		On exit  : 0/0
 11447 ;;		Unchanged: 0/0
 11448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11449 ;;      Params:         0       0       0       0       0       0       0
 11450 ;;      Locals:         3       0       0       0       0       0       0
 11451 ;;      Temps:         22       0       0       0       0       0       0
 11452 ;;      Totals:        25       0       0       0       0       0       0
 11453 ;;Total ram usage:       25 bytes
 11454 ;; Hardware stack levels used:    1
 11455 ;; Hardware stack levels required when called:    2
 11456 ;; This function calls:
 11457 ;;		_is_key_pressed
 11458 ;;		_was_key_pressed
 11459 ;; This function is called by:
 11460 ;;		Interrupt level 2
 11461 ;; This function uses a non-reentrant model
 11462 ;;
 11463                           
 11464                           	psect	intcode
 11465  000008                     __pintcode:
 11466                           	opt stack 0
 11467  000008                     _tc_int:
 11468                           	opt stack 23
 11469                           
 11470                           ;incstack = 0
 11471  000008  8253               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 11472  00000A  ED93  F014         	call	int_func,f	;refresh shadow registers
 11473                           tblptru	equ	0xFF8
 11474                           tblptrh	equ	0xFF7
 11475                           tblptrl	equ	0xFF6
 11476                           tablat	equ	0xFF5
 11477                           prodh	equ	0xFF4
 11478                           prodl	equ	0xFF3
 11479                           intcon	equ	0xFF2
 11480                           intcon2	equ	0xFF1
 11481                           postinc0	equ	0xFEE
 11482                           wreg	equ	0xFE8
 11483                           indf2	equ	0xFDF
 11484                           postinc2	equ	0xFDE
 11485                           postdec2	equ	0xFDD
 11486                           fsr2h	equ	0xFDA
 11487                           fsr2l	equ	0xFD9
 11488                           status	equ	0xFD8
 11489                           
 11490                           	psect	intcode_body
 11491  002926                     __pintcode_body:
 11492                           	opt stack 23
 11493  002926                     int_func:
 11494                           	opt stack 23
 11495  002926  0006               	pop		; remove dummy address from shadow register refresh
 11496  002928  CFFA F018          	movff	pclath,??_tc_int+4
 11497  00292C  CFFB F019          	movff	pclatu,??_tc_int+5
 11498  002930  CFE9 F01A          	movff	fsr0l,??_tc_int+6
 11499  002934  CFEA F01B          	movff	fsr0h,??_tc_int+7
 11500  002938  CFE1 F01C          	movff	fsr1l,??_tc_int+8
 11501  00293C  CFE2 F01D          	movff	fsr1h,??_tc_int+9
 11502  002940  CFD9 F01E          	movff	fsr2l,??_tc_int+10
 11503  002944  CFDA F01F          	movff	fsr2h,??_tc_int+11
 11504  002948  CFF3 F020          	movff	prodl,??_tc_int+12
 11505  00294C  CFF4 F021          	movff	prodh,??_tc_int+13
 11506  002950  CFF6 F022          	movff	tblptrl,??_tc_int+14
 11507  002954  CFF7 F023          	movff	tblptrh,??_tc_int+15
 11508  002958  CFF8 F024          	movff	tblptru,??_tc_int+16
 11509  00295C  CFF5 F025          	movff	tablat,??_tc_int+17
 11510  002960  C053  F026         	movff	btemp,??_tc_int+18
 11511  002964  C054  F027         	movff	btemp+1,??_tc_int+19
 11512  002968  C055  F028         	movff	btemp+2,??_tc_int+20
 11513  00296C  C056  F029         	movff	btemp+3,??_tc_int+21
 11514                           
 11515                           ;newmain.c: 604: uint8_t h = 0, i = 0, j = 0;
 11516  002970  0E00               	movlw	0
 11517  002972  6E2C               	movwf	tc_int@h,c
 11518  002974  0E00               	movlw	0
 11519  002976  6E2B               	movwf	tc_int@i,c
 11520  002978  0E00               	movlw	0
 11521  00297A  6E2A               	movwf	tc_int@j,c
 11522                           
 11523                           ;newmain.c: 605: if (INTCONbits.INT0IE && INTCONbits.INT0IF) {
 11524  00297C  B8F2               	btfsc	intcon,4,c	;volatile
 11525  00297E  A2F2               	btfss	intcon,1,c	;volatile
 11526  002980  D095               	goto	i2u678_40
 11527                           
 11528                           ;newmain.c: 606: in_interrupt = 1;
 11529  002982  0E01               	movlw	1
 11530  002984  0100               	movlb	0	; () banked
 11531  002986  6FC0               	movwf	_in_interrupt& (0+255),b	;volatile
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;newmain.c: 607: INTCONbits.INT0IF = 0;
 11535  002988  92F2               	bcf	intcon,1,c	;volatile
 11536                           
 11537                           ;newmain.c: 608: for (h = 0; h < 64; h++) {
 11538  00298A  0E00               	movlw	0
 11539  00298C  6E2C               	movwf	tc_int@h,c
 11540  00298E                     i2l4989:
 11541                           
 11542                           ; BSR set to: 0
 11543  00298E  0E3F               	movlw	63
 11544  002990  642C               	cpfsgt	tc_int@h,c
 11545  002992  D001               	goto	i2l244
 11546  002994  D08B               	goto	i2u678_40
 11547  002996                     i2l244:
 11548                           
 11549                           ;newmain.c: 609: if (is_key_pressed(h)&&(!was_key_pressed(h))) {
 11550                           
 11551                           ; BSR set to: 0
 11552  002996  502C               	movf	tc_int@h,w,c
 11553  002998  ECCB  F017         	call	_is_key_pressed
 11554  00299C  0900               	iorlw	0
 11555  00299E  B4D8               	btfsc	status,2,c
 11556  0029A0  D083               	goto	i2l246
 11557  0029A2  502C               	movf	tc_int@h,w,c
 11558  0029A4  EC7A  F017         	call	_was_key_pressed
 11559  0029A8  0900               	iorlw	0
 11560  0029AA  A4D8               	btfss	status,2,c
 11561  0029AC  D07D               	goto	i2l246
 11562                           
 11563                           ;newmain.c: 610: press_button = h;
 11564  0029AE  C02C  F0C3         	movff	tc_int@h,_press_button	;volatile
 11565                           
 11566                           ;newmain.c: 611: for (i = 0; i < 8; i++) {
 11567  0029B2  0E00               	movlw	0
 11568  0029B4  6E2B               	movwf	tc_int@i,c
 11569  0029B6                     i2l5001:
 11570  0029B6  0E07               	movlw	7
 11571  0029B8  642B               	cpfsgt	tc_int@i,c
 11572  0029BA  D001               	goto	i2l247
 11573  0029BC  D041               	goto	i2u672_40
 11574  0029BE                     i2l247:
 11575                           
 11576                           ;newmain.c: 612: if (h == Buttons[i][7]) {
 11577  0029BE  502B               	movf	tc_int@i,w,c
 11578  0029C0  0D08               	mullw	8
 11579  0029C2  0E07               	movlw	7
 11580  0029C4  26F3               	addwf	prodl,f,c
 11581  0029C6  0E00               	movlw	0
 11582  0029C8  22F4               	addwfc	prodh,f,c
 11583  0029CA  0EF9               	movlw	low _Buttons
 11584  0029CC  24F3               	addwf	prodl,w,c
 11585  0029CE  6EF6               	movwf	tblptrl,c
 11586  0029D0  0E7E               	movlw	high _Buttons
 11587  0029D2  20F4               	addwfc	prodh,w,c
 11588  0029D4  6EF7               	movwf	tblptrh,c
 11589  0029D6                     	if	0	;There are less than 3 active tblptr bytes
 11590  0029D6                     	endif
 11591  0029D6  0008               	tblrd		*
 11592  0029D8  50F5               	movf	tablat,w,c
 11593  0029DA  182C               	xorwf	tc_int@h,w,c
 11594  0029DC  A4D8               	btfss	status,2,c
 11595  0029DE  D015               	goto	i2l249
 11596                           
 11597                           ;newmain.c: 613: rightbutton = (h - 19) >> 2;
 11598  0029E0  0EED               	movlw	237
 11599  0029E2  6E14               	movwf	??_tc_int& (0+255),c
 11600  0029E4  0EFF               	movlw	255
 11601  0029E6  6E15               	movwf	(??_tc_int+1)& (0+255),c
 11602  0029E8  502C               	movf	tc_int@h,w,c
 11603  0029EA  6E16               	movwf	(??_tc_int+2)& (0+255),c
 11604  0029EC  6A17               	clrf	(??_tc_int+3)& (0+255),c
 11605  0029EE  5014               	movf	??_tc_int,w,c
 11606  0029F0  2616               	addwf	??_tc_int+2,f,c
 11607  0029F2  5015               	movf	??_tc_int+1,w,c
 11608  0029F4  2217               	addwfc	??_tc_int+3,f,c
 11609  0029F6  3417               	rlcf	??_tc_int+3,w,c
 11610  0029F8  3217               	rrcf	??_tc_int+3,f,c
 11611  0029FA  3216               	rrcf	??_tc_int+2,f,c
 11612  0029FC  3417               	rlcf	??_tc_int+3,w,c
 11613  0029FE  3217               	rrcf	??_tc_int+3,f,c
 11614  002A00  3216               	rrcf	??_tc_int+2,f,c
 11615  002A02  5016               	movf	??_tc_int+2,w,c
 11616  002A04  0100               	movlb	0	; () banked
 11617  002A06  6FC2               	movwf	_rightbutton& (0+255),b	;volatile
 11618                           
 11619                           ;newmain.c: 614: } else {
 11620  002A08  D019               	goto	i2l250
 11621  002A0A                     i2l249:
 11622                           
 11623                           ;newmain.c: 615: press[Buttons[i][7]] = 0;
 11624                           
 11625                           ; BSR set to: 0
 11626  002A0A  502B               	movf	tc_int@i,w,c
 11627  002A0C  0D08               	mullw	8
 11628  002A0E  0E07               	movlw	7
 11629  002A10  26F3               	addwf	prodl,f,c
 11630  002A12  0E00               	movlw	0
 11631  002A14  22F4               	addwfc	prodh,f,c
 11632  002A16  0EF9               	movlw	low _Buttons
 11633  002A18  24F3               	addwf	prodl,w,c
 11634  002A1A  6EF6               	movwf	tblptrl,c
 11635  002A1C  0E7E               	movlw	high _Buttons
 11636  002A1E  20F4               	addwfc	prodh,w,c
 11637  002A20  6EF7               	movwf	tblptrh,c
 11638  002A22                     	if	0	;There are less than 3 active tblptr bytes
 11639  002A22                     	endif
 11640  002A22  0008               	tblrd		*
 11641  002A24  50F5               	movf	tablat,w,c
 11642  002A26  0D02               	mullw	2
 11643  002A28  0E00               	movlw	low _press
 11644  002A2A  24F3               	addwf	prodl,w,c
 11645  002A2C  6ED9               	movwf	fsr2l,c
 11646  002A2E  0E01               	movlw	high _press
 11647  002A30  20F4               	addwfc	prodh,w,c
 11648  002A32  6EDA               	movwf	fsr2h,c
 11649  002A34  0E00               	movlw	0
 11650  002A36  6EDE               	movwf	postinc2,c
 11651  002A38  0E00               	movlw	0
 11652  002A3A  6EDD               	movwf	postdec2,c
 11653  002A3C                     i2l250:
 11654  002A3C  2A2B               	incf	tc_int@i,f,c
 11655  002A3E  D7BB               	goto	i2l5001
 11656  002A40                     i2u672_40:
 11657                           
 11658                           ;newmain.c: 616: }
 11659                           ;newmain.c: 617: }
 11660                           ;newmain.c: 619: for (i = 0; i < 8; i++) {
 11661  002A40  0E00               	movlw	0
 11662  002A42  6E2B               	movwf	tc_int@i,c
 11663  002A44                     i2l5017:
 11664  002A44  0E07               	movlw	7
 11665  002A46  642B               	cpfsgt	tc_int@i,c
 11666  002A48  D001               	goto	i2l251
 11667  002A4A  D030               	goto	i2u678_40
 11668  002A4C                     i2l251:
 11669                           
 11670                           ;newmain.c: 620: for (j = 0; j < 8; j++) {
 11671  002A4C  0E00               	movlw	0
 11672  002A4E  6E2A               	movwf	tc_int@j,c
 11673  002A50                     i2l5023:
 11674  002A50  0E07               	movlw	7
 11675  002A52  642A               	cpfsgt	tc_int@j,c
 11676  002A54  D001               	goto	i2l253
 11677  002A56  D026               	goto	i2u676_40
 11678  002A58                     i2l253:
 11679                           
 11680                           ;newmain.c: 621: if (h == Buttons[i][j]) {
 11681  002A58  502B               	movf	tc_int@i,w,c
 11682  002A5A  0D08               	mullw	8
 11683  002A5C  0EF9               	movlw	low _Buttons
 11684  002A5E  6E14               	movwf	??_tc_int& (0+255),c
 11685  002A60  0E7E               	movlw	high _Buttons
 11686  002A62  6E15               	movwf	(??_tc_int+1)& (0+255),c
 11687  002A64  50F3               	movf	prodl,w,c
 11688  002A66  2614               	addwf	??_tc_int,f,c
 11689  002A68  50F4               	movf	prodh,w,c
 11690  002A6A  2215               	addwfc	??_tc_int+1,f,c
 11691  002A6C  502A               	movf	tc_int@j,w,c
 11692  002A6E  0D01               	mullw	1
 11693  002A70  50F3               	movf	prodl,w,c
 11694  002A72  2614               	addwf	??_tc_int,f,c
 11695  002A74  50F4               	movf	prodh,w,c
 11696  002A76  2215               	addwfc	??_tc_int+1,f,c
 11697  002A78  C014  FFF6         	movff	??_tc_int,tblptrl
 11698  002A7C  C015  FFF7         	movff	??_tc_int+1,tblptrh
 11699  002A80                     	if	0	;tblptru may be non-zero
 11700  002A80                     	endif
 11701  002A80                     	if	0	;tblptru may be non-zero
 11702  002A80                     	endif
 11703  002A80  0008               	tblrd		*
 11704  002A82  50F5               	movf	tablat,w,c
 11705  002A84  182C               	xorwf	tc_int@h,w,c
 11706  002A86  A4D8               	btfss	status,2,c
 11707  002A88  D00B               	goto	i2l255
 11708                           
 11709                           ;newmain.c: 622: column = Buttons[0][j];
 11710  002A8A  502A               	movf	tc_int@j,w,c
 11711  002A8C  0D01               	mullw	1
 11712  002A8E  0EF9               	movlw	low _Buttons
 11713  002A90  24F3               	addwf	prodl,w,c
 11714  002A92  6EF6               	movwf	tblptrl,c
 11715  002A94  0E7E               	movlw	high _Buttons
 11716  002A96  20F4               	addwfc	prodh,w,c
 11717  002A98  6EF7               	movwf	tblptrh,c
 11718  002A9A                     	if	0	;There are less than 3 active tblptr bytes
 11719  002A9A                     	endif
 11720  002A9A  0008               	tblrd		*
 11721  002A9C  CFF5 F0C1          	movff	tablat,_column	;volatile
 11722  002AA0                     i2l255:
 11723  002AA0  2A2A               	incf	tc_int@j,f,c
 11724  002AA2  D7D6               	goto	i2l5023
 11725  002AA4                     i2u676_40:
 11726  002AA4  2A2B               	incf	tc_int@i,f,c
 11727  002AA6  D7CE               	goto	i2l5017
 11728  002AA8                     i2l246:
 11729  002AA8  2A2C               	incf	tc_int@h,f,c
 11730  002AAA  D771               	goto	i2l4989
 11731  002AAC                     i2u678_40:
 11732  002AAC  C029  F056         	movff	??_tc_int+21,btemp+3
 11733  002AB0  C028  F055         	movff	??_tc_int+20,btemp+2
 11734  002AB4  C027  F054         	movff	??_tc_int+19,btemp+1
 11735  002AB8  C026  F053         	movff	??_tc_int+18,btemp
 11736  002ABC  C025  FFF5         	movff	??_tc_int+17,tablat
 11737  002AC0  C024  FFF8         	movff	??_tc_int+16,tblptru
 11738  002AC4  C023  FFF7         	movff	??_tc_int+15,tblptrh
 11739  002AC8  C022  FFF6         	movff	??_tc_int+14,tblptrl
 11740  002ACC  C021  FFF4         	movff	??_tc_int+13,prodh
 11741  002AD0  C020  FFF3         	movff	??_tc_int+12,prodl
 11742  002AD4  C01F  FFDA         	movff	??_tc_int+11,fsr2h
 11743  002AD8  C01E  FFD9         	movff	??_tc_int+10,fsr2l
 11744  002ADC  C01D  FFE2         	movff	??_tc_int+9,fsr1h
 11745  002AE0  C01C  FFE1         	movff	??_tc_int+8,fsr1l
 11746  002AE4  C01B  FFEA         	movff	??_tc_int+7,fsr0h
 11747  002AE8  C01A  FFE9         	movff	??_tc_int+6,fsr0l
 11748  002AEC  C019  FFFB         	movff	??_tc_int+5,pclatu
 11749  002AF0  C018  FFFA         	movff	??_tc_int+4,pclath
 11750  002AF4  9253               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 11751  002AF6  0011               	retfie		f
 11752  002AF8                     __end_of_tc_int:
 11753                           	opt stack 0
 11754                           pclatu	equ	0xFFB
 11755                           pclath	equ	0xFFA
 11756                           tblptru	equ	0xFF8
 11757                           tblptrh	equ	0xFF7
 11758                           tblptrl	equ	0xFF6
 11759                           tablat	equ	0xFF5
 11760                           prodh	equ	0xFF4
 11761                           prodl	equ	0xFF3
 11762                           intcon	equ	0xFF2
 11763                           intcon2	equ	0xFF1
 11764                           postinc0	equ	0xFEE
 11765                           fsr0h	equ	0xFEA
 11766                           fsr0l	equ	0xFE9
 11767                           wreg	equ	0xFE8
 11768                           fsr1h	equ	0xFE2
 11769                           fsr1l	equ	0xFE1
 11770                           indf2	equ	0xFDF
 11771                           postinc2	equ	0xFDE
 11772                           postdec2	equ	0xFDD
 11773                           fsr2h	equ	0xFDA
 11774                           fsr2l	equ	0xFD9
 11775                           status	equ	0xFD8
 11776                           
 11777 ;; *************** function _was_key_pressed *****************
 11778 ;; Defined at:
 11779 ;;		line 1246 in file "newmain.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  k               1    wreg     unsigned char 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  k               1   18[COMRAM] unsigned char 
 11784 ;;  led             2   16[COMRAM] int 
 11785 ;;  matrix          2   14[COMRAM] int 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      unsigned char 
 11788 ;; Registers used:
 11789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/0
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11795 ;;      Params:         0       0       0       0       0       0       0
 11796 ;;      Locals:         5       0       0       0       0       0       0
 11797 ;;      Temps:          8       0       0       0       0       0       0
 11798 ;;      Totals:        13       0       0       0       0       0       0
 11799 ;;Total ram usage:       13 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    1
 11802 ;; This function calls:
 11803 ;;		i2___wmul
 11804 ;; This function is called by:
 11805 ;;		_tc_int
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text24
 11810  002EF4                     __ptext24:
 11811                           	opt stack 0
 11812  002EF4                     _was_key_pressed:
 11813                           	opt stack 23
 11814                           
 11815                           ;incstack = 0
 11816                           ;was_key_pressed@k stored from wreg
 11817  002EF4  6E13               	movwf	was_key_pressed@k,c
 11818                           
 11819                           ;newmain.c: 1247: int matrix = k >> 4;
 11820  002EF6  C013  F007         	movff	was_key_pressed@k,??_was_key_pressed
 11821  002EFA  3A07               	swapf	??_was_key_pressed,f,c
 11822  002EFC  0E0F               	movlw	15
 11823  002EFE  1607               	andwf	??_was_key_pressed,f,c
 11824  002F00  5007               	movf	??_was_key_pressed,w,c
 11825  002F02  6E0F               	movwf	was_key_pressed@matrix,c
 11826  002F04  6A10               	clrf	was_key_pressed@matrix+1,c
 11827                           
 11828                           ;newmain.c: 1248: int led = k & 0b1111;
 11829  002F06  C013  F007         	movff	was_key_pressed@k,??_was_key_pressed
 11830  002F0A  0E0F               	movlw	15
 11831  002F0C  1607               	andwf	??_was_key_pressed,f,c
 11832  002F0E  5007               	movf	??_was_key_pressed,w,c
 11833  002F10  6E11               	movwf	was_key_pressed@led,c
 11834  002F12  6A12               	clrf	was_key_pressed@led+1,c
 11835                           
 11836                           ;newmain.c: 1249: return (matrices[matrix].last_keys[buttonLUT[led] >> 4]&(1 << (buttonL
      +                          UT[led]&0x0f)));
 11837  002F14  C00F  F001         	movff	was_key_pressed@matrix,i2___wmul@multiplier
 11838  002F18  C010  F002         	movff	was_key_pressed@matrix+1,i2___wmul@multiplier+1
 11839  002F1C  0E00               	movlw	0
 11840  002F1E  6E04               	movwf	i2___wmul@multiplicand+1,c
 11841  002F20  0E1D               	movlw	29
 11842  002F22  6E03               	movwf	i2___wmul@multiplicand,c
 11843  002F24  EC96  F018         	call	i2___wmul	;wreg free
 11844  002F28  0EDF               	movlw	low _buttonLUT
 11845  002F2A  2411               	addwf	was_key_pressed@led,w,c
 11846  002F2C  6EF6               	movwf	tblptrl,c
 11847  002F2E  0E7F               	movlw	high _buttonLUT
 11848  002F30  2012               	addwfc	was_key_pressed@led+1,w,c
 11849  002F32  6EF7               	movwf	tblptrh,c
 11850  002F34                     	if	0	;There are less than 3 active tblptr bytes
 11851  002F34                     	endif
 11852  002F34  0008               	tblrd		*
 11853  002F36  CFF5 F007          	movff	tablat,??_was_key_pressed
 11854  002F3A  3807               	swapf	??_was_key_pressed,w,c
 11855  002F3C  0B0F               	andlw	15
 11856  002F3E  6E08               	movwf	(??_was_key_pressed+1)& (0+255),c
 11857  002F40  6A09               	clrf	(??_was_key_pressed+2)& (0+255),c
 11858  002F42  0E07               	movlw	7
 11859  002F44  2608               	addwf	??_was_key_pressed+1,f,c
 11860  002F46  0E00               	movlw	0
 11861  002F48  2209               	addwfc	??_was_key_pressed+2,f,c
 11862  002F4A  0E80               	movlw	low _matrices
 11863  002F4C  6E0A               	movwf	(??_was_key_pressed+3)& (0+255),c
 11864  002F4E  0E01               	movlw	high _matrices
 11865  002F50  6E0B               	movwf	(??_was_key_pressed+4)& (0+255),c
 11866  002F52  5008               	movf	??_was_key_pressed+1,w,c
 11867  002F54  260A               	addwf	??_was_key_pressed+3,f,c
 11868  002F56  5009               	movf	??_was_key_pressed+2,w,c
 11869  002F58  220B               	addwfc	??_was_key_pressed+4,f,c
 11870  002F5A  5001               	movf	?i2___wmul,w,c
 11871  002F5C  240A               	addwf	??_was_key_pressed+3,w,c
 11872  002F5E  6ED9               	movwf	fsr2l,c
 11873  002F60  5002               	movf	?i2___wmul+1,w,c
 11874  002F62  200B               	addwfc	??_was_key_pressed+4,w,c
 11875  002F64  6EDA               	movwf	fsr2h,c
 11876  002F66  50DF               	movf	indf2,w,c
 11877  002F68  6E0C               	movwf	(??_was_key_pressed+5)& (0+255),c
 11878  002F6A  0EDF               	movlw	low _buttonLUT
 11879  002F6C  2411               	addwf	was_key_pressed@led,w,c
 11880  002F6E  6EF6               	movwf	tblptrl,c
 11881  002F70  0E7F               	movlw	high _buttonLUT
 11882  002F72  2012               	addwfc	was_key_pressed@led+1,w,c
 11883  002F74  6EF7               	movwf	tblptrh,c
 11884  002F76                     	if	0	;There are less than 3 active tblptr bytes
 11885  002F76                     	endif
 11886  002F76  0008               	tblrd		*
 11887  002F78  CFF5 F00D          	movff	tablat,??_was_key_pressed+6
 11888  002F7C  0E0F               	movlw	15
 11889  002F7E  160D               	andwf	??_was_key_pressed+6,f,c
 11890  002F80  0E01               	movlw	1
 11891  002F82  6E0E               	movwf	(??_was_key_pressed+7)& (0+255),c
 11892  002F84  2A0D               	incf	??_was_key_pressed+6,f,c
 11893  002F86  D002               	goto	i2u602_44
 11894  002F88                     i2u602_45:
 11895  002F88  90D8               	bcf	status,0,c
 11896  002F8A  360E               	rlcf	??_was_key_pressed+7,f,c
 11897  002F8C                     i2u602_44:
 11898  002F8C  2E0D               	decfsz	??_was_key_pressed+6,f,c
 11899  002F8E  D7FC               	goto	i2u602_45
 11900  002F90  500E               	movf	??_was_key_pressed+7,w,c
 11901  002F92  140C               	andwf	??_was_key_pressed+5,w,c
 11902  002F94  0012               	return	
 11903  002F96                     __end_of_was_key_pressed:
 11904                           	opt stack 0
 11905                           pclatu	equ	0xFFB
 11906                           pclath	equ	0xFFA
 11907                           tblptru	equ	0xFF8
 11908                           tblptrh	equ	0xFF7
 11909                           tblptrl	equ	0xFF6
 11910                           tablat	equ	0xFF5
 11911                           prodh	equ	0xFF4
 11912                           prodl	equ	0xFF3
 11913                           intcon	equ	0xFF2
 11914                           intcon2	equ	0xFF1
 11915                           postinc0	equ	0xFEE
 11916                           fsr0h	equ	0xFEA
 11917                           fsr0l	equ	0xFE9
 11918                           wreg	equ	0xFE8
 11919                           fsr1h	equ	0xFE2
 11920                           fsr1l	equ	0xFE1
 11921                           indf2	equ	0xFDF
 11922                           postinc2	equ	0xFDE
 11923                           postdec2	equ	0xFDD
 11924                           fsr2h	equ	0xFDA
 11925                           fsr2l	equ	0xFD9
 11926                           status	equ	0xFD8
 11927                           
 11928 ;; *************** function _is_key_pressed *****************
 11929 ;; Defined at:
 11930 ;;		line 1240 in file "newmain.c"
 11931 ;; Parameters:    Size  Location     Type
 11932 ;;  k               1    wreg     unsigned char 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;  k               1   18[COMRAM] unsigned char 
 11935 ;;  led             2   16[COMRAM] int 
 11936 ;;  matrix          2   14[COMRAM] int 
 11937 ;; Return value:  Size  Location     Type
 11938 ;;                  1    wreg      unsigned char 
 11939 ;; Registers used:
 11940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11941 ;; Tracked objects:
 11942 ;;		On entry : 0/0
 11943 ;;		On exit  : 0/0
 11944 ;;		Unchanged: 0/0
 11945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11946 ;;      Params:         0       0       0       0       0       0       0
 11947 ;;      Locals:         5       0       0       0       0       0       0
 11948 ;;      Temps:          8       0       0       0       0       0       0
 11949 ;;      Totals:        13       0       0       0       0       0       0
 11950 ;;Total ram usage:       13 bytes
 11951 ;; Hardware stack levels used:    1
 11952 ;; Hardware stack levels required when called:    1
 11953 ;; This function calls:
 11954 ;;		i2___wmul
 11955 ;; This function is called by:
 11956 ;;		_tc_int
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           	psect	text25
 11961  002F96                     __ptext25:
 11962                           	opt stack 0
 11963  002F96                     _is_key_pressed:
 11964                           	opt stack 23
 11965                           
 11966                           ;incstack = 0
 11967                           ;is_key_pressed@k stored from wreg
 11968  002F96  6E13               	movwf	is_key_pressed@k,c
 11969                           
 11970                           ;newmain.c: 1241: int matrix = k >> 4;
 11971  002F98  C013  F007         	movff	is_key_pressed@k,??_is_key_pressed
 11972  002F9C  3A07               	swapf	??_is_key_pressed,f,c
 11973  002F9E  0E0F               	movlw	15
 11974  002FA0  1607               	andwf	??_is_key_pressed,f,c
 11975  002FA2  5007               	movf	??_is_key_pressed,w,c
 11976  002FA4  6E0F               	movwf	is_key_pressed@matrix,c
 11977  002FA6  6A10               	clrf	is_key_pressed@matrix+1,c
 11978                           
 11979                           ;newmain.c: 1242: int led = k & 0b1111;
 11980  002FA8  C013  F007         	movff	is_key_pressed@k,??_is_key_pressed
 11981  002FAC  0E0F               	movlw	15
 11982  002FAE  1607               	andwf	??_is_key_pressed,f,c
 11983  002FB0  5007               	movf	??_is_key_pressed,w,c
 11984  002FB2  6E11               	movwf	is_key_pressed@led,c
 11985  002FB4  6A12               	clrf	is_key_pressed@led+1,c
 11986                           
 11987                           ;newmain.c: 1243: return (matrices[matrix].keys[buttonLUT[led] >> 4]&(1 << (buttonLUT[le
      +                          d]&0x0f)));
 11988  002FB6  C00F  F001         	movff	is_key_pressed@matrix,i2___wmul@multiplier
 11989  002FBA  C010  F002         	movff	is_key_pressed@matrix+1,i2___wmul@multiplier+1
 11990  002FBE  0E00               	movlw	0
 11991  002FC0  6E04               	movwf	i2___wmul@multiplicand+1,c
 11992  002FC2  0E1D               	movlw	29
 11993  002FC4  6E03               	movwf	i2___wmul@multiplicand,c
 11994  002FC6  EC96  F018         	call	i2___wmul	;wreg free
 11995  002FCA  0EDF               	movlw	low _buttonLUT
 11996  002FCC  2411               	addwf	is_key_pressed@led,w,c
 11997  002FCE  6EF6               	movwf	tblptrl,c
 11998  002FD0  0E7F               	movlw	high _buttonLUT
 11999  002FD2  2012               	addwfc	is_key_pressed@led+1,w,c
 12000  002FD4  6EF7               	movwf	tblptrh,c
 12001  002FD6                     	if	0	;There are less than 3 active tblptr bytes
 12002  002FD6                     	endif
 12003  002FD6  0008               	tblrd		*
 12004  002FD8  CFF5 F007          	movff	tablat,??_is_key_pressed
 12005  002FDC  3807               	swapf	??_is_key_pressed,w,c
 12006  002FDE  0B0F               	andlw	15
 12007  002FE0  6E08               	movwf	(??_is_key_pressed+1)& (0+255),c
 12008  002FE2  6A09               	clrf	(??_is_key_pressed+2)& (0+255),c
 12009  002FE4  0E01               	movlw	1
 12010  002FE6  2608               	addwf	??_is_key_pressed+1,f,c
 12011  002FE8  0E00               	movlw	0
 12012  002FEA  2209               	addwfc	??_is_key_pressed+2,f,c
 12013  002FEC  0E80               	movlw	low _matrices
 12014  002FEE  6E0A               	movwf	(??_is_key_pressed+3)& (0+255),c
 12015  002FF0  0E01               	movlw	high _matrices
 12016  002FF2  6E0B               	movwf	(??_is_key_pressed+4)& (0+255),c
 12017  002FF4  5008               	movf	??_is_key_pressed+1,w,c
 12018  002FF6  260A               	addwf	??_is_key_pressed+3,f,c
 12019  002FF8  5009               	movf	??_is_key_pressed+2,w,c
 12020  002FFA  220B               	addwfc	??_is_key_pressed+4,f,c
 12021  002FFC  5001               	movf	?i2___wmul,w,c
 12022  002FFE  240A               	addwf	??_is_key_pressed+3,w,c
 12023  003000  6ED9               	movwf	fsr2l,c
 12024  003002  5002               	movf	?i2___wmul+1,w,c
 12025  003004  200B               	addwfc	??_is_key_pressed+4,w,c
 12026  003006  6EDA               	movwf	fsr2h,c
 12027  003008  50DF               	movf	indf2,w,c
 12028  00300A  6E0C               	movwf	(??_is_key_pressed+5)& (0+255),c
 12029  00300C  0EDF               	movlw	low _buttonLUT
 12030  00300E  2411               	addwf	is_key_pressed@led,w,c
 12031  003010  6EF6               	movwf	tblptrl,c
 12032  003012  0E7F               	movlw	high _buttonLUT
 12033  003014  2012               	addwfc	is_key_pressed@led+1,w,c
 12034  003016  6EF7               	movwf	tblptrh,c
 12035  003018                     	if	0	;There are less than 3 active tblptr bytes
 12036  003018                     	endif
 12037  003018  0008               	tblrd		*
 12038  00301A  CFF5 F00D          	movff	tablat,??_is_key_pressed+6
 12039  00301E  0E0F               	movlw	15
 12040  003020  160D               	andwf	??_is_key_pressed+6,f,c
 12041  003022  0E01               	movlw	1
 12042  003024  6E0E               	movwf	(??_is_key_pressed+7)& (0+255),c
 12043  003026  2A0D               	incf	??_is_key_pressed+6,f,c
 12044  003028  D002               	goto	i2u601_44
 12045  00302A                     i2u601_45:
 12046  00302A  90D8               	bcf	status,0,c
 12047  00302C  360E               	rlcf	??_is_key_pressed+7,f,c
 12048  00302E                     i2u601_44:
 12049  00302E  2E0D               	decfsz	??_is_key_pressed+6,f,c
 12050  003030  D7FC               	goto	i2u601_45
 12051  003032  500E               	movf	??_is_key_pressed+7,w,c
 12052  003034  140C               	andwf	??_is_key_pressed+5,w,c
 12053  003036  0012               	return	
 12054  003038                     __end_of_is_key_pressed:
 12055                           	opt stack 0
 12056                           pclatu	equ	0xFFB
 12057                           pclath	equ	0xFFA
 12058                           tblptru	equ	0xFF8
 12059                           tblptrh	equ	0xFF7
 12060                           tblptrl	equ	0xFF6
 12061                           tablat	equ	0xFF5
 12062                           prodh	equ	0xFF4
 12063                           prodl	equ	0xFF3
 12064                           intcon	equ	0xFF2
 12065                           intcon2	equ	0xFF1
 12066                           postinc0	equ	0xFEE
 12067                           fsr0h	equ	0xFEA
 12068                           fsr0l	equ	0xFE9
 12069                           wreg	equ	0xFE8
 12070                           fsr1h	equ	0xFE2
 12071                           fsr1l	equ	0xFE1
 12072                           indf2	equ	0xFDF
 12073                           postinc2	equ	0xFDE
 12074                           postdec2	equ	0xFDD
 12075                           fsr2h	equ	0xFDA
 12076                           fsr2l	equ	0xFD9
 12077                           status	equ	0xFD8
 12078                           
 12079 ;; *************** function i2___wmul *****************
 12080 ;; Defined at:
 12081 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\Umul16.c"
 12082 ;; Parameters:    Size  Location     Type
 12083 ;;  multiplier      2    0[COMRAM] unsigned int 
 12084 ;;  multiplicand    2    2[COMRAM] unsigned int 
 12085 ;; Auto vars:     Size  Location     Type
 12086 ;;  __wmul          2    4[COMRAM] unsigned int 
 12087 ;; Return value:  Size  Location     Type
 12088 ;;                  2    0[COMRAM] unsigned int 
 12089 ;; Registers used:
 12090 ;;		wreg, status,2, status,0, prodl, prodh
 12091 ;; Tracked objects:
 12092 ;;		On entry : 0/0
 12093 ;;		On exit  : 0/0
 12094 ;;		Unchanged: 0/0
 12095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12096 ;;      Params:         4       0       0       0       0       0       0
 12097 ;;      Locals:         2       0       0       0       0       0       0
 12098 ;;      Temps:          0       0       0       0       0       0       0
 12099 ;;      Totals:         6       0       0       0       0       0       0
 12100 ;;Total ram usage:        6 bytes
 12101 ;; Hardware stack levels used:    1
 12102 ;; This function calls:
 12103 ;;		Nothing
 12104 ;; This function is called by:
 12105 ;;		_is_key_pressed
 12106 ;;		_was_key_pressed
 12107 ;; This function uses a non-reentrant model
 12108 ;;
 12109                           
 12110                           	psect	text26
 12111  00312C                     __ptext26:
 12112                           	opt stack 0
 12113  00312C                     i2___wmul:
 12114                           	opt stack 23
 12115                           
 12116                           ;incstack = 0
 12117  00312C  5001               	movf	i2___wmul@multiplier,w,c
 12118  00312E  0203               	mulwf	i2___wmul@multiplicand,c
 12119  003130  CFF3 F005          	movff	prodl,i2___wmul@product
 12120  003134  CFF4 F006          	movff	prodh,i2___wmul@product+1
 12121  003138  5001               	movf	i2___wmul@multiplier,w,c
 12122  00313A  0204               	mulwf	i2___wmul@multiplicand+1,c
 12123  00313C  50F3               	movf	prodl,w,c
 12124  00313E  2606               	addwf	i2___wmul@product+1,f,c
 12125  003140  5002               	movf	i2___wmul@multiplier+1,w,c
 12126  003142  0203               	mulwf	i2___wmul@multiplicand,c
 12127  003144  50F3               	movf	prodl,w,c
 12128  003146  2606               	addwf	i2___wmul@product+1,f,c
 12129  003148  C005  F001         	movff	i2___wmul@product,?i2___wmul
 12130  00314C  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 12131  003150  0012               	return	
 12132  003152                     __end_ofi2___wmul:
 12133                           	opt stack 0
 12134                           pclatu	equ	0xFFB
 12135                           pclath	equ	0xFFA
 12136                           tblptru	equ	0xFF8
 12137                           tblptrh	equ	0xFF7
 12138                           tblptrl	equ	0xFF6
 12139                           tablat	equ	0xFF5
 12140                           prodh	equ	0xFF4
 12141                           prodl	equ	0xFF3
 12142                           intcon	equ	0xFF2
 12143                           intcon2	equ	0xFF1
 12144                           postinc0	equ	0xFEE
 12145                           fsr0h	equ	0xFEA
 12146                           fsr0l	equ	0xFE9
 12147                           wreg	equ	0xFE8
 12148                           fsr1h	equ	0xFE2
 12149                           fsr1l	equ	0xFE1
 12150                           indf2	equ	0xFDF
 12151                           postinc2	equ	0xFDE
 12152                           postdec2	equ	0xFDD
 12153                           fsr2h	equ	0xFDA
 12154                           fsr2l	equ	0xFD9
 12155                           status	equ	0xFD8
 12156                           pclatu	equ	0xFFB
 12157                           pclath	equ	0xFFA
 12158                           tblptru	equ	0xFF8
 12159                           tblptrh	equ	0xFF7
 12160                           tblptrl	equ	0xFF6
 12161                           tablat	equ	0xFF5
 12162                           prodh	equ	0xFF4
 12163                           prodl	equ	0xFF3
 12164                           intcon	equ	0xFF2
 12165                           intcon2	equ	0xFF1
 12166                           postinc0	equ	0xFEE
 12167                           fsr0h	equ	0xFEA
 12168                           fsr0l	equ	0xFE9
 12169                           wreg	equ	0xFE8
 12170                           fsr1h	equ	0xFE2
 12171                           fsr1l	equ	0xFE1
 12172                           indf2	equ	0xFDF
 12173                           postinc2	equ	0xFDE
 12174                           postdec2	equ	0xFDD
 12175                           fsr2h	equ	0xFDA
 12176                           fsr2l	equ	0xFD9
 12177                           status	equ	0xFD8
 12178                           
 12179                           	psect	rparam
 12180  0000                     pclatu	equ	0xFFB
 12181                           pclath	equ	0xFFA
 12182                           tblptru	equ	0xFF8
 12183                           tblptrh	equ	0xFF7
 12184                           tblptrl	equ	0xFF6
 12185                           tablat	equ	0xFF5
 12186                           prodh	equ	0xFF4
 12187                           prodl	equ	0xFF3
 12188                           intcon	equ	0xFF2
 12189                           intcon2	equ	0xFF1
 12190                           postinc0	equ	0xFEE
 12191                           fsr0h	equ	0xFEA
 12192                           fsr0l	equ	0xFE9
 12193                           wreg	equ	0xFE8
 12194                           fsr1h	equ	0xFE2
 12195                           fsr1l	equ	0xFE1
 12196                           indf2	equ	0xFDF
 12197                           postinc2	equ	0xFDE
 12198                           postdec2	equ	0xFDD
 12199                           fsr2h	equ	0xFDA
 12200                           fsr2l	equ	0xFD9
 12201                           status	equ	0xFD8
 12202                           
 12203                           	psect	temp
 12204  000053                     btemp:
 12205                           	opt stack 0
 12206  000053                     	ds	1
 12207  0000                     int$flags	set	btemp
 12208  0000                     wtemp6	set	btemp+1
 12209                           pclatu	equ	0xFFB
 12210                           pclath	equ	0xFFA
 12211                           tblptru	equ	0xFF8
 12212                           tblptrh	equ	0xFF7
 12213                           tblptrl	equ	0xFF6
 12214                           tablat	equ	0xFF5
 12215                           prodh	equ	0xFF4
 12216                           prodl	equ	0xFF3
 12217                           intcon	equ	0xFF2
 12218                           intcon2	equ	0xFF1
 12219                           postinc0	equ	0xFEE
 12220                           fsr0h	equ	0xFEA
 12221                           fsr0l	equ	0xFE9
 12222                           wreg	equ	0xFE8
 12223                           fsr1h	equ	0xFE2
 12224                           fsr1l	equ	0xFE1
 12225                           indf2	equ	0xFDF
 12226                           postinc2	equ	0xFDE
 12227                           postdec2	equ	0xFDD
 12228                           fsr2h	equ	0xFDA
 12229                           fsr2l	equ	0xFD9
 12230                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    1618
    Data        2
    BSS         314
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     80      82
    BANK0           128     28      98
    BANK1           256      0     244
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__memcpy	PTR void  size(2) Largest target is 116
		 -> matrices(BANK1[116]), 


Critical Paths under _main in COMRAM

    _main->_animation6
    _animation7->_clr_led
    _animation6->_clr_led
    _animation5->_clr_led
    _animation4->_clr_led
    _animation3->_clr_led
    _animation2->_clr_led
    _animation1->_clr_led
    _animation0->_clr_led
    _write_display->___wmul
    _write_display->_write
    _write->_MyWriteI2C
    _MyWriteI2C->_MyIdleI2C
    _set_led->___wmul
    _clr_led->___wmul

Critical Paths under _tc_int in COMRAM

    _tc_int->_is_key_pressed
    _tc_int->_was_key_pressed
    _was_key_pressed->i2___wmul
    _is_key_pressed->i2___wmul

Critical Paths under _main in BANK0

    _main->_animation2

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _tc_int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _tc_int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                17    17      0  362999
                                             11 BANK0     17    17      0
                         _MyCloseI2C
                          _MyIdleI2C
                          _MyOpenI2C
                         _MyStartI2C
                          _MyStopI2C
                        _Myusartinit
                             ___wmul
                         _animation0
                         _animation1
                         _animation2
                         _animation3
                         _animation4
                         _animation5
                         _animation6
                         _animation7
                            _clr_led
                   _keypad_interrupt
                          _send_note
                            _set_led
                              _write
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _send_note                                            3     1      2     978
                                             44 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _keypad_interrupt                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _animation7                                           7     7      0   46196
                                             65 COMRAM     7     7      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation6                                          15    14      1   34490
                                             65 COMRAM    15    14      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation5                                           8     6      2   35425
                                             65 COMRAM     8     6      2
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation4                                           6     5      1   35530
                                             65 COMRAM     6     5      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation3                                           9     9      0   46728
                                             65 COMRAM     9     9      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation2                                          17    15      2   47403
                                             65 COMRAM     6     4      2
                                              0 BANK0     11    11      0
                             ___wmul
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation1                                           8     7      1   34245
                                             65 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _animation0                                           8     7      1   34979
                                             65 COMRAM     8     7      1
                            _clr_led
                            _set_led
                      _write_display
 ---------------------------------------------------------------------------------
 (1) _write_display                                       10    10      0   11322
                                             50 COMRAM    10    10      0
                          _MyIdleI2C
                         _MyStartI2C
                          _MyStopI2C
                             ___wmul
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     4      0     133
                                             46 COMRAM     4     4      0
                         _MyWriteI2C
 ---------------------------------------------------------------------------------
 (3) _MyWriteI2C                                           1     1      0      31
                                             45 COMRAM     1     1      0
                          _MyIdleI2C
 ---------------------------------------------------------------------------------
 (4) _MyIdleI2C                                            1     1      0       0
                                             44 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MyStopI2C                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MyStartI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_led                                             13    13      0   11059
                                             50 COMRAM    13    13      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _clr_led                                             15    15      0   11059
                                             50 COMRAM    15    15      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4   10898
                                             44 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Myusartinit                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MyOpenI2C                                            2     1      1     120
                                             44 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _MyCloseI2C                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _tc_int                                              25    25      0    1175
                                             19 COMRAM    25    25      0
                     _is_key_pressed
                    _was_key_pressed
 ---------------------------------------------------------------------------------
 (7) _was_key_pressed                                     13    13      0     373
                                              6 COMRAM    13    13      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (7) _is_key_pressed                                      13    13      0     373
                                              6 COMRAM    13    13      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     261
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MyCloseI2C
   _MyIdleI2C
   _MyOpenI2C
   _MyStartI2C
   _MyStopI2C
   _Myusartinit
   ___wmul
   _animation0
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation1
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation2
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation3
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation4
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation5
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation6
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _animation7
     ___wmul
     _clr_led
       ___wmul
     _set_led
       ___wmul
     _write_display
       _MyIdleI2C
       _MyStartI2C
       _MyStopI2C
       ___wmul
       _write
         _MyWriteI2C
           _MyIdleI2C
   _clr_led
     ___wmul
   _keypad_interrupt
   _send_note
   _set_led
     ___wmul
   _write
     _MyWriteI2C
       _MyIdleI2C
   _write_display
     _MyIdleI2C
     _MyStartI2C
     _MyStopI2C
     ___wmul
     _write
       _MyWriteI2C
         _MyIdleI2C

 _tc_int (ROOT)
   _is_key_pressed
     i2___wmul
   _was_key_pressed
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F4       7       95.3%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1C      62       5       76.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     50      52       1       65.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1A8      15        0.0%
DATA                 0      0     1A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Jan 06 20:07:15 2018

     is_key_pressed@matrix 000F                _SSPSTATbits 000FC7        ___wmul@multiplicand 002F  
              __CFG_BORV$3 000000               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                        l201 0BEE  
                      l210 0CD0                        l203 0C38                        l220 0DD4  
                      l212 0CE8                        l205 0C78                        l302 2342  
                      l230 0EA0                        l222 0E7A                        l311 2BC8  
                      l223 0DFE                        l215 0D6E                        l207 0CA6  
                      l320 0F30                        l400 036C                        l232 0EBE  
                      l160 07E8                        l305 2B12                        l225 0E16  
                      l209 0D82                        l330 10A8                        l322 0FA4  
                      l234 0ECA                        l218 0DA6                        l170 0A1A  
                      l162 08A0                        l307 2B1E                        l323 1150  
                      l227 0E62                        l171 09E2                        l324 0FD2  
                      l420 0628                        l412 04D6                        l404 0416  
                      l500 24A8                        l164 08B8                        l229 0E92  
                      l181 0A5E                        l350 1318                        l342 123C  
                      l326 0FEA                        l318 0F18                        l422 0640  
                      l430 077C                        l190 0B1A                        l166 0938  
                      l335 12DC                        l503 2592                        l183 0A8C  
                      l175 0A04                        l416 0580                        l440 1BB6  
                      l504 24E4                        l192 0B34                        l168 094A  
                      l433 1C24                        l513 25A6                        l185 0AA6  
                      l282 215E                        l274 2016                        l362 14AE  
                      l354 13D6                        l338 117E                        l426 06EA  
                      l434 1B24                        l506 258E                        l266 315E  
                      l194 0B66                        l186 0AF2                        l291 221E  
                      l283 20CE                        l275 1F86                        l347 147E  
                      l515 2650                        l507 250A                        l523 2708  
                      l187 0AE0                        l179 0A44                        l348 1300  
                      l380 0116                        l460 1D56                        l452 1CC8  
                      l436 1B30                        l516 25CC                        l196 0B80  
                      l293 222A                        l373 01B6                        l445 1D36  
                      l509 256A                        l525 2752                        l269 3168  
                      l189 0C50                        l622 3046                        l286 2202  
                      l278 20BA                        l366 156C                        l374 0046  
                      l470 1E5E                        l446 1C36                        l518 262C  
                      l526 27A8                        l534 1810                        l198 0BB8  
                      l287 2172                        l279 202A                        l527 27D8  
                      l551 184C                        l543 177C                        l199 0BD6  
                      l392 029C                        l376 005E                        l472 1E6A  
                      l464 1DDC                        l448 1C42                        l528 2814  
                      l625 306E                        l297 22B2                        l385 0330  
                      l457 1E4A                        l537 16BA                        l642 30DE  
                      l386 01D8                        l458 1D4A                        l627 305C  
                      l643 30FC                        l491 23E8                        l563 19BE  
                      l555 18F6                        l539 16D2                        l388 01F0  
                      l476 1EF0                        l548 1992                        l629 306A  
                      l397 04AA                        l485 2410                        l549 1834  
                      l638 3092                        l574 2C78                        l398 0354  
                      l494 24D0                        l486 2364                        l495 2422  
                      l567 1A68                        l576 2CD0                        l488 240C  
                      l497 24CC                        l489 238A                        l578 2D8E  
                      l498 2448               __CFG_CPB$OFF 000000               __CFG_CPD$OFF 000000  
                      prod 000FF3                        wreg 000FE8               __CFG_IESO$ON 000000  
             __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000                       l6003 1CC0  
                     l5213 30FC                       l6031 1D4E                       l3375 3154  
                     l6025 1D42                       l5323 20C6                       l6131 2382  
                     l6123 235C                       l5423 2B0A                       l6071 1E56  
                     l6207 2502                       l5249 2CC0                       l5521 107C  
                     l6049 1DD4                       l6161 241A                       l6305 2814  
                     l5259 2D7C                       l5347 216A                       l5275 1F7E  
                     l5507 0FDA                       l6403 17FC                       l5373 2216  
                     l5429 2B16                       l5605 1308                       l5541 113A  
                     l6077 1E62                       l6245 25C4                       l6237 259E  
                     l5527 1098                       l6095 1EE8                       l6431 18CC  
                     l5449 2BC0                       l5625 13C6                       l5481 0F20  
                     l5705 004E                       l6169 2440                       l6601 0946  
                     l5379 2222                       l5299 2022                       l5619 13AA  
                     l5555 116E                       l5475 0F08                       l5723 0106  
                     l6419 183C                       l5653 149E                       l5493 0FAA  
                     l5717 00EA                       l6285 2700                       l6461 19A2  
                     l6437 18E6                       l6373 16C2                       l6525 07D8  
                     l5399 22AA                       l5639 1468                       l5575 122C  
                     l5815 0406                       l5751 01E0                       l5735 01A2  
                     l6199 24DC                       l6455 1988                       l6391 176C  
                     l5673 155C                       l5569 1210                       l5497 0FB0  
                     l5905 06DA                       l5809 03EC                       l6297 27A8  
                     l6449 1976                       l6385 1752                       l5667 1540  
                     l5843 04C6                       l5827 0496                       l5763 0270  
                     l6467 19AE                       l6811 0E06                       l6715 0BDE  
                     l6707 0BBE                       l6651 0AD0                       l6571 08A8  
                     l6563 0878                       l5589 12CE                       l5917 076A  
                     l5861 0570                       l5837 04BA                       l5781 031C  
                     l5933 1B1C                       l6485 1A58                       l6805 0DEE  
                     l6733 0C44                       l6709 0BC6                       l6661 0AEE  
                     l6581 0902                       l6565 0890                       l5687 15FE  
                     l5855 0556                       l6479 1A3E                       l6823 0E68  
                     l6591 0928                       l5873 0600                       l5769 028C  
                     l6497 1AE8                       l6729 0C3E                       l6585 0908  
                     l5939 1B28                       l6827 0E6E                       l6763 0CD8  
                     l5797 035C                       l5957 1BAE                       l6837 0E98  
                     l6781 0D7A                       l6757 0CC0                       l6669 0B0A  
                     l5887 0630                       l5985 1C3A                       l6777 0D74  
                     l5899 06C0                       l5979 1C2E                       u7110 2C76  
                     u7104 2E8E                       u8000 0270                       u7105 2E88  
                     u7050 3082                       u7130 2D7C                       u8030 031C  
                     u7320 2290                       u8120 0496                       u8040 032E  
                     u7154 2DD8                       u7410 2BAA                       u8210 0600  
                     u8130 04A8                       u7155 2DD2                       u7500 0FB0  
                     u8220 060C                       u8060 0352                       u7350 2318  
                     u8230 0626                       u7360 2320                       u7440 2C54  
                     u7520 0FD0                       u9200 1752                       u7370 2330  
                     u8090 03EC                       u7700 12FE                       u8260 06C0  
                     u8180 0556                       u7550 107C                       u8350 1B96  
                     u9230 17FC                       u7640 1210                       u8440 1CA8  
                     u9320 1976                       u9240 180E                       u9160 169E  
                     u7730 13AA                       u7490 0FAA                       u8290 076A  
                     u8530 1DBC                       u9410 1AE8                       u9330 1988  
                     u9170 16B8                       u7820 1540                       u7580 113A  
                     u8620 1ED0                       u8380 1C1C                       u9420 1AF4  
                     u9260 1832                       u9500 0946                       u7670 12CE  
                     u7590 114E                       u7910 00EA                       u8470 1D2E  
                     u7760 1468                       u8560 1E42                       u8720 2406  
                     u9440 0878                       u7850 15FE                       u7770 147C  
                     u8650 1F56                       u9290 18CC                       u7940 01A2  
                     u8660 1F5E                       u9380 1A3E                       u9540 09C0  
                     u7950 01B4                       u9710 0BBE                       u9630 0AEE  
                     u9470 0902                       u7880 0044                       u9560 09F6  
                     u9480 0908                       u7970 01D6                       u8930 264A  
                     u8860 2588                       u8790 24C6                       u9750 0C3E  
                     u9760 0C44                       u8970 2762                       u8990 27E8  
                     u9870 0D74                       u9880 0D7A                       u9980 0E68  
                     u9990 0E6E               __CFG_WDTPS$1 000000                       _TRMT 007D61  
 __size_of_was_key_pressed 00A2                       _main 077E                       _temp 0080  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr2h 000FDA  
                     fsr0l 000FE9                       indf2 000FDF                       fsr1l 000FE1  
                     fsr2l 000FD9                       btemp 0053                       prodh 000FF4  
                     prodl 000FF3                       start 000E              __CFG_MCLRE$ON 000000  
             ___param_bank 000000            __end_of_Buttons 7F39                      ?_main 0001  
                    u10040 0EC4                      u10117 07C8                      u10207 1DC6  
                    u10127 0914                      u10217 1EDA                      u10137 175C  
                    u10307 154A                      u10227 00F4                      u10147 18D6  
                    u10317 2BB4                      u10237 027A                      u10157 1A48  
                    u10327 1FCA                      u10247 03F6                      u10167 26C0  
                    u10337 206E                      u10257 0560                      u10177 281E  
                    u10347 2112                      u10267 06CA                      u10187 1BA0  
                    u10357 21B6                      u10277 1086                      u10197 1CB2  
                    u10367 229A                      u10287 121A                      u10377 2336  
                    u10297 13B4                      i2l250 2A3C                      i2l251 2A4C  
                    i2l244 2996                      i2l253 2A58                      i2l246 2AA8  
                    i2l255 2AA0                      i2l247 29BE                      i2l249 2A0A  
                    _SPBRG 000FAF                      _TXREG 000FAD              __CFG_PWRT$OFF 000000  
            __CFG_WRT0$OFF 000000              __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_FCMEN$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000            __end_of_clr_led 2E46  
           __CFG_EBTR3$OFF 000000             write_display@i 003B             write_display@j 0039  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
           __CFG_EBTRB$OFF 000000                      _arrow 79AD                      _count 0051  
                    _show5 7E39                      _press 0100                      main@h 00D3  
                    main@i 00DE                      main@j 00DC                      main@k 00D9  
                    main@m 00DB                      main@n 00DA                      main@x 00D4  
                    main@y 00D5                      _write 30D8             send_note@three 002E  
          __end_of_show0_1 7FB3            __end_of_show0_2 7F8B            __end_of_show0_3 7BCD  
          __end_of_show3_1 7DB9            __end_of_show3_2 7F63            __end_of_show3_3 7FDF  
          __end_of_show4_1 7EF9            __end_of_show4_2 7D69            __end_of_show4_3 7D09  
          __end_of_show4_4 7EB9            __end_of_show7_1 7C41            __end_of_show7_2 7B55  
          __end_of_set_led 2EF4                      pclath 000FFA                      tablat 000FF5  
         __end_ofi2___wmul 3152                      status 000FD8                      wtemp6 0054  
           __CFG_PBADEN$ON 000000   __end_of_keypad_interrupt 31C6            __initialization 3096  
             __end_of_main 0ECC                 _MyCloseI2C 31CE                     ??_main 00CF  
            __activetblptr 000002                 _MyStartI2C 31CA                     ?_write 0001  
                   i2l5001 29B6                     i2l5023 2A50                     i2l5017 2A44  
                   i2l4989 298E                 _MyWriteI2C 3038         __size_of_MyIdleI2C 0012  
                   _SSPADD 000FC8                     _SSPBUF 000FC9                     _i2xy64 7DF9  
           __CFG_XINST$OFF 000000         __size_of_MyOpenI2C 001E          ??_was_key_pressed 0007  
                   ___wmul 3106             __CFG_STVREN$ON 000000         __size_of_MyStopI2C 0004  
                   _ledLUT 7FEF                     _circle 7C41                     _column 00C1  
                   clear_0 30B4                     clear_1 30C0                     _tc_int 0008  
                ??_clr_led 0033               __mediumconst 79AC                     tblptrh 000FF7  
                   tblptrl 000FF6                  ??_set_led 0033                     tblptru 000FF8  
               __accesstop 0080    __end_of__initialization 30CA              main@sync_mode 00D6  
            ___rparam_used 000001             __pcstackCOMRAM 0001               __pidataBANK0 31D2  
              ?_MyCloseI2C 0001              __end_of_arrow 7AAD              __end_of_show5 7E79  
            __end_of_write 3106          __end_of_MyIdleI2C 31B8                  ?i2___wmul 0001  
   __size_of_write_display 0134          __end_of_MyOpenI2C 3192              ??_Myusartinit 002D  
        __end_of_MyStopI2C 31CA                ?_MyStartI2C 0001                    ??_write 002F  
               __pbssBANK0 0080                 __pbssBANK1 0100                ?_MyWriteI2C 0001  
                  ?___wmul 002D                 _animation0 1F6A                 _animation1 2AF8  
               _animation2 0ECC                 _animation3 0012                 _animation4 1AFE  
               _animation5 2344                 _animation6 2654                 _animation7 160C  
          is_key_pressed@k 0013         __size_of_send_note 0022                    ?_tc_int 0001  
               ??i2___wmul 0005    __size_of_is_key_pressed 00A2                    _SSPCON1 000FC6  
                  _SSPCON2 000FC5          is_key_pressed@led 0011                    _SSPSTAT 000FC7  
      __size_of_MyCloseI2C 0004        __end_of_Myusartinit 31A6              _write_display 2C5C  
                  _Buttons 7EF9                    __Hparam 0000                    __Lparam 0000  
        ?_keypad_interrupt 0001            __size_of___wmul 0026         ??_keypad_interrupt 002D  
      __size_of_MyStartI2C 0004                    __pcinit 3096                    __ramtop 0600  
          __size_of_tc_int 2AF0                    __ptext0 077E                    __ptext1 3152  
                  __ptext2 31B8                    __ptext3 160C                    __ptext4 2654  
                  __ptext5 2344                    __ptext6 1AFE                    __ptext7 0012  
                  __ptext8 0ECC                    __ptext9 2AF8                    _clr_led 2D90  
      __size_of_MyWriteI2C 005E          __end_of_drum_midi 7DF9         MyWriteI2C@data_out 002E  
        __end_of_buttonLUT 7FEF                    _show0_1 7F8B                    _show0_2 7F63  
                  _show0_3 7B55                    _show3_1 7D69                    _show3_2 7F39  
                  _show3_3 7FCB                    _show4_1 7EB9                    _show4_2 7D09  
                  _show4_3 7CA9                    _show4_4 7E79                    _show7_1 7BCD  
                  _show7_2 7AAD                    _set_led 2E46             __pintcode_body 2926  
          _was_key_pressed 2EF4       end_of_initialization 30CA          __end_of_send_note 3174  
            __Lmediumconst 79AC             ?_write_display 0001                    int_func 2926  
      i2___wmul@multiplier 0001                    tc_int@h 002C                    tc_int@i 002B  
                  tc_int@j 002A                  _RCSTAbits 000FAB                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE                ?_animation0 0042  
              ?_animation1 0042                ?_animation2 0042                ?_animation3 0001  
              ?_animation4 0042                ?_animation5 0042                ?_animation6 0042  
              ?_animation7 0001                 clr_led@led 0040                  _TRISBbits 000F93  
                _TRISCbits 000F94                _Myusartinit 3192                  _TXSTAbits 000FAC  
           __end_of_i2xy64 7E39               ??_MyCloseI2C 002D             __end_of___wmul 312C  
              _BAUDCONbits 000FB8             __end_of_ledLUT 7FFF             __end_of_circle 7CA9  
         _horizental_flash 7FB3             __end_of_tc_int 2AF8           i2___wmul@product 0005  
  __end_of_was_key_pressed 2F96        start_initialization 3096          __size_ofi2___wmul 0026  
           _is_key_pressed 2F96               _in_interrupt 00C0                  _MyIdleI2C 31A6  
             ??_MyStartI2C 002D        __size_of_animation0 03DA        __size_of_animation1 0164  
      __size_of_animation2 0740        __size_of_animation3 076C        __size_of_animation4 046C  
      __size_of_animation5 0310        __size_of_animation6 02D2            ??_write_display 0033  
      __size_of_animation7 04F2                  _MyOpenI2C 3174         __end_of_MyCloseI2C 31D2  
             ??_MyWriteI2C 002E           __CFG_OSC$INTIO67 000000                  _MyStopI2C 31C6  
                 ??___wmul 0031                __pdataBANK0 00E0           __CFG_LPT1OSC$OFF 000000  
                 ??_tc_int 0014         __end_of_MyStartI2C 31CE     __end_of_is_key_pressed 3038  
       __end_of_MyWriteI2C 3096                __pbssCOMRAM 0051              __pcstackBANK0 00C4  
       MyOpenI2C@sync_mode 002E                 ?_MyIdleI2C 0001                 ?_MyOpenI2C 002D  
               ?_MyStopI2C 0001          __CFG_CCP2MX$PORTC 000000                  __pintcode 0008  
            __pmediumconst 79AC              set_led@matrix 003B                   ?_clr_led 0001  
          ?_is_key_pressed 0001           ?_was_key_pressed 0001  __size_of_keypad_interrupt 000E  
                 ?_set_led 0001                  _drum_midi 7DB9                  _buttonLUT 7FDF  
               set_led@led 003E             __size_of_write 002E             ___wmul@product 0031  
       was_key_pressed@led 0011                  _play_mode 00E0                  _send_note 3152  
            animation2@col 00C5              animation2@row 00C7                   _PIR1bits 000F9E  
                 i2u601_44 302E                   i2u601_45 302A                   i2u602_44 2F8C  
                 i2u602_45 2F88                   _PIR2bits 000FA1                   i2u672_40 2A40  
                 i2u676_40 2AA4                   i2u678_40 2AAC                   _RCONbits 000FD0  
              write@status 0031               ??_animation0 0043               ??_animation1 0043  
             ??_animation2 0044               ??_animation3 0042               ??_animation4 0043  
             ??_animation5 0044               ??_animation6 0043               ??_animation7 0042  
        ___wmul@multiplier 002D                   i2___wmul 312C                ??_MyIdleI2C 002D  
             ?_Myusartinit 0001                _INTCON2bits 000FF1               send_note@one 002F  
             send_note@two 002D                ??_MyOpenI2C 002E         __end_of_animation0 2344  
       __end_of_animation1 2C5C         __end_of_animation2 160C         __end_of_animation3 077E  
       __end_of_animation4 1F6A         __end_of_animation5 2654         __end_of_animation6 2926  
       __end_of_animation7 1AFE   __end_of_horizental_flash 7FCB                ??_MyStopI2C 002D  
    was_key_pressed@matrix 000F                 ?_send_note 002D                   __Hrparam 0000  
            MyOpenI2C@slew 002D                   __Lrparam 0000         __CFG_BOREN$SBORDIS 000000  
    i2___wmul@multiplicand 0003           __size_of_clr_led 00B6                   __ptext10 1F6A  
                 __ptext11 2C5C                   __ptext20 3192                   __ptext12 30D8  
                 __ptext21 3174                   __ptext13 3038                   __ptext22 31CE  
                 __ptext14 31A6                   __ptext15 31C6                   __ptext24 2EF4  
                 __ptext16 31CA                   __ptext25 2F96                   __ptext17 2E46  
                 __ptext26 312C                   __ptext18 2D90                   __ptext19 3106  
         __size_of_set_led 00AE              __size_of_main 074E                   _matrices 0180  
                 clr_led@i 003F                   int$flags 0053                   main@note 00D8  
                 main@slew 00D7                 _INTCONbits 000FF2           _keypad_interrupt 31B8  
            write@data_out 0030                   intlevel2 0000      __end_of_write_display 2D90  
            clr_led@matrix 003D                _rightbutton 00C2                ??_send_note 002F  
                 set_led@i 003D                 _OSCCONbits 000FD3           was_key_pressed@k 0013  
                write@data 002F                animation0@i 0049                animation0@j 0048  
              animation1@i 0048                animation0@m 0047                animation1@j 0049  
              animation0@n 0042                animation2@h 0043                animation1@m 0046  
              animation2@i 00CB                animation1@n 0042                animation2@j 00CD  
              animation3@i 0047                animation2@m 00C4                animation3@j 0049  
              animation2@n 0042                animation0@x 0045                animation4@h 0042  
              animation6@a 0048                animation4@i 0046                animation3@m 0046  
              animation6@b 004A                animation4@j 0047                animation6@c 004C  
              animation6@d 004E                animation1@x 0047                animation5@h 0043  
              animation5@i 0048                animation4@m 0045                animation5@j 0047  
              animation2@x 00C9                animation5@m 0046                animation5@n 0042  
              animation7@h 0044                animation6@m 0050                animation7@i 0045  
              animation7@j 0047                animation6@n 0042                animation5@x 0049  
              animation6@x 0047           ??_is_key_pressed 0007               _press_button 00C3  
              _SSPCON1bits 000FC6                _SSPCON2bits 000FC5       __size_of_Myusartinit 0014  
